/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 3 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"

#include "StdH.h"

#include <Engine/Effect/CWorldTag.h>
#include <Engine/Effect/CEffectGroup.h>
#include <Engine/Effect/CEffectGroupManager.h>
#include <Engine/Effect/CSkaEffect.h>
#include <Engine/Graphics/Color.h>
#include <Engine/Entities/ItemData.h>
#include <Engine/Network/ItemTarget.h>
#include <deque>
#include <Engine/Entities/Skill.h>
#include <Engine/Network/MessageDefine.h>
#include <Engine/Interface/UIManager.h>

#include "EntitiesMP/RestrictedField.h"
#include "EntitiesMP/Common/RestrictedFieldContainer.h"

#define MOB_DOOMSLAYER	158
#define MOB_BAAL		152

#define MOB_ATTACK_MOTION_NUM		(4)

struct sSkillEffectInfo
{
	void InitForNormalAttack(CMobData &mob, INDEX aniID)
	{
		m_bSkillAttack = FALSE;
		szEffectNameCast = mob.GetFireEffect0();
		szEffectNameMissile = mob.GetFireEffect1();
		szEffectNameHit = mob.GetFireEffect2();
		iFireDelayCount = mob.GetDelayCount();
		fFireDelay[0] = mob.GetDelay(0);
		fFireDelay[1] = mob.GetDelay(1);
		fFireDelay[2] = mob.GetDelay(2);
		fFireDelay[3] = mob.GetDelay(3);
		iMissileType = mob.GetMissileType();
		fMissileSpeed = mob.GetMissileSpeed();
		iAnimatioID = aniID;
		dwValidValue = 0x00000000;
	}
	void InitForSkillAttack(CSkill &skill)
	{
		m_bSkillAttack = TRUE;
		szEffectNameCast = skill.GetFireEffect1(0);
		szEffectNameMissile = skill.GetFireEffect2(0);
		szEffectNameHit = skill.GetFireEffect3(0);
		iFireDelayCount = skill.GetDelayCount(0);
		fFireDelay[0] = skill.GetDelay(0,0);
		fFireDelay[1] = skill.GetDelay(1,0);
		fFireDelay[2] = skill.GetDelay(2,0);
		fFireDelay[3] = skill.GetDelay(3,0);
		iMissileType = skill.GetMissileType(0);
		fMissileSpeed = skill.GetMissileSpeed(0);
		iAnimatioID = skill.idPlayer_Anim_Skill[0][2];
		dwValidValue = 0x00000000;
	}
	
	BOOL		m_bSkillAttack;
	const char	*szEffectNameCast;
	const char	*szEffectNameMissile;
	const char	*szEffectNameHit;
	int			iFireDelayCount;
	FLOAT		fFireDelay[4];
	int			iMissileType;
	FLOAT		fMissileSpeed;
	INDEX		iAnimatioID;
	DWORD		dwValidValue;
};
#define SkillEffectInfo() ((sSkillEffectInfo*)m_pSkillEffectInfo)

//-----------------------------------------------------------------------------
// Purpose: 컨테이너 내의 모든 엔티티에 한번에 데미지를 줍니다.
// Input  : pEntity - 
//			sTI - 
//			vCenter - 
// Output : static void
//-----------------------------------------------------------------------------
void DamagedTargetsInRange(CEntity* pEntity, CSelectedEntities& dcEntities, enum DamageType dmtType, FLOAT fDamageAmmount, FLOAT3D vCenter, BOOL bSkill);

void ShotFallDown(FLOAT3D vStartPos, FLOAT3D vToTargetDir, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szFallObjEffectName
				 , bool bCritical);
void GetTargetDirection(CEntity *penMe, CEntity *penTarget, FLOAT3D &vTargetPos, FLOAT3D &vDirection)
{
	if(penTarget == NULL) {return;}

	if(penTarget == penMe)
	{
		vTargetPos = penMe->en_plPlacement.pl_PositionVector;
		vDirection = FLOAT3D(0,1,1);
		return;
	}
	FLOAT3D vCurrentCenter(((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[0],
	((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[1],
	((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[2] );
	FLOAT3D vCurrentPos = penMe->en_plPlacement.pl_PositionVector + vCurrentCenter;
	FLOAT3D vTargetCenter(0, 0, 0);
	vTargetPos = FLOAT3D(0, 0, 0);
	vDirection = FLOAT3D(0, 0, 0);
	FLOAT size = 0;
	if(penTarget != NULL && penTarget->GetFlags()&ENF_ALIVE)
	{
		if(penTarget->en_RenderType == CEntity::RT_SKAMODEL)
		{
			// Bounding Box를 이용하여 Effect를 찍을 위치를 찾는다.
			FLOATaabbox3D bbox;
			penTarget->GetModelInstance()->GetCurrentColisionBox(bbox);
			FLOAT3D vRadius = (bbox.maxvect - bbox.minvect) * 0.5f * 0.4f/*단순히 원으로 하면 너무 큼. 사이즈 조절 상수*/;
			size = vRadius.Length();
		}
		vTargetCenter = FLOAT3D(((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[0],
		((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[1],
		((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[2] );
		vTargetPos = penTarget->en_plPlacement.pl_PositionVector + vTargetCenter;
		vDirection = vTargetPos - vCurrentPos;
		vDirection.Normalize();
		vTargetPos -= vDirection * size;
	}
	vDirection.Normalize(); 				
};

ENGINE_API void SetDropItemModel(CEntity *penEntity, CItemData &ItemData, CItemTarget &it);

#include <EntitiesMP/Enemy.h>
#include <EntitiesMP/Enemy_tables.h>
CEntityEvent *EAttackDamage::MakeCopy(void) { CEntityEvent *peeCopy = new EAttackDamage(*this); return peeCopy;}
SLONG EAttackDamage::GetSizeOf(void) { return sizeof(*this);}
EAttackDamage::EAttackDamage() : CEntityEvent(EVENTCODE_EAttackDamage) {;
};
BOOL EAttackDamage::CheckIDs(void) { return TRUE ; }
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"

// info structure
static EntityInfo eiMobBoss = {
	EIBT_FLESH, 200.0f,
	//0.0f, 1.75f*m_fStretch, 0.0f,     // source (eyes)
	//0.0f, 1.30f*m_fStretch, 0.0f,     // target (body)
	0.0f, 1.75f*1.0f, 0.0f,     // source (eyes)
	0.0f, 1.30f*1.0f, 0.0f,     // target (body)
};

//안태훈 수정 시작	//(Effect Add & Modify for Close Beta)(0.1)
static INDEX g_iNPCMinBrightness = 32;	//명도 0~240
void CEnemy_OnInitClass(void)
{
	_pShell->DeclareSymbol("persistent user INDEX g_iNPCMinBrightness;", &g_iNPCMinBrightness);
}
//안태훈 수정 끝	//(Effect Add & Modify for Close Beta)(0.1)

void ShotMissile(CEntity *penShoter, const char *szShotPosTagName
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szArrowEffectName
				 , bool bCritical
				 , FLOAT fHorizonalOffset = 0.0f, FLOAT fVerticalOffset = 0.0f	//-1.0f ~ 1.0f
				 , INDEX iArrowType = 0, const char *szMissileModel = NULL);
void ShotMagicContinued(CEntity *penShoter, FLOAT3D vStartPos, FLOATquat3D qStartRot
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szMagicEffectName
				 , bool bCritical, INDEX iOrbitType, BOOL bDirectTag = FALSE);

void CEnemy::SetDefaultProperties(void) {
  m_MobType = MOB_ENEMY ;
  m_fBodyAnimTime = -1.0f;
  m_nMobDBIndex = 0;
  m_iRegenTime = 300;
  m_fStretch = 1.0f;
  m_AttackType = ATK_NORMAL ;
  idMob_Start = -1;
  idMob_Walk = -1;
  idMob_Attack = -1;
  idMob_Default = -1;
  idMob_Death = -1;
  idMob_Wound = -1;
  idMob_NormalBox = -1;
  idMob_Attack2 = -1;
  idMob_Run = -1;
  idMob_Default2 = -1;
  idMob_Attack3 = -1;
  idMob_Attack4 = -1;
  m_iTotalNum = -1;
  m_bBoss = FALSE ;
  m_strName = "Enemy";
  m_nMobClientIndex = -1;
  m_zfZoneFlagBits = 0;
  m_efExtraBits = 0;
  m_bPreCreate = FALSE ;
  m_bHostageNpc = FALSE ;
  m_EventType = EVENT_NONE ;
  m_penEventTarget = NULL;
  m_bInit = FALSE ;
  m_bIsRun = FALSE ;
  m_bDie = FALSE ;
  CEnemyBase::SetDefaultProperties();
}
  
#line 247 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
BOOL CEnemy::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 248 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEnemyBase  :: AdjustShadingParameters  (vLightDirection  , colLight  , colAmbient );
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE ;
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  FLOAT CEnemy::GetLockRotationSpeed(void) 
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return AngleDeg  (1800.0f);
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::OnInitialize(const CEntityEvent & eeInput) 
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEnemyBase  :: OnInitialize  (eeInput );
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::OnEnd(void) 
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEnemyBase  :: OnEnd  ();
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  BOOL CEnemy::IsMovable() 
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bUseAI )
#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bStuned  || m_bHold )
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 294 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return FALSE ;
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE ;
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  BOOL CEnemy::IsAttackable() 
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(IsFirstExtraFlagOn  (ENF_EX1_NPC ))
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return FALSE ;
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(m_bUseAI )
#line 308 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bStuned  || m_bHold )
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 311 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return FALSE ;
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE ;
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  CTString CEnemy::GetPlayerKillDescription(const CTString & strPlayerName,const EDeath & eDeath) 
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CTString str ;
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
str  . PrintF  (TRANS  ("A %s sent %s into the halls of Valhalla") , m_strName  , strPlayerName );
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return str ;
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  BOOL CEnemy::IsBossMob() 
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return m_bBoss ;
#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  BOOL CEnemy::IsSkillAttack() 
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
float  frandom  = FRnd  ();
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(frandom  > 0.2f)
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 339 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return FALSE ;
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bUseAI )
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bCannotUseSkill ){return FALSE ;}
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (m_nMobDBIndex );
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(MD  . GetSkill0Index  () <= 0 && MD  . GetSkill1Index  () <= 0)
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return FALSE ;
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
float  frandom  = FRnd  ();
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(frandom  > 0.5f && MD  . GetSkill1Index  () > 0)
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_nCurrentSkillNum  = MD  . GetSkill1Index  ();
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 359 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_nCurrentSkillNum  = MD  . GetSkill0Index  ();
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CSkill  & rSkill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 365 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if((CalcDist  (m_penEnemy ) < rSkill  . GetFireRange  () && CanHitEnemy  (m_penEnemy  , Cos  (AngleDeg  (45.0f)))))
#line 366 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 367 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX iMobIndex  = GetNetworkID  ();
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CNetworkMessage  nmMobMove  (MSG_MOVE );
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
UBYTE  ubCharType  = (UBYTE ) MSG_CHAR_NPC ;
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
UBYTE  ubMoveType  = (UBYTE ) MSG_MOVE_STOP ;
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT fSpeed  = 0.0f;
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CPlacement3D pl  = GetLerpedPlacement  ();
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << ubCharType ;
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << ubMoveType ;
#line 377 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << (ULONG ) iMobIndex ;
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << fSpeed ;
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << pl  . pl_PositionVector  (1);
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << pl  . pl_PositionVector  (3);
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << pl  . pl_PositionVector  (2) + 0.5f;
#line 382 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << pl  . pl_OrientationAngle  (1);
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmMobMove  << _pNetwork  -> MyCharacterInfo  . yLayer ;
#line 384 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> SendToServerNew  (nmMobMove );
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CTString strSysMessage ;
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CNetworkMessage  nmPlayerSkill  (MSG_SKILL );
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (UBYTE ) MSG_SKILL_READY ;
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ULONG  nSkillIndex  = m_nCurrentSkillNum ;
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
UBYTE  ubCharType  = (UBYTE ) MSG_CHAR_NPC ;
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << ubCharType ;
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << iMobIndex ;
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (ULONG ) nSkillIndex ;
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
LONG  nTargetType ;
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nTargetType  = MSG_CHAR_PC ;
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (unsigned  char ) nTargetType ;
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (ULONG ) _pNetwork  -> MyCharacterInfo  . index ;
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (SBYTE ) 0;
#line 401 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> SendToServerNew  (nmPlayerSkill );
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 404 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CTString strSysMessage ;
#line 405 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CNetworkMessage  nmPlayerSkill  (MSG_SKILL );
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (UBYTE ) MSG_SKILL_FIRE ;
#line 407 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ULONG  nSkillIndex  = m_nCurrentSkillNum ;
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
UBYTE  ubCharType  = (UBYTE ) MSG_CHAR_NPC ;
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << ubCharType ;
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << iMobIndex ;
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (ULONG ) nSkillIndex ;
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
LONG  nTargetType ;
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nTargetType  = MSG_CHAR_PC ;
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (unsigned  char ) nTargetType ;
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (ULONG ) _pNetwork  -> MyCharacterInfo  . index ;
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
nmPlayerSkill  << (SBYTE ) 0;
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> SendToServerNew  (nmPlayerSkill );
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE ;
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_nCurrentSkillNum  = - 1;
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return FALSE ;
#line 425 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 428 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void * CEnemy::GetEntityInfo(void) 
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 430 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return & eiMobBoss ;
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 433 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::Precache(void) 
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEnemyBase  :: Precache  ();
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bPreCreate )
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(_pNetwork  && _pNetwork  -> m_bSingleMode  && _pNetwork  -> ga_World  . wo_iNumOfNPC )
#line 441 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 442 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
en_pwoWorld  -> m_vectorPreCreateNPC  . push_back  (this );
#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 448 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(en_pmiModelInstance ){en_pmiModelInstance  -> m_tmSkaTagManager  . SetOwner  (this );}
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  BOOL CEnemy::IsEnemy(void)const 
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE ;
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::InflictDirectDamage(CEntity * penToDamage,CEntity * penInflictor,enum DamageType dmtType,
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(penToDamage )
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! (penToDamage  -> GetFlags  () & ENF_ALIVE )){return ;}
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pUIMgr  -> ShowDamage  (penToDamage  -> en_ulID );
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX preHealth  , curHealth ;
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
preHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
curHealth  = ((CUnit  *) penToDamage ) -> m_nCurrentHealth ;
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(preHealth  != - 1)
#line 473 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
fDamageAmmount  = 1;
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((CUnit  *) penToDamage ) -> m_nCurrentHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 476 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 477 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else fDamageAmmount  = 0;
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((CUnit  *) penToDamage ) -> m_nPreHealth  = - 1;
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEntity  :: InflictDirectDamage  (penToDamage  , penInflictor  , dmtType  , 
#line 483 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
fDamageAmmount  , vHitPoint  , vDirection );
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(penToDamage  && penToDamage  -> IsEnemy  ())
#line 486 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 487 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
const INDEX iMobIndex  = ((CEnemy  *) penToDamage ) -> m_nMobDBIndex ;
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iMobIndex  == LORD_SYMBOL_INDEX )
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (iMobIndex );
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX iCurHealth  = ((CUnit  *) ((CEntity  *) penToDamage )) -> m_nCurrentHealth ;
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static INDEX iType  = 0;
#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
float  fMaxHealth  = MD  . GetHealth  ();
#line 495 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iCurHealth  <= fMaxHealth  * 0.25f)
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 497 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iType  != 1)
#line 498 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 499 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
iType  = 1;
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword04.smc");
#line 501 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 503 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 504 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iCurHealth  <= fMaxHealth  * 0.50f)
#line 505 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iType  != 2)
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
iType  = 2;
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword03.smc");
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 511 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 512 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iCurHealth  <= fMaxHealth  * 0.75f)
#line 514 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 515 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iType  != 3)
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
iType  = 3;
#line 518 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword02.smc");
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 520 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 524 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iType  != 0)
#line 525 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 526 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
iType  = 0;
#line 527 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> SetSkaModel  (MD  . GetMobSmcFileName  ());
#line 528 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 529 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 530 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 534 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(penToDamage )
#line 535 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(((CUnit  *) penToDamage ) -> m_nCurrentHealth  <= 0 && penToDamage  != this )
#line 537 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 538 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((CUnit  *) ((CEntity  *) penToDamage )) -> DeathNow  ();
#line 539 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 541 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 547 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 548 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 549 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 550 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(dmtType  != DMT_NONE  && fDamageAmmount  > 0)
#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 552 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT angle  = acos  (vDirection  % vAxisY );
#line 554 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D axis  = vAxisY  * vDirection ;
#line 555 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
axis  . Normalize  ();
#line 556 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOATquat3D quat ;
#line 557 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
quat  . FromAxisAngle  (axis  , angle );
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StartEffectGroup  ("Normal Hit" 
#line 559 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, _pTimer  -> GetLerpedCurrentTick  () , vHitPoint  , quat );
#line 560 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 561 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pUIMgr  -> ShowDamage  (en_ulID );
#line 564 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bUseAI  && ! (GetFirstExFlags  () & ENF_EX1_PEACEFUL ))
#line 565 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 567 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT fRand  = FRnd  ();
#line 568 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(fRand  > 0.5f)
#line 569 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 571 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(penInflictor  -> IsPlayer  () || penInflictor  -> IsSlave  () || penInflictor  -> IsWildPet  ())
#line 572 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 574 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetTargetEntity  (penInflictor );
#line 575 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 576 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 577 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 580 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX CEnemy::AnimForDamage(FLOAT fDamage) 
#line 587 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 588 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (idMob_Wound  != - 1 && "Invalid Animation");
#line 589 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 592 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (m_nMobDBIndex );
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(MD  . IsCastleTower  ())
#line 594 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 595 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return - 1;
#line 596 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 599 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! IsAnimationPlaying  (idMob_Default ) && 
#line 600 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
! IsAnimationPlaying  (idMob_Default2 ))
#line 601 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 602 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX animSet  , animIdx ;
#line 603 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 604 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(this  -> en_pmiModelInstance  
#line 605 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 606 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 608 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
this  -> en_pmiModelInstance  -> AddAnimation  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 609 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 610 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return animId ;
#line 611 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 613 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
NewClearState  (CLEAR_STATE_LENGTH );
#line 614 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Wound  , AN_CLEAR  , 1 , 0);
#line 616 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return idMob_Wound ;
#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 620 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX CEnemy::AnimForDeath(void) 
#line 621 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 622 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (idMob_Death  != - 1 && "Invalid Animation");
#line 626 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 627 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
NewClearState  (CLEAR_STATE_LENGTH );
#line 628 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Death  , AN_NORESTART  , 1 , 0);
#line 630 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return idMob_Death ;
#line 631 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 634 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT CEnemy::WaitForDust(FLOAT3D & vStretch) 
#line 635 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 637 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
vStretch  = FLOAT3D (1 , 1 , 1);
#line 638 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(GetModelInstance  () -> IsAnimationPlaying  (idMob_Death ))
#line 639 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 640 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return 0.5f;
#line 641 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 642 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return - 1.0f;
#line 643 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 645 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::DeathNotify(void) 
#line 646 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 648 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
en_fDensity  = 500.0f;
#line 650 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_EventType  == EVENT_MOBDESTROY )
#line 651 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 652 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SendToTarget  (m_penEventTarget  , EET_TRIGGER  , this );
#line 653 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 655 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(_pNetwork  -> m_bSingleMode )
#line 656 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 657 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
-- _pNetwork  -> wo_dwEnemyCount ;
#line 660 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_nMobDBIndex  != 220)
#line 661 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 662 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> wo_dwKilledEnemyCount  ++;
#line 663 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 666 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CRestrictedField  * pField  = FindPlayerInRestrictedField  ((CPlayer  *) CEntity  :: GetPlayerEntity  (0));
#line 667 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(pField )
#line 668 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 669 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(_pNetwork  -> wo_dwEnemyCount  <= pField  -> iMobCount )
#line 670 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 671 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
pField  -> m_bActive  = FALSE ;
#line 672 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SendToTarget  (pField  -> m_penTarget  , EET_TRIGGER  , CEntity  :: GetPlayerEntity  (0));
#line 673 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 674 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 676 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(_pNetwork  -> m_ubGMLevel  > 1)
#line 677 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 678 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CTString strMessage ;
#line 679 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
strMessage  . PrintF  ("=====current enemies : %d=====\n" , _pNetwork  -> wo_dwEnemyCount );
#line 680 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> ClientSystemMessage  (strMessage );
#line 681 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 682 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 683 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 686 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::ClickedEvent(void) 
#line 687 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 688 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_EventType  == EVENT_MOBCLICK )
#line 689 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 690 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SendToTarget  (m_penEventTarget  , EET_TRIGGER  , this );
#line 691 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 692 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 694 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::StartAnim(void) 
#line 695 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 696 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (idMob_Start  != - 1 && "Invalid Animation");
#line 697 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 698 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Start  , AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 699 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 702 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::StandingAnim(void) 
#line 703 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 704 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bIsRun  = FALSE ;
#line 705 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (idMob_Default  != - 1 && "Invalid Animation");
#line 706 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 708 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Default  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 709 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 710 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::RunningAnim(void) 
#line 711 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 712 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bIsRun  = TRUE ;
#line 713 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (idMob_Run  != - 1 && "Invalid Animation");
#line 714 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 715 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Run  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 716 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 717 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::WalkingAnim(void) 
#line 718 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 719 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bIsRun  = FALSE ;
#line 720 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (idMob_Walk  != - 1 && "Invalid Animation");
#line 721 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 722 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Walk  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 723 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 724 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::RotatingAnim(void) 
#line 725 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 726 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bIsRun )
#line 727 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 728 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
RunningAnim  ();
#line 729 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 730 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 731 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 732 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
WalkingAnim  ();
#line 733 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 734 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 735 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::AttackAnim(void) 
#line 736 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 737 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (idMob_Attack  != - 1 && "Invalid Animation");
#line 738 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 740 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static FLOAT start_attack_time  = 0;
#line 741 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static float  m_fBodyAnimTime  = 0;
#line 743 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(start_attack_time  == 0)
#line 744 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 745 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
start_attack_time  = _pTimer  -> CurrentTick  ();
#line 746 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Attack  , AN_NORESTART  | AN_CLEAR  , 1.0f , 0);
#line 747 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fBodyAnimTime  = GetModelInstance  () -> GetAnimLength  (idMob_Attack );
#line 748 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 749 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(start_attack_time  != 0 && (_pTimer  -> CurrentTick  () - start_attack_time  >= m_fBodyAnimTime ))
#line 750 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 751 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bAttack  = FALSE ;
#line 752 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
start_attack_time  = 0;
#line 753 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 755 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 758 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::EnemyPostInit(void) 
#line 759 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 761 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_soSound  . Set3DParameters  (30.0f , 5.0f , 1.0f , 1.0f);
#line 762 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 766 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::AddDeathItem(FLOAT3D pos,class CItemTarget * pItemTarget,class CItemData * pItemData) 
#line 767 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 768 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX cnt  = m_aDeathItemTargetDrop  . Count  ();
#line 769 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemPosDrop  . Expand  (cnt  + 1);
#line 770 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemPosDrop  [ cnt  ] = pos ;
#line 771 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemTargetDrop  . Expand  (cnt  + 1);
#line 772 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemTargetDrop  [ cnt  ] = * pItemTarget ;
#line 773 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemDataDrop  . Expand  (cnt  + 1);
#line 774 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemDataDrop  [ cnt  ] = pItemData ;
#line 775 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  void CEnemy::DropDeathItem() 
#line 778 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 779 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
for(INDEX i  = 0;i  < m_aDeathItemTargetDrop  . Count  ();++ i )
#line 780 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 781 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CItemTarget  * pItem  = NULL ;
#line 782 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
for(int  iItem  = 0;iItem  < _pNetwork  -> ga_srvServer  . srv_aitItem  . Count  ();++ iItem )
#line 783 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 784 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_aDeathItemTargetDrop  [ i  ] . item_Index  == _pNetwork  -> ga_srvServer  . srv_aitItem  [ iItem  ] . item_Index )
#line 785 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 786 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
pItem  = & (_pNetwork  -> ga_srvServer  . srv_aitItem  [ iItem  ]);
#line 787 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 788 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 789 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(pItem  == NULL ){continue ;}
#line 791 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CItemTarget  & it  = * pItem ;
#line 792 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
it  = m_aDeathItemTargetDrop  [ i  ];
#line 793 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CItemData  & ItemData  = * ((CItemData  *) m_aDeathItemDataDrop  [ i  ]);
#line 794 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
const char  * szItemData  = _pNetwork  -> GetItemName  (ItemData  . GetItemIndex  ());
#line 795 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEntity  * penEntity  = NULL ;
#line 796 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CPlacement3D plPlacement ;
#line 797 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
plPlacement  . pl_PositionVector  = m_aDeathItemPosDrop  [ i  ];
#line 798 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (0.0f , 0.0f , 0.0f);
#line 799 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (it  . item_pEntity  == NULL );
#line 800 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penEntity  = _pNetwork  -> ga_World  . CreateEntity_t  (plPlacement  , CLASS_ITEM  , - 1 , TRUE );
#line 801 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(penEntity  == NULL ){continue ;}
#line 803 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
it  . item_pEntity  = penEntity ;
#line 804 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
it  . item_iClientIndex  = penEntity  -> en_ulID ;
#line 805 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
penEntity  -> en_strItemName  = szItemData ;
#line 806 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetDropItemModel  (penEntity  , ItemData  , it );
#line 809 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(ItemData  . GetType  () == CItemData  :: ITEM_ETC  
#line 810 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
&& ItemData  . GetType  () == CItemData  :: ITEM_ETC_MONEY )
#line 811 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 812 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((CPlayerEntity  *) CEntity  :: GetPlayerEntity  (0)) -> PlayItemSound  (FALSE  , TRUE );
#line 813 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 814 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 815 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 816 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((CPlayerEntity  *) CEntity  :: GetPlayerEntity  (0)) -> PlayItemSound  (FALSE  , FALSE );
#line 817 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 818 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 819 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemPosDrop  . Clear  ();
#line 820 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemTargetDrop  . Clear  ();
#line 821 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aDeathItemDataDrop  . Clear  ();
#line 822 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
  
#line 824 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
void CEnemy::SkillAndAttackFire(int num) 
#line 825 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 828 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! (m_penEnemy  . ep_pen  != NULL  
#line 829 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
&& m_penEnemy  -> en_pmiModelInstance  != NULL  
#line 830 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
&& m_penEnemy  -> GetFlags  () & ENF_ALIVE ))
#line 831 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 832 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return ;
#line 833 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 836 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , FLOAT3D (0 , 0 , 0) , FLOAT3D (0 , 0 , 0));
#line 837 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
switch(SkillEffectInfo  () -> iMissileType )
#line 838 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 839 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 0: 
#line 840 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 841 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vHitPoint ;
#line 842 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vHitDir ;
#line 843 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetTargetDirection  (this  , m_penEnemy  , vHitPoint  , vHitDir );
#line 845 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_dcEnemies  . Count  () > 0)
#line 846 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 847 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , vHitPoint  , TRUE );
#line 848 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_dcEnemies  . Clear  ();
#line 849 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 850 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 851 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 853 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , vHitPoint  , vHitDir );
#line 854 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 856 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 857 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT angle  = acos  (vHitDir  % vAxisY );
#line 858 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D axis  = vAxisY  * vHitDir ;
#line 859 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
axis  . Normalize  ();
#line 860 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOATquat3D quat ;
#line 861 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
quat  . FromAxisAngle  (axis  , angle );
#line 862 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 863 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, _pTimer  -> GetLerpedCurrentTick  () 
#line 864 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, vHitPoint  , quat );
#line 865 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}break ;
#line 866 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 1: 
#line 867 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 868 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_dcEnemies  . Count  () > 0)
#line 869 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 870 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 871 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 872 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 873 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEntity  * pEn  = (* it );
#line 874 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 875 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 876 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ShotMissile  (this  , "RHAND" , pEn  , SkillEffectInfo  () -> fMissileSpeed  , "Normal Hit" , "Normal Arrow Trace" , false );
#line 877 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 878 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 879 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 880 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 881 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 882 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ShotMissile  (this  , "RHAND" , m_penEnemy  , SkillEffectInfo  () -> fMissileSpeed  , "Normal Hit" , "Normal Arrow Trace" , false );
#line 883 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 884 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}break ;
#line 885 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 2: 
#line 886 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 887 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 888 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 889 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 890 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}break ;
#line 891 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 3: 
#line 892 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 893 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D lastEffectInfo  = m_penEnemy  -> en_plPlacement  . pl_PositionVector ;
#line 894 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
lastEffectInfo  (2) += 1;
#line 895 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_pSkillReadyEffect  != NULL  && CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pSkillReadyEffect ))
#line 896 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 897 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
for(INDEX i  = 0;i  < m_pSkillReadyEffect  -> GetEffectCount  ();++ i )
#line 898 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 899 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEffect  * pEffect  = m_pSkillReadyEffect  -> GetEffectKeyVector  () [ i  ] . m_pCreatedEffect ;
#line 900 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(pEffect  != NULL  && pEffect  -> GetType  () == ET_SKA )
#line 901 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 902 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CSkaEffect  * pSkaEffect  = (CSkaEffect  *) pEffect ;
#line 903 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
lastEffectInfo  = pSkaEffect  -> GetInstancePosition  ();
#line 904 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
break ;
#line 905 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 906 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 907 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(num  == SkillEffectInfo  () -> iFireDelayCount )
#line 908 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 909 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillReadyEffect  -> Stop  (0.04f);
#line 910 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 911 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 912 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_dcEnemies  . Count  () > 0)
#line 913 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 914 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 915 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 916 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 917 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEntity  * pEn  = (* it );
#line 918 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 919 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 920 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ShotMagicContinued  (this  , lastEffectInfo  , FLOATquat3D (1 , 0 , 0 , 0) 
#line 921 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, pEn  , SkillEffectInfo  () -> fMissileSpeed  
#line 922 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  
#line 923 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, false  , 3);
#line 924 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 925 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 926 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 927 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 928 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 929 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ShotMagicContinued  (this  , lastEffectInfo  , FLOATquat3D (1 , 0 , 0 , 0) 
#line 930 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, m_penEnemy  , SkillEffectInfo  () -> fMissileSpeed  
#line 931 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  
#line 932 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, false  , 3);
#line 933 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 934 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}break ;
#line 935 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 4: {}break ;
#line 936 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 5: {}break ;
#line 937 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 6: {}break ;
#line 938 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 7: {}break ;
#line 939 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 8: 
#line 940 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 941 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 942 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 943 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 944 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_dcEnemies  . Count  () > 0)
#line 945 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 946 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , FLOAT3D (0 , 0 , 0) , TRUE );
#line 947 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_dcEnemies  . Clear  ();
#line 948 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 949 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 950 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 951 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , FLOAT3D (0 , 0 , 0) , FLOAT3D (0 , 0 , 0));
#line 952 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 953 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}break ;
#line 954 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 9: {}break ;
#line 956 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
case 21: 
#line 957 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 958 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 959 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static INDEX s_iFireBallCount  = 10;
#line 960 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static FLOAT s_fFallHeight  = 3;
#line 961 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static FLOAT s_fFallHeightVariation  = 3;
#line 962 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static FLOAT s_fSpeed  = 5;
#line 963 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static FLOAT s_fSpeedVariation  = 5;
#line 964 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
for(INDEX i  = 0;i  < s_iFireBallCount ;++ i )
#line 965 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 966 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D pos  = CRandomTable  :: Instance  () . GetRndCylinderPos  () * skill  . GetAppRange  ();
#line 967 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
pos  (2) = CRandomTable  :: Instance  () . GetRndFactor  () * s_fFallHeightVariation  + s_fFallHeight ;
#line 968 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
pos  += m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 969 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ShotFallDown  (pos  , FLOAT3D (0 , 1 , 0) , s_fSpeed  + s_fSpeedVariation  * CRandomTable  :: Instance  () . GetRndFactor  () 
#line 970 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  , FALSE );
#line 971 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 972 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}break ;
#line 974 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
default  :
#line 975 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 976 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERTALWAYS  ("Something wrong... Plz check fire obj type of this skill.");
#line 977 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}break ;
#line 978 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 979 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
BOOL CEnemy::
#line 985 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 987 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Fire, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 990 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 992 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! IsAttackable  ())
#line 993 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 994 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 994 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 995 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 997 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(!(m_MobType  == MOB_ENEMY )){ Jump(STATE_CURRENT,0x07480006, FALSE, EInternal());return TRUE;}
#line 999 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
STATE_CEnemy_NormalAttack, TRUE;
Jump(STATE_CURRENT, 0x07480003, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x07480003_Hit_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemy_NormalAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x07480004, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x07480004_Hit_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480004
const EEnd&__e= (EEnd&)__eeInput;
;Jump(STATE_CURRENT,0x07480005, FALSE, EInternal());return TRUE;}BOOL CEnemy::H0x07480006_Hit_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480006

#line 1003 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1004 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ASSERT  (FALSE );
#line 1005 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}Jump(STATE_CURRENT,0x07480005, FALSE, EInternal());return TRUE;}
BOOL CEnemy::H0x07480005_Hit_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480005

#line 1006 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1006 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 1010 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
AttackTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_AttackTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::AttackTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1012 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 1014 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX attackAnimID  = - 1;
#line 1015 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
const int  iAttackMotion  = m_nAttackCnt  % MOB_ATTACK_MOTION_NUM ;
#line 1016 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iAttackMotion  == 0)
#line 1017 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1018 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack ;
#line 1019 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1020 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 1)
#line 1021 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1022 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack2 ;
#line 1023 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1024 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 2)
#line 1025 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1026 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack3 ;
#line 1027 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1028 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 3)
#line 1029 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1030 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack4 ;
#line 1031 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1032 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillEffectInfo  = new  sSkillEffectInfo ;
#line 1033 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> InitForNormalAttack  (_pNetwork  -> GetMobData  (m_nMobDBIndex ) , attackAnimID );
#line 1035 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(strlen  (SkillEffectInfo  () -> szEffectNameHit ) == 0){SkillEffectInfo  () -> szEffectNameHit  = "Normal Hit";}
#line 1036 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(SkillEffectInfo  () -> iFireDelayCount  == 0)
#line 1037 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1038 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> iMissileType  = CSkill  :: MT_NONE ;
#line 1039 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> iFireDelayCount  = 1;
#line 1040 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> fFireDelay  [ 0 ] = GetAnimLength  (idMob_Attack ) / 3;
#line 1041 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1042 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
STATE_CEnemy_SkillAndMagicAnimation, TRUE;
Jump(STATE_CURRENT, 0x07480008, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x07480008_AttackTarget_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480008
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemy_SkillAndMagicAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x07480009, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x07480009_AttackTarget_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480009
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1044 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1044 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 1047 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillingTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_SkillingTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::SkillingTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1049 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 1051 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 1052 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillEffectInfo  = new  sSkillEffectInfo ;
#line 1053 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> InitForSkillAttack  (skill );
#line 1054 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
STATE_CEnemy_SkillAndMagicAnimation, TRUE;
Jump(STATE_CURRENT, 0x0748000b, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x0748000b_SkillingTarget_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748000b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemy_SkillAndMagicAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0748000c, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x0748000c_SkillingTarget_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748000c
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1056 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1056 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 1059 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
IdleAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_IdleAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::IdleAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1061 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetTimerAfter(15.0f + FRnd  () * 5.0f);
Jump(STATE_CURRENT, 0x0748000e, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x0748000e_IdleAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748000e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0748000f, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x0748000f_IdleAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748000f
;
#line 1062 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Default2  , AN_CLEAR  , 1.0f , 0);
#line 1065 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT animtime  = GetAnimLength  (idMob_Default2 );
#line 1066 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetTimerAfter(animtime );
Jump(STATE_CURRENT, 0x07480010, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x07480010_IdleAnimation_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480010
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x07480011, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x07480011_IdleAnimation_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480011
;
#line 1067 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StandingAnim  ();
#line 1068 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1068 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 1072 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
AttackAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_AttackAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::AttackAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1074 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
const int  iAttackMotion  = m_nAttackCnt  % MOB_ATTACK_MOTION_NUM ;
#line 1075 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iAttackMotion  == 0)
#line 1076 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1077 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Attack  , AN_CLEAR  , 1.0f , 0);
#line 1078 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1079 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 1)
#line 1080 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1081 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Attack2  , AN_CLEAR  , 1.0f , 0);
#line 1082 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1083 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 2)
#line 1084 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1085 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Attack3  , AN_CLEAR  , 1.0f , 0);
#line 1086 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1087 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 3)
#line 1088 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1089 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Attack4  , AN_CLEAR  , 1.0f , 0);
#line 1090 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1092 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fAttackFrequency  = 0.25f;
#line 1093 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fAttackStartTime  = _pTimer  -> CurrentTick  ();
#line 1094 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fImpactTime  = GetAnimLength  (idMob_Attack ) / 3;
#line 1096 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Jump(STATE_CURRENT,0x07480015, FALSE, EInternal());return TRUE;}BOOL CEnemy::H0x07480015_AttackAnimation_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480015
if(!(_pTimer  -> CurrentTick  () - m_fAttackStartTime  < GetAnimLength  (idMob_Attack ) * 0.8f)){ Jump(STATE_CURRENT,0x07480016, FALSE, EInternal());return TRUE;}
#line 1098 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetTimerAfter(m_fAttackFrequency );
Jump(STATE_CURRENT, 0x07480013, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x07480013_AttackAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480013
switch(__eeInput.ee_slEvent)
#line 1099 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{case(EVENTCODE_EBegin):
#line 1101 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1102 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bMoving )
#line 1103 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1107 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1107 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1108 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1110 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fMoveSpeed  = 0.0f;
#line 1111 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 1113 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(_pTimer  -> CurrentTick  () - m_fAttackStartTime  > m_fImpactTime )
#line 1114 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1115 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SendEvent  (EAttackDamage  ());
#line 1116 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fImpactTime  = 1000.0f;
#line 1117 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1119 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1120 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 1122 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 1124 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 1125 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_fDamageConfused  < 0.001f)
#line 1126 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1127 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 1129 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX animSet  , animIdx ;
#line 1130 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 1131 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(this  -> en_pmiModelInstance  
#line 1132 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 1133 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1135 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
this  -> en_pmiModelInstance  -> AddAnimation  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 1136 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1137 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1138 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1139 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}ASSERT(FALSE);break;case(EVENTCODE_EAttackDamage):
#line 1141 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{const EAttackDamage&eAttackDamage= (EAttackDamage&)__eeInput;

#line 1142 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CEntity  * pen  = m_penEnemy ;
#line 1143 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vCurrentCenter  (((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1144 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1145 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1146 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vCurrentPos  = this  -> en_plPlacement  . pl_PositionVector  + vCurrentCenter ;
#line 1147 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vTargetCenter  (0 , 0 , 0);
#line 1148 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vTargetPos  (0 , 0 , 0);
#line 1149 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vDirection  (0 , 0 , 0);
#line 1150 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT size  = 0;
#line 1151 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(pen  != NULL  && pen  -> GetFlags  () & ENF_ALIVE )
#line 1152 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1153 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(pen  -> en_RenderType  == RT_SKAMODEL )
#line 1154 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1156 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOATaabbox3D bbox ;
#line 1157 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
pen  -> GetModelInstance  () -> GetCurrentColisionBox  (bbox );
#line 1158 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT3D vRadius  = (bbox  . maxvect  - bbox  . minvect ) * 0.5f * 0.4f;
#line 1159 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
size  = vRadius  . Length  ();
#line 1160 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1161 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
vTargetCenter  = FLOAT3D (((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1162 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1163 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1164 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
vTargetPos  = pen  -> en_plPlacement  . pl_PositionVector  + vTargetCenter ;
#line 1165 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
vDirection  = vTargetPos  - vCurrentPos ;
#line 1166 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
vDirection  . Normalize  ();
#line 1167 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
vTargetPos  -= vDirection  * size ;
#line 1168 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1169 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
vDirection  . Normalize  ();
#line 1174 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_CLOSERANGE  , (int ) 1 , vTargetPos  , vDirection );
#line 1178 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fImpactTime  = 1000.0f;
#line 1180 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
UnsetTimer();Jump(STATE_CURRENT,0x07480014, FALSE, EInternal());return TRUE;
#line 1181 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x07480014, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1183 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}return TRUE;}BOOL CEnemy::H0x07480014_AttackAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480014
Jump(STATE_CURRENT,0x07480015, FALSE, EInternal());return TRUE;
#line 1184 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}BOOL CEnemy::H0x07480016_AttackAnimation_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480016

#line 1186 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_penKillEnemy  != NULL )
#line 1187 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1188 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(((CUnit  *) ((CEntity  *) m_penKillEnemy )) -> m_nCurrentHealth  <= 0)
#line 1189 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1190 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
((CUnit  *) ((CEntity  *) m_penKillEnemy )) -> DeathNow  ();
#line 1191 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1192 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_penKillEnemy  = NULL ;
#line 1193 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1195 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bAttack  = FALSE ;
#line 1196 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bMoving  = FALSE ;
#line 1197 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bStop  = FALSE ;
#line 1198 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StandingAnim  ();
#line 1199 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetNoTargetEntity  ();
#line 1201 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1201 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 1204 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillAndMagicAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_SkillAndMagicAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::SkillAndMagicAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1206 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(SkillEffectInfo  () -> dwValidValue  != 0)
#line 1207 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1208 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1209 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
delete  m_pSkillEffectInfo ;
#line 1210 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillEffectInfo  = NULL ;
#line 1211 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1211 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1212 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1214 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fAttackFrequency  = 0.05f;
#line 1215 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fAttackStartTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 1216 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fImpactTime  = GetAnimLength  (idMob_Attack ) / 3;
#line 1218 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (SkillEffectInfo  () -> iAnimatioID  , AN_CLEAR  , 1.0f , 0);
#line 1220 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_nEffectStep  = 1;
#line 1221 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillReadyEffect  = NULL ;
#line 1222 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillReadyEffect  = StartEffectGroup  (SkillEffectInfo  () -> szEffectNameCast  
#line 1223 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, & en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1224 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1226 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Jump(STATE_CURRENT,0x0748001a, FALSE, EInternal());return TRUE;}BOOL CEnemy::H0x0748001a_SkillAndMagicAnimation_03(const CEntityEvent &__eeInput)
#line 1227 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748001a
if(!(_pTimer  -> GetLerpedCurrentTick  () - m_fAttackStartTime  < GetAnimLength  (SkillEffectInfo  () -> iAnimatioID ) * 0.8f)){ Jump(STATE_CURRENT,0x0748001b, FALSE, EInternal());return TRUE;}
#line 1228 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetTimerAfter(m_fAttackFrequency );
Jump(STATE_CURRENT, 0x07480018, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x07480018_SkillAndMagicAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480018
switch(__eeInput.ee_slEvent)
#line 1229 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{case(EVENTCODE_EBegin):
#line 1231 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1232 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bMoving  || m_bStop )
#line 1233 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1234 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
DestroyEffectGroupIfValid  (m_pSkillReadyEffect );
#line 1235 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> AddAnimation  (idMob_Default  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 1236 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1237 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
delete  m_pSkillEffectInfo ;
#line 1238 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillEffectInfo  = NULL ;
#line 1239 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1239 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1240 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1242 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fMoveSpeed  = 0.0f;
#line 1243 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_penEnemy  . ep_pen  != this )
#line 1244 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1245 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetDesiredMovement  ();
#line 1246 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1248 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT time  = _pTimer  -> GetLerpedCurrentTick  () - m_fAttackStartTime ;
#line 1249 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 0 ] && m_nEffectStep  == 1 && SkillEffectInfo  () -> iFireDelayCount  > 0)
#line 1250 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1251 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
++ m_nEffectStep ;
#line 1252 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillAndAttackFire  (1);
#line 1253 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1254 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 1 ] && m_nEffectStep  == 2 && SkillEffectInfo  () -> iFireDelayCount  > 1)
#line 1255 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1256 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
++ m_nEffectStep ;
#line 1257 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillAndAttackFire  (2);
#line 1258 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1259 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 2 ] && m_nEffectStep  == 3 && SkillEffectInfo  () -> iFireDelayCount  > 2)
#line 1260 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1261 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
++ m_nEffectStep ;
#line 1262 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillAndAttackFire  (3);
#line 1263 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1264 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 3 ] && m_nEffectStep  == 4 && SkillEffectInfo  () -> iFireDelayCount  > 3)
#line 1265 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1266 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
++ m_nEffectStep ;
#line 1267 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillAndAttackFire  (4);
#line 1268 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1269 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1270 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 1272 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 1274 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 1275 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_fDamageConfused  < 0.001f)
#line 1276 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1277 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 1279 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX animSet  , animIdx ;
#line 1280 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 1281 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(this  -> en_pmiModelInstance  
#line 1282 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 1283 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1285 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
this  -> en_pmiModelInstance  -> AddAnimation  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 1286 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1287 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1288 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1289 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x07480019, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1291 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}return TRUE;}BOOL CEnemy::H0x07480019_SkillAndMagicAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480019
Jump(STATE_CURRENT,0x0748001a, FALSE, EInternal());return TRUE;
#line 1292 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}BOOL CEnemy::H0x0748001b_SkillAndMagicAnimation_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748001b

#line 1294 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_nEffectStep  = 0;
#line 1295 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1296 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
delete  m_pSkillEffectInfo ;
#line 1297 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_pSkillEffectInfo  = NULL ;
#line 1299 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! m_bUseAI )
#line 1300 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1301 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bAttack  = FALSE ;
#line 1302 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bMoving  = FALSE ;
#line 1303 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bStop  = FALSE ;
#line 1304 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StandingAnim  ();
#line 1305 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetNoTargetEntity  ();
#line 1306 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1308 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EReturn  ());
#line 1308 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 1312 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
NormalAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_NormalAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::NormalAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1314 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StandingAnim  ();
#line 1315 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetTimerAfter(0.8f + FRnd  () * 0.25f);
Jump(STATE_CURRENT, 0x0748001d, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x0748001d_NormalAttack_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748001d
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0748001e, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x0748001e_NormalAttack_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748001e
;
#line 1317 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX attackAnimID  = - 1;
#line 1318 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
const int  iAttackMotion  = rand  () % MOB_ATTACK_MOTION_NUM ;
#line 1319 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(iAttackMotion  == 0)
#line 1320 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1321 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack ;
#line 1322 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1323 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 1)
#line 1324 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1325 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack2 ;
#line 1326 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1327 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 2)
#line 1328 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1329 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack3 ;
#line 1330 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1331 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else if(iAttackMotion  == 3)
#line 1332 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1333 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
attackAnimID  = idMob_Attack4 ;
#line 1334 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1336 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_nAttackCnt  = attackAnimID ;
#line 1338 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_bUseAI )
#line 1339 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1348 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> AddMoveList  (* this );
#line 1349 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> SendMoveList  ();
#line 1351 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX iAttackerIndex  = GetNetworkID  ();
#line 1352 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> AddAttackList  (0 , iAttackerIndex  , m_penEnemy  -> GetNetworkType  () , m_penEnemy  -> GetNetworkID  ());
#line 1353 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1355 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
STATE_CEnemy_AttackTarget, TRUE;
Jump(STATE_CURRENT, 0x0748001f, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x0748001f_NormalAttack_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0748001f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemy_AttackTarget, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x07480020, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x07480020_NormalAttack_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480020
const EEnd&__e= (EEnd&)__eeInput;
;
#line 1359 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EEnd  ());
#line 1359 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemy::
#line 1365 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemy_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemy::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1367 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(GetModelInstance  () == NULL )
#line 1368 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1369 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
InitAsSkaEditorModel  ();
#line 1370 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetSkaModel  ("Models\\Editor\\Ska\\Axis.smc");
#line 1372 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! m_bInit )
#line 1373 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1374 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(m_nMobDBIndex  > 0)
#line 1375 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1377 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(_cmiComm  . IsNetworkOn  ())
#line 1378 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1379 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CPlacement3D pl  = GetLerpedPlacement  ();
#line 1380 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CNetworkMessage  nmMobSpawn  (MSG_NPC_REGEN );
#line 1381 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX iIndex  = - 1;
#line 1382 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX iYLayer  = 0;
#line 1383 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX iMobType  = m_nMobDBIndex ;
#line 1384 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
INDEX iEntityID  = en_ulID ;
#line 1385 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
_pNetwork  -> AddRegenList  (iIndex  , iMobType  , 
#line 1386 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
pl  . pl_PositionVector  (1) , pl  . pl_PositionVector  (2) , pl  . pl_PositionVector  (3) , 
#line 1387 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
pl  . pl_OrientationAngle  (1) , iYLayer  , iEntityID );
#line 1389 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
en_RenderType  = RT_SKAMODEL ;
#line 1390 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1391 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1392 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1393 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EEnd  ());
#line 1393 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1394 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1396 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(GetModelInstance  () != NULL )
#line 1397 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1398 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CSkaTag  tag ;
#line 1399 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetName  ("__ROOT");
#line 1400 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1401 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1402 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOATaabbox3D aabb ;
#line 1403 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 1404 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetName  ("CENTER");
#line 1405 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1406 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) * 0.5f * GetModelInstance  () -> mi_vStretch  (2) , 0);
#line 1407 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1408 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetName  ("__TOP");
#line 1409 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1410 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) * GetModelInstance  () -> mi_vStretch  (2) , 0);
#line 1411 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1412 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1416 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetPhysicsFlags  (EPF_ONBLOCK_CLIMBORSLIDE  
#line 1417 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
| EPF_TRANSLATEDBYGRAVITY  
#line 1418 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
| EPF_PUSHABLE  
#line 1419 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
| EPF_MOVABLE  
#line 1420 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
| EPF_ABSOLUTETRANSLATE );
#line 1421 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetPhysicsFlags  (GetPhysicsFlags  () & ~ EPF_PUSHABLE );
#line 1424 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (m_nMobDBIndex );
#line 1430 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
extern  BOOL _bWorldEditorApp ;
#line 1431 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! _bWorldEditorApp )
#line 1432 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1433 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(MD  . IsEvent  () || MD  . IsLordSymbol  () || MD  . IsZoneMoving  () || MD  . IsCollsionModel  ())
#line 1434 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1435 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetCollisionFlags  (ECF_MODEL );
#line 1436 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1437 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 1438 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1439 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetCollisionFlags  (ECF_MODEL_NO_COLLISION );
#line 1440 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1441 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1443 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
en_sbNetworkType  = MSG_CHAR_NPC ;
#line 1446 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! _pNetwork  -> m_bSingleMode  || m_bPreCreate )
#line 1447 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1448 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetFlagOn  (ENF_ALIVE );
#line 1449 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1450 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
else 
#line 1451 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1453 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_bUseAI  = TRUE ;
#line 1454 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fIgnoreRange  = 1000.0f;
#line 1455 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetFlagOff  (ENF_ALIVE );
#line 1456 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1458 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
en_tmMaxHoldBreath  = 5.0f;
#line 1459 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
en_fDensity  = 2000.0f;
#line 1460 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(idMob_Walk  == - 1 || 
#line 1461 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
idMob_Run  == - 1 || 
#line 1462 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
idMob_Attack  == - 1 || 
#line 1463 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
idMob_Default  == - 1 || 
#line 1464 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
idMob_Death  == - 1 || 
#line 1465 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
idMob_Wound  == - 1 || 
#line 1466 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
idMob_NormalBox  == - 1)
#line 1467 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1468 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Return(STATE_CURRENT,EEnd  ());
#line 1468 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
return TRUE;
#line 1469 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1471 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetFlagOn  (ENF_RENDERREFLECTION );
#line 1476 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aWalkRotateSpeed  = AngleDeg  (1800.0f);
#line 1479 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aAttackRotateSpeed  = AngleDeg  (1800.0f);
#line 1482 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_aCloseRotateSpeed  = AngleDeg  (1800.0f);
#line 1488 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fAttackFireTime  = 2.0f;
#line 1489 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fCloseFireTime  = 2.0f;
#line 1490 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fBlowUpAmount  = 80.0f;
#line 1491 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fBodyParts  = 4;
#line 1492 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_fDamageWounded  = 0.0f;
#line 1495 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
m_nMobClientIndex  = en_ulID ;
#line 1497 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> StretchModel  (FLOAT3D (m_fStretch  , m_fStretch  , m_fStretch ));
#line 1499 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
extern  BOOL _bWorldEditorApp ;
#line 1500 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! _bWorldEditorApp )
#line 1501 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1503 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (m_nMobDBIndex );
#line 1504 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(! MD  . IsCastleTower  ())
#line 1505 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1506 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> mi_bRenderShadow  = TRUE ;
#line 1507 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1508 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1510 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetHealth  (10000.0f);
#line 1514 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(!(idMob_Start  != - 1)){ Jump(STATE_CURRENT,0x07480023, FALSE, EInternal());return TRUE;}
#line 1516 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOAT fAnimLength  = GetAnimLength  (idMob_Start );
#line 1518 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
StartAnim  ();
#line 1520 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
SetTimerAfter(fAnimLength );
Jump(STATE_CURRENT, 0x07480021, FALSE, EBegin());return TRUE;}BOOL CEnemy::H0x07480021_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480021
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x07480022, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemy::H0x07480022_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480022
;Jump(STATE_CURRENT,0x07480023, FALSE, EInternal());return TRUE;}BOOL CEnemy::H0x07480023_Main_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x07480023

#line 1523 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
ModelChangeNotify  ();
#line 1527 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
if(GetModelInstance  ())
#line 1528 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
{
#line 1529 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
CSkaTag  tag ;
#line 1530 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetName  ("__ROOT");
#line 1531 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1532 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1533 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetName  ("__TOP");
#line 1534 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1535 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
FLOATaabbox3D aabb ;
#line 1536 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 1537 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) , 0);
#line 1538 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1539 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
}
#line 1543 "E:/질산/Korea/Client_USA/EntitiesMP/Enemy.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};