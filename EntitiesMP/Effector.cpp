/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"

#include "StdH.h"
#include "EntitiesMP/Effector.h"
#include <EntitiesMP/BloodSpray.h>

#include <EntitiesMP/Effector.h>
#include <EntitiesMP/Effector_tables.h>
CEntityEvent *ESpawnEffector::MakeCopy(void) { CEntityEvent *peeCopy = new ESpawnEffector(*this); return peeCopy;}
SLONG ESpawnEffector::GetSizeOf(void) { return sizeof(*this);}
ESpawnEffector::ESpawnEffector() : CEntityEvent(EVENTCODE_ESpawnEffector) {;
 ClearToDefault(eetType);
 ClearToDefault(vDamageDir);
 ClearToDefault(vDestination);
 ClearToDefault(tmLifeTime);
 ClearToDefault(fSize);
 ClearToDefault(ctCount);
 ClearToDefault(eidModel);
 ClearToDefault(eidModel2);
};
BOOL ESpawnEffector::CheckIDs(void) { return TRUE && eidModel.IsValid()&& eidModel2.IsValid(); }
CEntityEvent *ETriggerEffector::MakeCopy(void) { CEntityEvent *peeCopy = new ETriggerEffector(*this); return peeCopy;}
SLONG ETriggerEffector::GetSizeOf(void) { return sizeof(*this);}
ETriggerEffector::ETriggerEffector() : CEntityEvent(EVENTCODE_ETriggerEffector) {;
};
BOOL ETriggerEffector::CheckIDs(void) { return TRUE ; }
#line 40 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"

void CEffector_OnPrecache(CDLLEntityClass *pdec, INDEX iUser) 
{
  switch ((EffectorEffectType)iUser)
  {
  case ET_MOVING_RING           :
    pdec->PrecacheModel(MODEL_POWER_RING);
    pdec->PrecacheTexture(TEXTURE_POWER_RING);
    break;
  case ET_DESTROY_OBELISK       :
  case ET_DESTROY_PYLON         :
  case ET_HIT_GROUND            :
  case ET_LIGHTNING             :
  case ET_SIZING_BIG_BLUE_FLARE :
  case ET_SIZING_RING_FLARE     :
  case ET_PORTAL_LIGHTNING      :
  case ET_MORPH_MODELS          :
  case ET_DISAPPEAR_MODEL       :
  case ET_APPEAR_MODEL          :
  case ET_DISAPPEAR_MODEL_NOW   :
  case ET_APPEAR_MODEL_NOW      :
    // no precaching needed
    break;
  default:
    ASSERT(FALSE);
  }
}

// array for model vertices in absolute space
CStaticStackArray<FLOAT3D> avModelFXVertices;

void CEffector::SetDefaultProperties(void) {
  m_eetType = ET_NONE ;
  m_tmStarted = 0.0f;
  m_vDamageDir = FLOAT3D(0 , 0 , 0);
  m_vFXDestination = FLOAT3D(0 , 0 , 0);
  m_tmLifeTime = 5.0f;
  m_fSize = 1.0f;
  m_ctCount = 0;
  m_bLightSource = FALSE ;
  m_aoLightAnimation.SetData(NULL);

  m_iLightAnimation = -1;
  m_bAlive = TRUE ;
  m_penModel = NULL;
  m_penModel2 = NULL;
  m_bWaitTrigger = FALSE ;
  m_iModel1ID = -1;
  m_iModel2ID = -1;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 108 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
void CEffector::InitializeFromNet() 
#line 109 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 110 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ESpawnEffector  ese ;
#line 111 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . eetType  = m_eetType ;
#line 112 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . vDamageDir  = m_vDamageDir ;
#line 113 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . vDestination  = m_vFXDestination ;;
#line 114 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . tmLifeTime  = m_tmLifeTime ;
#line 115 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . fSize  = m_fSize ;
#line 116 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . ctCount  = m_ctCount ;
#line 117 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_iModel1ID  == - 1){
#line 118 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . eidModel  = (CEntity  *) NULL ;
#line 119 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else {
#line 120 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . eidModel  = _pNetwork  -> ga_World  . EntityFromID  (m_iModel1ID );
#line 121 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 122 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_iModel2ID  == - 1){
#line 123 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . eidModel2  = (CEntity  *) NULL ;
#line 124 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else {
#line 125 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ese  . eidModel2  = _pNetwork  -> ga_World  . EntityFromID  (m_iModel2ID );
#line 126 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 127 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Initialize  (ese );
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT CEffector::CalculateLifeRatio(FLOAT fFadeInRatio,FLOAT fFadeOutRatio) 
#line 132 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
TIME  tmDelta  = _pTimer  -> GetLerpedCurrentTick  () - m_tmStarted ;
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLifeRatio  = CalculateRatio  (tmDelta  , 0 , m_tmLifeTime  , fFadeInRatio  , fFadeOutRatio );
#line 135 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
return fLifeRatio ;
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 138 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
void CEffector::AdjustMipFactor(FLOAT & fMipFactor) 
#line 139 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_DISAPPEAR_MODEL  || m_eetType  == ET_DISAPPEAR_MODEL_NOW  && m_penModel  != NULL )
#line 141 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 142 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CModelObject * pmo  = m_penModel  -> GetModelObject  ();
#line 143 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
TIME  tmDelta  = _pTimer  -> GetLerpedCurrentTick  () - m_tmStarted ;
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLifeRatio ;
#line 145 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_tmStarted  == - 1)
#line 146 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 147 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = 1.0f;
#line 148 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 149 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
else if(tmDelta  >= m_tmLifeTime )
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 151 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = 0.0f;
#line 152 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 153 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
else 
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 155 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = CalculateLifeRatio  (0.0f , 1.0f);
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 157 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
UBYTE  ubAlpha  = UBYTE  (255.0f * fLifeRatio );
#line 158 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
COLOR col  = C_WHITE  | ubAlpha ;
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
pmo  -> mo_colBlendColor  = col ;
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_APPEAR_MODEL  || m_eetType  == ET_APPEAR_MODEL_NOW  && m_penModel  != NULL )
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 163 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CModelObject * pmo  = m_penModel  -> GetModelObject  ();
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
TIME  tmDelta  = _pTimer  -> GetLerpedCurrentTick  () - m_tmStarted ;
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLifeRatio ;
#line 166 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_tmStarted  == - 1)
#line 167 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 168 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = 0.0f;
#line 169 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 170 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
else if(tmDelta  >= m_tmLifeTime )
#line 171 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 172 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = 1.0f;
#line 173 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 174 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
else 
#line 175 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = CalculateLifeRatio  (1.0f , 0.0f);
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 178 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
UBYTE  ubAlpha  = UBYTE  (255.0f * fLifeRatio );
#line 179 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
COLOR col  = C_WHITE  | ubAlpha ;
#line 180 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
pmo  -> mo_colBlendColor  = col ;
#line 181 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 182 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_MORPH_MODELS  && m_penModel  != NULL  && m_penModel2  != NULL )
#line 183 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 184 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
TIME  tmDelta  = _pTimer  -> GetLerpedCurrentTick  () - m_tmStarted ;
#line 185 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLifeRatio ;
#line 186 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_tmStarted  == - 1)
#line 187 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 188 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = 0.0f;
#line 189 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 190 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
else if(tmDelta  >= m_tmLifeTime )
#line 191 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 192 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = 1.0f;
#line 193 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 194 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
else 
#line 195 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 196 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fLifeRatio  = CalculateLifeRatio  (1.0f , 0.0f);
#line 197 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
UBYTE  ubAlpha1  = UBYTE  (255.0f * (1 - fLifeRatio ));
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
UBYTE  ubAlpha2  = 255 - ubAlpha1 ;
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
COLOR col1  = C_WHITE  | ubAlpha1 ;
#line 201 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
COLOR col2  = C_WHITE  | ubAlpha2 ;
#line 202 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_penModel  -> en_RenderType  == RT_MODEL  || m_penModel  -> en_RenderType  == RT_EDITORMODEL ){
#line 203 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CModelObject * pmo  = m_penModel  -> GetModelObject  ();
#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
pmo  -> mo_colBlendColor  = col1 ;
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else if(m_penModel  -> en_RenderType  == RT_SKAMODEL  || m_penModel  -> en_RenderType  == RT_SKAEDITORMODEL ){
#line 206 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CModelInstance * pmi  = m_penModel  -> GetModelInstance  ();
#line 207 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
pmi  -> mi_colModelColor  = col1 ;
#line 208 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 209 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_penModel2  -> en_RenderType  == RT_MODEL  || m_penModel2  -> en_RenderType  == RT_EDITORMODEL ){
#line 210 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CModelObject * pmo  = m_penModel2  -> GetModelObject  ();
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
pmo  -> mo_colBlendColor  = col2 ;
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else if(m_penModel  -> en_RenderType  == RT_SKAMODEL  || m_penModel  -> en_RenderType  == RT_SKAEDITORMODEL ){
#line 213 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CModelInstance * pmi  = m_penModel2  -> GetModelInstance  ();
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
pmi  -> mi_colModelColor  = col2 ;
#line 215 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
BOOL CEffector::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 221 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_MOVING_RING )
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLifeRatio  = CalculateLifeRatio  (0.2f , 0.1f);
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fT  = _pTimer  -> CurrentTick  () - m_tmStarted ;
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fPulse  = 1.0f;
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
UBYTE  ub  = UBYTE  (255.0f * fPulse  * fLifeRatio );
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
COLOR col  = RGBAToColor  (ub  , ub  , ub  , ub );
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
GetModelObject  () -> mo_colBlendColor  = col ;
#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
return FALSE ;
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 234 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
void CEffector::RenderMovingLightnings(void) 
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLifeRatio  = CalculateLifeRatio  (0.1f , 0.1f);
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_penModel  -> GetModelVerticesAbsolute  (avModelFXVertices  , 0.05f , 0.0f);
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
const FLOATmatrix3D & m  = m_penModel  -> GetRotationMatrix  ();
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D vOrigin  = m_penModel  -> GetPlacement  () . pl_PositionVector ;
#line 242 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fFXTime  = 0.75f;
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fMaxHeight  = 6.0f;
#line 244 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fdh  = 1.0f;
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT tmDelta  = _pTimer  -> GetLerpedCurrentTick  () - m_tmStarted ;
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fY0  = tmDelta ;
#line 248 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
for(FLOAT fT  = tmDelta ;fT  > 0;fT  -= fFXTime )
#line 249 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fY  = fT  * 2.0f;
#line 251 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(fY  > fMaxHeight )
#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 253 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
continue ;
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fHeightRatio  = CalculateRatio  (fY  , 0 , fMaxHeight  , 0.1f , 0.0f);
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fMinY  = 1e6f;
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fMinY2  = - 1e6f;
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
INDEX iLower  = - 1;
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
INDEX iUpper  = - 1;
#line 261 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
for(INDEX iVtx  = 0;iVtx  < avModelFXVertices  . Count  ();iVtx  ++)
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D v  = (avModelFXVertices  [ iVtx  ] - vOrigin ) * ! m ;
#line 265 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(v  (2) > fY  && v  (2) < fMinY  && v  (1) < 0)
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 267 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
iLower  = iVtx ;
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fMinY  = v  (2);
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(v  (2) <= fY  && v  (2) > fMinY2  && v  (1) < 0)
#line 271 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
iUpper  = iVtx ;
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fMinY2  = v  (2);
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(iLower  != - 1 && iUpper  != - 1)
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D vRelHi  = (avModelFXVertices  [ iUpper  ] - vOrigin ) * ! m ;
#line 280 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D vRelLow  = (avModelFXVertices  [ iLower  ] - vOrigin ) * ! m ;
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLerpFactor  = (fY  - vRelLow  (2)) / (vRelHi  (2) - vRelLow  (2));
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D vRel  = Lerp  (vRelLow  , vRelHi  , fLerpFactor );
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
vRel  (2) = fY ;
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D vAbs1  = vOrigin  + vRel  * m ;
#line 285 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
vRel  (1) = - vRel  (1);
#line 286 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D vAbs2  = vOrigin  + vRel  * m ;
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Particles_Ghostbuster  (vAbs1  , vAbs2  , 16 , 0.325f , fHeightRatio  * fLifeRatio  , 5.0f);
#line 289 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
avModelFXVertices  . Clear  ();
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
void CEffector::RenderParticles(void) 
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fRatio ;
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
TIME  tmNow  = _pTimer  -> GetLerpedCurrentTick  ();
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
TIME  tmDelta  = tmNow  - m_tmStarted ;
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fLivingRatio  = tmDelta  / m_tmLifeTime ;
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(fLivingRatio  < 0.25f){
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fRatio  = Clamp  (fLivingRatio  / 0.25f , 0.0f , 1.0f);
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else if(fLivingRatio  > 0.75f){
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fRatio  = Clamp  ((- fLivingRatio  + 1.0f) / 0.25f , 0.0f , 1.0f);
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else {
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
fRatio  = 1.0f;
#line 308 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
switch(m_eetType )
#line 311 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
case ET_DESTROY_OBELISK : 
#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Particles_DestroyingObelisk  (this  , m_tmStarted );
#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
break ;
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
case ET_DESTROY_PYLON : 
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Particles_DestroyingPylon  (this  , m_vDamageDir  , m_tmStarted );
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
break ;
#line 318 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
case ET_HIT_GROUND : 
#line 319 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Particles_HitGround  (this  , m_tmStarted  , m_fSize );
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
break ;
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
case ET_LIGHTNING : 
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Particles_Ghostbuster  (GetPlacement  () . pl_PositionVector  , m_vFXDestination  , m_ctCount  , m_fSize  , fRatio );
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
break ;
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
case ET_PORTAL_LIGHTNING : 
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
RenderMovingLightnings  ();
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
break ;
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
void CEffector::Read_t(CTStream * istr,BOOL bNetwork) 
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CMovableModelEntity  :: Read_t  (istr  , bNetwork );
#line 335 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_bLightSource ){
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetupLightSource  ();
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CLightSource * CEffector::GetLightSource(void) 
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_bLightSource ){
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
return & m_lsLightSource ;
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else {
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
return NULL ;
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
  
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
void CEffector::SetupLightSource(void) 
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 353 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_iLightAnimation  >= 0)
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
try {
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_aoLightAnimation  . SetData_t  (CTFILENAME  ("Data\\Animations\\Effector.ani"));
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}catch  (char  * strError ){
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
WarningMessage  (TRANS  ("Cannot load Data\\Animations\\Effector.ani: %s") , strError );
#line 359 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_aoLightAnimation  . GetData  () != NULL ){
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_aoLightAnimation  . PlayAnim  (m_iLightAnimation  , 0);
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 367 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
CLightSource  lsNew ;
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_ulFlags  = LSF_LENSFLAREONLY ;
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_rHotSpot  = 0.0f;
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
switch(m_eetType ){
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
case ET_SIZING_RING_FLARE : 
#line 372 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_colColor  = C_WHITE  | CT_OPAQUE ;
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_rHotSpot  = 100.0f;
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_rFallOff  = 300.0f;
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_plftLensFlare  = & _lftWhiteGlowStarNG ;
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
break ;
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
case ET_SIZING_BIG_BLUE_FLARE : 
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_colColor  = C_WHITE  | CT_OPAQUE ;
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_rHotSpot  = 500.0f * m_fSize ;
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_rFallOff  = 1000.0f * m_fSize ;
#line 382 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_plftLensFlare  = & _lftBlueStarBlueReflections ;
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
break ;
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
default  : 
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ASSERTALWAYS  ("Unknown light source");
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_ubPolygonalMask  = 0;
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_paoLightAnimation  = NULL ;
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_paoLightAnimation  = NULL ;
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_aoLightAnimation  . GetData  () != NULL ){
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
lsNew  . ls_paoLightAnimation  = & m_aoLightAnimation ;
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_lsLightSource  . ls_penEntity  = this ;
#line 398 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_lsLightSource  . SetLightSource  (lsNew );
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
BOOL CEffector::
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEffector_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_ESpawnEffector, "CEffector::Main expects 'ESpawnEffector' as input!");  const ESpawnEffector &eSpawn = (const ESpawnEffector &)__eeInput;
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
InitAsEditorModel  ();
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL  | EPF_MOVABLE );
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetCollisionFlags  (ECF_TOUCHMODEL );
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetModel  (MODEL_MARKER );
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetModelMainTexture  (TEXTURE_MARKER );
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_eetType  = eSpawn  . eetType ;
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_vDamageDir  = eSpawn  . vDamageDir ;
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_tmStarted  = _pTimer  -> CurrentTick  ();
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_tmLifeTime  = eSpawn  . tmLifeTime ;
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_vFXDestination  = eSpawn  . vDestination ;
#line 425 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_fSize  = eSpawn  . fSize ;
#line 426 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_ctCount  = eSpawn  . ctCount ;
#line 427 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bAlive  = TRUE ;
#line 428 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_penModel  = (CEntity  *) eSpawn  . eidModel ;
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_penModel2  = (CEntity  *) eSpawn  . eidModel2 ;
#line 430 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bWaitTrigger  = FALSE ;
#line 432 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if((CEntity  *) m_penModel  != NULL ){
#line 433 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_iModel1ID  = ((CEntity  *) m_penModel ) -> en_ulID ;
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else {
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_iModel1ID  = - 1;
#line 436 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if((CEntity  *) m_penModel2  != NULL ){
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_iModel2ID  = ((CEntity  *) m_penModel2 ) -> en_ulID ;
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}else {
#line 441 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_iModel2ID  = - 1;
#line 442 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x02600002, FALSE, EBegin());return TRUE;}BOOL CEffector::H0x02600002_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x02600002
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x02600003, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEffector::H0x02600003_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x02600003
;
#line 446 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_MOVING_RING )
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 448 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetModel  (MODEL_POWER_RING );
#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetModelMainTexture  (TEXTURE_POWER_RING );
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
en_fAcceleration  = 1e6f;
#line 451 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fSpeed  = 550.0f;
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetDesiredTranslation  (FLOAT3D (0 , - fSpeed  , 0));
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fPathLen  = GetPlacement  () . pl_PositionVector  (2) - m_vFXDestination  (2);
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_tmLifeTime  = fPathLen  / fSpeed ;
#line 456 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SwitchToModel  ();
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT fSize  = 36.0f;
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
FLOAT3D vStretch  = FLOAT3D (fSize  , fSize  * 2.0f , fSize );
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
GetModelObject  () -> StretchModel  (vStretch );
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
ModelChangeNotify  ();
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_SIZING_RING_FLARE )
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 465 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bLightSource  = TRUE ;
#line 466 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_iLightAnimation  = 0;
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_SIZING_BIG_BLUE_FLARE )
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bLightSource  = TRUE ;
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_iLightAnimation  = 1;
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 473 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_MORPH_MODELS  || m_eetType  == ET_DISAPPEAR_MODEL  || m_eetType  == ET_APPEAR_MODEL )
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bWaitTrigger  = TRUE ;
#line 476 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_tmStarted  = - 1;
#line 477 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 478 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_DISAPPEAR_MODEL_NOW  || m_eetType  == ET_APPEAR_MODEL_NOW )
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bWaitTrigger  = FALSE ;
#line 481 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_tmStarted  = _pTimer  -> CurrentTick  ();
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_bLightSource ){SetupLightSource  ();}
#line 487 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Jump(STATE_CURRENT,0x02600006, FALSE, EInternal());return TRUE;}BOOL CEffector::H0x02600006_Main_05(const CEntityEvent &__eeInput)
#line 488 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x02600006
if(!(_pTimer  -> CurrentTick  () < m_tmStarted  + m_tmLifeTime  && m_bAlive  || m_bWaitTrigger )){ Jump(STATE_CURRENT,0x02600007, FALSE, EInternal());return TRUE;}
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SetTimerAfter(0.25f);
Jump(STATE_CURRENT, 0x02600004, FALSE, EBegin());return TRUE;}BOOL CEffector::H0x02600004_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x02600004
switch(__eeInput.ee_slEvent)
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{const ETrigger&e= (ETrigger&)__eeInput;

#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(_pNetwork  -> IsServer  ()){
#line 495 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
SendEvent  (ETriggerEffector  ());
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 497 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
return TRUE;
#line 498 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETriggerEffector):
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{const ETriggerEffector&e= (ETriggerEffector&)__eeInput;

#line 501 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_MORPH_MODELS  || m_eetType  == ET_DISAPPEAR_MODEL  || m_eetType  == ET_APPEAR_MODEL )
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 503 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_tmStarted  = _pTimer  -> CurrentTick  ();
#line 504 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bWaitTrigger  = FALSE ;
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bAlive  = TRUE ;
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
return TRUE;
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x02600005, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 511 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}return TRUE;}BOOL CEffector::H0x02600005_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x02600005

#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(m_eetType  == ET_MOVING_RING )
#line 514 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 515 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
if(GetPlacement  () . pl_PositionVector  (2) < m_vFXDestination  (2))
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
{
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
m_bAlive  = FALSE ;
#line 518 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}Jump(STATE_CURRENT,0x02600006, FALSE, EInternal());return TRUE;
#line 520 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
}BOOL CEffector::H0x02600007_Main_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x02600007

#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Destroy  (FALSE );
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
Return(STATE_CURRENT,EVoid());
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/Effector.es"
return TRUE; ASSERT(FALSE); return TRUE;};