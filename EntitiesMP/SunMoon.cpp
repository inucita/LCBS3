/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 3 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"

#include "stdH.h"
#include <Engine/Base/Timer.h>
#include <Engine/Terrain/Terrain.h>
#include <math.h>
#include <Engine/Graphics/Color.h>

#include <EntitiesMP/SunMoon.h>
#include <EntitiesMP/SunMoon_tables.h>
#line 20 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"

extern COLOR g_colNewGameShadeColor;

#define C_WHITE_OPAQUE	(C_WHITE|CT_OPAQUE)

	inline COLOR AverageColor(COLOR col1, COLOR col2)
	{
		UBYTE uR1, uG1, uB1;
		UBYTE uR2, uG2, uB2;
		ColorToRGB(col1, uR1, uG1, uB1);
		ColorToRGB(col2, uR2, uG2, uB2);
		uR1 = (uR1>>1) + (uR2>>1);
		uG1 = (uG1>>1) + (uG2>>1);
		uB1 = (uB1>>1) + (uB2>>1);
		return RGBToColor(uR1, uG1, uB1);
	}

void CSunMoon::SetDefaultProperties(void) {
  m_strName = "SunMoon ";
  m_epLight = NULL;
  m_epSky = NULL;
  m_epSkyHorizon = NULL;
  m_epHaze = NULL;
  m_epFog = NULL;
  m_fLength = 10;
  m_fHeight = 5;
  m_bWeatherSun = TRUE ;
  m_colRainAmbient = C_WHITE_OPAQUE ;
  m_colHazeDefault = C_WHITE_OPAQUE ;
  m_colFogDefault = C_WHITE_OPAQUE ;
  m_bActive = TRUE ;
  m_lftSun = LFT_NONE ;
  m_lftMoon = LFT_NONE ;
  m_fnmColAniFile = CTString("");
  m_iSkyColAni = 0;
  m_aoSkyColAni.SetData(NULL);

  m_epSunModel = NULL;
  m_epMoonModel = NULL;
  m_eetMorningEvent = EET_START ;
  m_eetEveningEvent = EET_STOP ;
  m_epMorningTarget = NULL;
  m_epEveningTarget = NULL;
  m_bNoon = TRUE ;
  m_bNight = TRUE ;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 81 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
void CSunMoon::InitModelHolder(void) 
#line 82 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 83 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
InitAsEditorModel  ();
#line 85 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
BOOL bLoadOK  = TRUE ;
#line 87 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetModel  (MODEL_SUNMOON );
#line 89 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetModelObject  () -> StretchModel  (FLOAT3D (m_fLength  , m_fHeight  , m_fLength ));
#line 91 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 92 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 94 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetFlags  (GetFlags  () & ~ ENF_CLUSTERSHADOWS );
#line 96 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return ;
#line 97 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 99 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
BOOL CSunMoon::IsTargetValid(SLONG slPropertyOffset,CEntity * penTarget) 
#line 100 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 101 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(penTarget  == NULL ){return FALSE ;}
#line 103 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ULONG  ulFirst ;
#line 106 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ulFirst  = offsetof  (CSunMoon  , m_epLight );
#line 107 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == ulFirst ){return IsDerivedFromClass  (penTarget  , & CLight_DLLClass );}
#line 109 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ulFirst  = offsetof  (CSunMoon  , m_epSky );
#line 110 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == ulFirst ){return IsDerivedFromClass  (penTarget  , & CModelHolder3_DLLClass );}
#line 111 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ulFirst  = offsetof  (CSunMoon  , m_epSkyHorizon );
#line 112 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == ulFirst ){return IsDerivedFromClass  (penTarget  , & CModelHolder3_DLLClass );}
#line 114 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ulFirst  = offsetof  (CSunMoon  , m_epHaze );
#line 115 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == ulFirst ){return IsDerivedFromClass  (penTarget  , & CHazeMarker_DLLClass );}
#line 117 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ulFirst  = offsetof  (CSunMoon  , m_epFog );
#line 118 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == ulFirst ){return IsDerivedFromClass  (penTarget  , & CFogMarker_DLLClass );}
#line 120 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ulFirst  = offsetof  (CSunMoon  , m_epSunModel );
#line 121 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == ulFirst ){return (IsDerivedFromClass  (penTarget  , & CModelHolder3_DLLClass ) || IsDerivedFromClass  (penTarget  , & CModelHolder2_DLLClass ));}
#line 123 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ulFirst  = offsetof  (CSunMoon  , m_epMoonModel );
#line 124 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == ulFirst ){return (IsDerivedFromClass  (penTarget  , & CModelHolder3_DLLClass ) || IsDerivedFromClass  (penTarget  , & CModelHolder2_DLLClass ));}
#line 126 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return CEntity  :: IsTargetValid  (slPropertyOffset  , penTarget );
#line 127 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CEnvironmentParticlesHolder * CSunMoon::GetEPH() 
#line 129 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 130 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CWorld  * pWorld  = this  -> GetWorld  ();
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(pWorld  != NULL )
#line 132 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CBackgroundViewer  * pBV  = (CBackgroundViewer  *) (CEntity  *) (pWorld  -> wo_penBackgroundViewer );
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(pBV  != NULL )
#line 135 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CWorldSettingsController  * pWSC  = (CWorldSettingsController  *) (CEntity  *) (pBV  -> m_penWorldSettingsController );
#line 137 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(pWSC  != NULL )
#line 138 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 139 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return (CEnvironmentParticlesHolder  *) (CEntity  *) (pWSC  -> m_penEnvPartHolder );
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 141 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 142 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 143 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return NULL ;
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 145 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CLight * CSunMoon::GetLight() 
#line 146 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 147 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if((CEntity  *) m_epLight  != NULL )
#line 148 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 149 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return (CLight  *) (CEntity  *) m_epLight ;
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 151 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return NULL ;
#line 152 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 153 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CModelHolder3 * CSunMoon::GetSky() 
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 155 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if((CEntity  *) m_epSky  != NULL )
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 157 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return (CModelHolder3  *) (CEntity  *) m_epSky ;
#line 158 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return NULL ;
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CModelHolder3 * CSunMoon::GetSkyHorizon() 
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 163 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if((CEntity  *) m_epSkyHorizon  != NULL )
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return (CModelHolder3  *) (CEntity  *) m_epSkyHorizon ;
#line 166 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 167 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return NULL ;
#line 168 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 169 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CHazeMarker * CSunMoon::GetHaze() 
#line 170 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 171 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if((CEntity  *) m_epHaze  != NULL )
#line 172 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 173 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return (CHazeMarker  *) (CEntity  *) m_epHaze ;
#line 174 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 175 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return NULL ;
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CFogMarker * CSunMoon::GetFog() 
#line 178 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 179 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if((CEntity  *) m_epFog  != NULL )
#line 180 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 181 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return (CFogMarker  *) (CEntity  *) m_epFog ;
#line 182 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 183 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return NULL ;
#line 184 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 185 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
void CSunMoon::SetSunModelColor(COLOR col) 
#line 186 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 187 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if((CEntity  *) m_epSunModel  != NULL )
#line 188 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 189 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(IsDerivedFromClass  (m_epSunModel  , & CModelHolder3_DLLClass ))
#line 190 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 191 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_epSunModel  -> GetModelInstance  ())
#line 192 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 193 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_epSunModel  -> GetModelInstance  () -> SetModelColor  (col );
#line 194 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
((CModelHolder3  *) (CEntity  *) m_epSunModel ) -> m_colModelColor  = col ;
#line 195 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 196 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 197 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_epSunModel  -> GetModelObject  ())
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 201 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_epSunModel  -> GetModelObject  () -> mo_colBlendColor  = col ;
#line 202 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
((CModelHolder2  *) (CEntity  *) m_epSunModel ) -> m_colModelColor  = col ;
#line 203 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 206 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 207 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
void CSunMoon::SetMoonModelColor(COLOR col) 
#line 208 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 209 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if((CEntity  *) m_epMoonModel  != NULL )
#line 210 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(IsDerivedFromClass  (m_epMoonModel  , & CModelHolder3_DLLClass ))
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 213 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_epMoonModel  -> GetModelInstance  ())
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 215 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_epMoonModel  -> GetModelInstance  () -> SetModelColor  (col );
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
((CModelHolder3  *) (CEntity  *) m_epMoonModel ) -> m_colModelColor  = col ;
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 218 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 221 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_epMoonModel  -> GetModelObject  ())
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_epMoonModel  -> GetModelObject  () -> mo_colBlendColor  = col ;
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
((CModelHolder2  *) (CEntity  *) m_epMoonModel ) -> m_colModelColor  = col ;
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
void CSunMoon::SetLensFlare(LensFlareType lft) 
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetLight  () == NULL ){return ;}
#line 234 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CLightSource  lsNew ;
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> SetupLightSource  (lsNew );
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
switch(lft )
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 238 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_NONE : 
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = NULL ;
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_STANDARD : 
#line 242 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftStandard ;
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 244 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_STANDARD_REFLECTIONS : 
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftStandardReflections ;
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 247 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_YELLOW_STAR_RED_RING : 
#line 248 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRing ;
#line 249 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_WHITE_GLOW_STAR_RED_RING : 
#line 251 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftWhiteGlowStarRedRing ;
#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 253 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_WHITE_GLOW_STAR : 
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftWhiteGlowStar ;
#line 255 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_WHITE_STAR_RED_RING_STREAKS : 
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftWhiteStarRedRingStreaks ;
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_WHITE_STAR_RED_REFLECTIONS : 
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftWhiteStarRedReflections ;
#line 261 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_BLUE_STAR_BLUE_REFLECTIONS : 
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftBlueStarBlueReflections ;
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_WHITE_GLOW_STAR_RED_RING_FAR : 
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftYellowStarRedRingFar ;
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 271 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_WHITE_GLOW_FAR : 
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftWhiteGlowFar ;
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
case LFT_WHITE_GLOW_STAR_NG : 
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
lsNew  . ls_plftLensFlare  = & _lftWhiteGlowStarNG ;
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
break ;
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> m_lsLightSource  . SetLightSourceWithNoDiscarding  (lsNew );
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
COLOR CSunMoon::GetCurrentSkyAniColor(COLOR colBase) 
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_aoSkyColAni  . GetData  () != NULL )
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 285 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
UBYTE  ubR  , ubG  , ubB ;
#line 286 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ColorToRGB  (colBase  , ubR  , ubG  , ubB );
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FLOAT fRatio ;
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
COLOR col0  , col1 ;
#line 289 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
UBYTE  ubMR  , ubMG  , ubMB ;
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_aoSkyColAni  . GetFrame  ((SLONG  &) col0  , (SLONG  &) col1  , fRatio );
#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LerpColor  (col0  , col1  , fRatio  , ubMR  , ubMG  , ubMB );
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ubR  = (((((SLONG ) ubR ) << 8) | ubR ) * ((((SLONG ) ubMR ) << 8) | ubMR )) >> 24;
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ubG  = (((((SLONG ) ubG ) << 8) | ubG ) * ((((SLONG ) ubMG ) << 8) | ubMG )) >> 24;
#line 294 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ubB  = (((((SLONG ) ubB ) << 8) | ubB ) * ((((SLONG ) ubMB ) << 8) | ubMB )) >> 24;
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
colBase  = RGBToColor  (ubR  , ubG  , ubB ) | ((colBase  & CT_AMASK ) >> CT_ASHIFT );
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return colBase ;
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
COLOR CSunMoon::GetCurrentSkyAniColor() 
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return GetCurrentSkyAniColor  (C_WHITE_OPAQUE );
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CAnimData * CSunMoon::GetAnimData(SLONG slPropertyOffset) 
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(slPropertyOffset  == offsetof  (CSunMoon  , m_iSkyColAni ))
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return m_aoSkyColAni  . GetData  ();
#line 308 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 311 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return CEntity  :: GetAnimData  (slPropertyOffset );
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
void CSunMoon::SetLightPlacement3D() 
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetLight  () == NULL ){return ;}
#line 319 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
DOUBLE  tmOffset  = GAMETIME_ONEDAY_SECOND  - GAMETIME_MORNING_SECOND ;
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
DOUBLE  dGWTSecondFromMorning  = g_fGWTime  + tmOffset ;
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(dGWTSecondFromMorning  > GAMETIME_ONEDAY_SECOND )
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
dGWTSecondFromMorning  -= GAMETIME_ONEDAY_SECOND  * (INDEX) (dGWTSecondFromMorning  / GAMETIME_ONEDAY_SECOND );
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CPlacement3D place ;
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FLOAT theta  = 0.0f;
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(dGWTSecondFromMorning  < GAMETIME_NOONDAY_SECOND )
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
theta  = PI  * dGWTSecondFromMorning  / (FLOAT) GAMETIME_NOONDAY_SECOND ;
#line 334 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_bNoon )
#line 335 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SendToTarget  (m_epMorningTarget  , m_eetMorningEvent  , this );
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetLensFlare  (m_lftSun );
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = FALSE ;
#line 339 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNight  = TRUE ;
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetSunModelColor  (0xFFFFFFFF);
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetMoonModelColor  (0x00000000);
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
theta  = PI  - PI  * (dGWTSecondFromMorning  - GAMETIME_NOONDAY_SECOND ) / (FLOAT) GAMETIME_NIGHT_SECOND ;
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_bNight )
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SendToTarget  (m_epEveningTarget  , m_eetEveningEvent  , this );
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetLensFlare  (m_lftMoon );
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = TRUE ;
#line 353 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNight  = FALSE ;
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetSunModelColor  (0x00000000);
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetMoonModelColor  (0xFFFFFFFF);
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 359 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
place  . pl_PositionVector  (1) = m_fLength  * cos  (theta );
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
place  . pl_PositionVector  (2) = m_fHeight  * sin  (theta );
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
place  . pl_PositionVector  (3) = 0;
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
place  . pl_OrientationAngle  (1) = 270.0f;
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
place  . pl_OrientationAngle  (2) = 180.0f + theta  * 180.0f / PI ;
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
place  . pl_OrientationAngle  (3) = 0.0f;
#line 366 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CPlacement3D placeOld  = this  -> en_plPlacement ;
#line 367 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CPlacement3D placeZero  (FLOAT3D (0 , 0 , 0) , ANGLE3D (0 , 0 , 0));
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> SetParent  (NULL );
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
this  -> SetPlacement  (placeZero );
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> SetPlacement  (place );
#line 372 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> SetParent  (this );
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
this  -> SetPlacement  (placeOld );
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
void CSunMoon::SetCurrentColor() 
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FLOAT fGWTime  = g_fGWTime ;
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
DOUBLE  rwtime  = - g_fGWTime  * GWTOneSec2RWTSec ;
#line 382 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
TIME  tmNow  = _pTimer  -> CurrentTick  () + _pTimer  -> GetLerpFactor  () * _pTimer  -> TickQuantum ;
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
DOUBLE  rwOffsetTime  = rwtime  + tmNow ;
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetLight  ())
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> m_aoLightAnimation  . ResetAnim  ();
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> m_aoAmbientLightAnimation  . ResetAnim  ();
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> m_aoLightAnimation  . ao_tmAnimStart  = rwOffsetTime ;
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> m_aoAmbientLightAnimation  . ao_tmAnimStart  = rwOffsetTime ;
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> m_lsLightSource  . ls_colAmbient  = MulColors  (GetLight  () -> m_colAmbient  , g_colWeather );
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colNewGameShadeColor  = AddColors  (
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetLight  () -> m_lsLightSource  . GetLightAmbient  () 
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
, GetLight  () -> m_lsLightSource  . GetLightColor  ()) | CT_OPAQUE ;
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetSkyHorizon  ())
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
ENGINE_API  INDEX g_iUseBloom ;
#line 398 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
static COLOR col2nd  = 0x9E9E9EFF;
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
static COLOR col1st  = 0xA5A5A5FF;
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
COLOR color  = g_iUseBloom  == 0 
#line 401 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
? g_colNewGameShadeColor  
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
: MulColors  (g_colNewGameShadeColor  , g_iUseBloom  == 2 ? col2nd  : col1st );
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetSkyHorizon  () -> GetModelInstance  () -> SetModelColor  (
#line 404 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
MulColors  (GetSkyHorizon  () -> m_colModelColor  , color )
#line 405 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
);
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetSkyHorizon  () -> m_aShadingDirection  = GetLight  () -> en_plPlacement  . pl_OrientationAngle ;
#line 407 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
AnglesToDirectionVector  (GetSkyHorizon  () -> m_aShadingDirection  , GetSkyHorizon  () -> m_vShadingDirection );
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetHaze  ())
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetHaze  () -> m_colBase  = MulColors  (m_colHazeDefault  , g_colNewGameShadeColor );
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetFog  ())
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetFog  () -> m_colColor  = MulColors  (m_colFogDefault  , g_colNewGameShadeColor );
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_aoSkyColAni  . GetData  () != NULL )
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_aoSkyColAni  . ResetAnim  ();
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_aoSkyColAni  . ao_tmAnimStart  = rwOffsetTime ;
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
COLOR colSky  = GetCurrentSkyAniColor  (g_colWeather );
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetSky  ())
#line 425 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 426 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetSky  () -> GetModelInstance  () -> SetModelColor  (
#line 427 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
MulColors  (GetSky  () -> m_colModelColor  , colSky )
#line 428 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
);
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 430 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
  
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
void CSunMoon::LightProcess() 
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 436 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_bActive )
#line 437 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetLightPlacement3D  ();
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetCurrentColor  ();
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 441 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
BOOL CSunMoon::
#line 445 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FadeInRain(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CSunMoon_FadeInRain
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CSunMoon::FadeInRain expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = TRUE ;
#line 448 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNight  = TRUE ;
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_bBadWeather  = TRUE ;
#line 451 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_dPrevGWTime  = g_fGWTime ;
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colWeather  = C_WHITE_OPAQUE ;
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LightProcess  ();
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT,0x03e90003, FALSE, EInternal());return TRUE;}BOOL CSunMoon::H0x03e90003_FadeInRain_03(const CEntityEvent &__eeInput)
#line 456 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90003
if(!(m_fFadeTime  >= 0.0f)){ Jump(STATE_CURRENT,0x03e90004, FALSE, EInternal());return TRUE;}
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FLOAT percent  = Clamp  (1.0f - m_fFadeTime  / m_fAllFadeTime  , 0.0f , 1.0f);
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colWeather  = LerpColor  (C_WHITE_OPAQUE  , m_colRainAmbient  , percent ) | CT_OPAQUE ;
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LightProcess  ();
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fFadeTime  -= (g_fGWTime  - m_dPrevGWTime );
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_dPrevGWTime  = g_fGWTime ;
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x03e90001, FALSE, EBegin());return TRUE;}BOOL CSunMoon::H0x03e90001_FadeInRain_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03e90002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CSunMoon::H0x03e90002_FadeInRain_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90002
;Jump(STATE_CURRENT,0x03e90003, FALSE, EInternal());return TRUE;
#line 465 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}BOOL CSunMoon::H0x03e90004_FadeInRain_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90004

#line 466 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colWeather  = m_colRainAmbient ;
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = m_bNight  = FALSE ;
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetLensFlare  (LFT_NONE );
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT, STATE_CSunMoon_MainLoop, TRUE, EVoid());return TRUE;
#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Return(STATE_CURRENT,EVoid());
#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CSunMoon::
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FadeOutRain(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CSunMoon_FadeOutRain
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CSunMoon::FadeOutRain expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = TRUE ;
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNight  = TRUE ;
#line 477 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_bBadWeather  = FALSE ;
#line 478 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_dPrevGWTime  = g_fGWTime ;
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colWeather  = m_colRainAmbient ;
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LightProcess  ();
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT,0x03e90008, FALSE, EInternal());return TRUE;}BOOL CSunMoon::H0x03e90008_FadeOutRain_03(const CEntityEvent &__eeInput)
#line 483 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90008
if(!(m_fFadeTime  >= 0.0f)){ Jump(STATE_CURRENT,0x03e90009, FALSE, EInternal());return TRUE;}
#line 484 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FLOAT percent  = Clamp  (1.0f - m_fFadeTime  / m_fAllFadeTime  , 0.0f , 1.0f);
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colWeather  = LerpColor  (m_colRainAmbient  , C_WHITE_OPAQUE  , percent ) | CT_OPAQUE ;
#line 487 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LightProcess  ();
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fFadeTime  -= (g_fGWTime  - m_dPrevGWTime );
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_dPrevGWTime  = g_fGWTime ;
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x03e90006, FALSE, EBegin());return TRUE;}BOOL CSunMoon::H0x03e90006_FadeOutRain_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90006
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03e90007, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CSunMoon::H0x03e90007_FadeOutRain_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90007
;Jump(STATE_CURRENT,0x03e90008, FALSE, EInternal());return TRUE;
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}BOOL CSunMoon::H0x03e90009_FadeOutRain_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90009

#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colWeather  = C_WHITE_OPAQUE ;
#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = m_bNight  = TRUE ;
#line 495 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT, STATE_CSunMoon_MainLoop, TRUE, EVoid());return TRUE;
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Return(STATE_CURRENT,EVoid());
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CSunMoon::
#line 498 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GoodWeather(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CSunMoon_GoodWeather
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CSunMoon::GoodWeather expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = TRUE ;
#line 501 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNight  = TRUE ;
#line 503 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT,0x03e9000d, FALSE, EInternal());return TRUE;}BOOL CSunMoon::H0x03e9000d_GoodWeather_03(const CEntityEvent &__eeInput)
#line 504 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e9000d
if(!(TRUE )){ Jump(STATE_CURRENT,0x03e9000e, FALSE, EInternal());return TRUE;}
#line 505 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetLight  ())
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LightProcess  ();
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetTimerAfter(0.100f);
Jump(STATE_CURRENT, 0x03e9000b, FALSE, EBegin());return TRUE;}BOOL CSunMoon::H0x03e9000b_GoodWeather_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e9000b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03e9000c, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CSunMoon::H0x03e9000c_GoodWeather_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e9000c
;Jump(STATE_CURRENT,0x03e9000d, FALSE, EInternal());return TRUE;
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}BOOL CSunMoon::H0x03e9000e_GoodWeather_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e9000e
 ASSERT(FALSE); return TRUE;};BOOL CSunMoon::
#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
MainLoop(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CSunMoon_MainLoop
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CSunMoon::MainLoop expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 515 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_dPrevGWTime  = g_fGWTime ;
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = TRUE ;
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNight  = TRUE ;
#line 518 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LightProcess  ();
#line 520 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT,0x03e90012, FALSE, EInternal());return TRUE;}BOOL CSunMoon::H0x03e90012_MainLoop_03(const CEntityEvent &__eeInput)
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90012
if(!(TRUE )){ Jump(STATE_CURRENT,0x03e90013, FALSE, EInternal());return TRUE;}
#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
LightProcess  ();
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x03e90010, FALSE, EBegin());return TRUE;}BOOL CSunMoon::H0x03e90010_MainLoop_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90010
switch(__eeInput.ee_slEvent)
#line 524 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
Call(STATE_CURRENT, STATE_CSunMoon_GoodWeather, TRUE, EVoid());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EActivate):{const EActivate&e= (EActivate&)__eeInput;
m_bActive  = TRUE ;return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;
m_bActive  = FALSE ;return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;

#line 529 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetEPH  () != NULL )
#line 530 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fAllFadeTime  = m_fFadeTime  = GetEPH  () -> m_fRainAppearLen  * RWTOneSec2GWTSec ;
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 533 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 534 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 535 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fAllFadeTime  = m_fFadeTime  = 1.0f * RWTOneSec2GWTSec ;
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 537 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bWeatherSun  = TRUE ;
#line 538 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetLight  () != NULL  && g_colWeather  == C_WHITE_OPAQUE )
#line 539 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT, STATE_CSunMoon_FadeInRain, TRUE, EVoid());return TRUE;
#line 541 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 542 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 543 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 544 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
UnsetTimer();Jump(STATE_CURRENT,0x03e90011, FALSE, EInternal());return TRUE;
#line 545 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 546 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):{const EStop&e= (EStop&)__eeInput;

#line 548 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetEPH  () != NULL )
#line 549 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 550 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fAllFadeTime  = m_fFadeTime  = GetEPH  () -> m_fRainAppearLen  * RWTOneSec2GWTSec ;
#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 552 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 554 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fAllFadeTime  = m_fFadeTime  = 1.0f * RWTOneSec2GWTSec ;
#line 555 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 556 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bWeatherSun  = FALSE ;
#line 557 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetLight  () != NULL  && g_colWeather  == m_colRainAmbient )
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 559 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT, STATE_CSunMoon_FadeOutRain, TRUE, EVoid());return TRUE;
#line 560 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 561 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
else 
#line 562 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 563 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
UnsetTimer();Jump(STATE_CURRENT,0x03e90011, FALSE, EInternal());return TRUE;
#line 564 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 565 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&et= (ETrigger&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x03e90011, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 567 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}return TRUE;}BOOL CSunMoon::H0x03e90011_MainLoop_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90011
;
#line 568 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_dPrevGWTime  = g_fGWTime ;Jump(STATE_CURRENT,0x03e90012, FALSE, EInternal());return TRUE;
#line 569 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}BOOL CSunMoon::H0x03e90013_MainLoop_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03e90013

#line 570 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
int  a  = 0; ASSERT(FALSE); return TRUE;};BOOL CSunMoon::
#line 573 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CSunMoon_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CSunMoon::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 576 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
InitModelHolder  ();
#line 578 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
g_colWeather  = C_WHITE_OPAQUE ;
#line 579 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
FLOAT fRWDaySecond  = (FLOAT) GAMETIME_ONEDAY_SECOND  * GWTOneSec2RWTSec ;
#line 581 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
try 
#line 582 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 583 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_aoSkyColAni  . SetData_t  (m_fnmColAniFile );
#line 584 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 585 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
catch  (char  * strError )
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 587 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
WarningMessage  (TRANS  ("Cannot load '%s': %s") , (CTString &) m_fnmColAniFile  , strError );
#line 588 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fnmColAniFile  = "";
#line 589 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 590 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(m_aoSkyColAni  . GetData  () != NULL )
#line 591 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 592 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_aoSkyColAni  . PlayAnim  (m_iSkyColAni  , AOF_LOOPING );
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_aoSkyColAni  . ao_tmAnimStart  = 0;
#line 594 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_aoSkyColAni  . GetData  () -> SetSpeed  (
#line 595 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_iSkyColAni  
#line 596 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
, fRWDaySecond  / (FLOAT) m_aoSkyColAni  . GetFramesInCurrentAnim  ()
#line 597 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
);
#line 598 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 600 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fFadeTime  = 0.0f;
#line 601 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_fAllFadeTime  = 1.0f;
#line 602 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_dPrevGWTime  = g_fGWTime ;
#line 603 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNoon  = TRUE ;
#line 604 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_bNight  = TRUE ;
#line 606 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
CLight  * pLight  = GetLight  ();
#line 607 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(pLight  != NULL )
#line 608 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 609 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
pLight  -> SetParent  (this );
#line 610 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_plftDefault  = pLight  -> m_lsLightSource  . ls_plftLensFlare ;
#line 611 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(pLight  -> m_aoLightAnimation  . GetData  () != NULL )
#line 612 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 613 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
pLight  -> m_aoLightAnimation  . GetData  () -> SetSpeed  (
#line 614 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
pLight  -> m_iLightAnimation  
#line 615 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
, fRWDaySecond  / (FLOAT) pLight  -> m_aoLightAnimation  . GetFramesInCurrentAnim  ()
#line 616 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
);
#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 618 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(pLight  -> m_aoAmbientLightAnimation  . GetData  () != NULL )
#line 619 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 620 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
pLight  -> m_aoAmbientLightAnimation  . GetData  () -> SetSpeed  (
#line 621 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
pLight  -> m_iAmbientLightAnimation  
#line 622 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
, fRWDaySecond  / (FLOAT) pLight  -> m_aoAmbientLightAnimation  . GetFramesInCurrentAnim  ()
#line 623 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
);
#line 624 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 625 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 626 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_strName  . RemovePrefix  ("SunMoon ");
#line 627 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
m_strName  = CTString ("SunMoon ") + m_strName ;
#line 628 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(pLight  != NULL )
#line 629 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 630 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
pLight  -> m_strName  . RemovePrefix  ("SunMoon ");
#line 631 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
pLight  -> m_strName  = CTString ("SunMoon ") + pLight  -> m_strName ;
#line 632 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 634 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
if(GetSky  ())
#line 635 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
{
#line 636 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetSky  () -> GetModelInstance  () -> SetModelColor  (
#line 637 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
GetCurrentSkyAniColor  (GetSky  () -> m_colModelColor )
#line 638 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
);
#line 639 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
}
#line 641 "E:/질산/Korea/Client_USA/EntitiesMP/SunMoon.es"
Jump(STATE_CURRENT, STATE_CSunMoon_MainLoop, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};