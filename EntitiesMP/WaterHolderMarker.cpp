/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"

#include "StdH.h"

#include <EntitiesMP/WaterHolderMarker.h>
#include <EntitiesMP/WaterHolderMarker_tables.h>
void CWaterHolderMarker::SetDefaultProperties(void) {
  m_strName = "WaterHolderMarker";
  m_iGridX = 1;
  m_iGridY = 1;
  m_fWidthSize = 2.0f;
  m_fHeightSize = 2.0f;
  m_bGenerate = FALSE ;
  m_iStartID = 0;
  CMarker::SetDefaultProperties();
}
  
#line 26 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
void CWaterHolderMarker::InitWaterMarker() 
#line 27 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
{
#line 28 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
InitAsEditorModel  ();
#line 29 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 30 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 33 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
SetModel  (MODEL_AREAMARKER );
#line 34 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
SetModelMainTexture  (TEXTURE_AREAMARKER );
#line 35 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
return ;
#line 36 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
}
  
#line 37 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
void CWaterHolderMarker::GenerateWaterEntity() 
#line 38 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
{
#line 39 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
if(m_bGenerate )
#line 40 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
{
#line 41 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
CPlacement3D plPlacement ;
#line 42 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
FLOAT3D vPosition  = GetLerpedPlacement  () . pl_PositionVector ;
#line 43 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
for(int  i  = 0;i  < m_iGridX ;++ i )
#line 44 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
{
#line 45 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
for(int  j  = 0;j  < m_iGridY ;++ j )
#line 46 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
{
#line 47 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
CEntity  * penEntity  = NULL ;
#line 48 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
plPlacement  . pl_PositionVector  = FLOAT3D (vPosition  (1) + i  * m_fWidthSize  , vPosition  (2) , vPosition  (3) + j  * m_fHeightSize );
#line 49 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (0.0f , 0.0f , 0.0f);
#line 51 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
if(m_iStartID  == 0)
#line 52 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
{
#line 53 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
penEntity  = en_pwoWorld  -> CreateEntity_t  (plPlacement  , CTFILENAME  ("Classes\\WaterHolder.ecl"));
#line 54 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
}
#line 55 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
else 
#line 56 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
{
#line 57 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
penEntity  = en_pwoWorld  -> CreateEntity_t  (plPlacement  , CTFILENAME  ("Classes\\WaterHolder.ecl") , m_iStartID  + (i  * m_iGridX  + j ));
#line 58 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
}
#line 59 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
ASSERT  (penEntity  != NULL  && "Invalid Entity Pointer");
#line 63 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
}
#line 64 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
}
#line 65 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
m_bGenerate  = FALSE ;
#line 66 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
}
#line 67 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
}
BOOL CWaterHolderMarker::
#line 70 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWaterHolderMarker_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWaterHolderMarker::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 72 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
InitWaterMarker  ();
#line 73 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
GenerateWaterEntity  ();
#line 74 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
Return(STATE_CURRENT,EVoid());
#line 74 "E:/질산/Korea/Client_USA/EntitiesMP/WaterHolderMarker.es"
return TRUE; ASSERT(FALSE); return TRUE;};