/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"

#include "StdH.h"
#include "EntitiesMP/BackgroundViewer.h"
#include "EntitiesMP/WorldSettingsController.h"
#include "EntitiesMP/Lightning.h"

#include <EntitiesMP/StormController.h>
#include <EntitiesMP/StormController_tables.h>
CEntityEvent *EStormEnvironmentStart::MakeCopy(void) { CEntityEvent *peeCopy = new EStormEnvironmentStart(*this); return peeCopy;}
SLONG EStormEnvironmentStart::GetSizeOf(void) { return sizeof(*this);}
EStormEnvironmentStart::EStormEnvironmentStart() : CEntityEvent(EVENTCODE_EStormEnvironmentStart) {;
};
BOOL EStormEnvironmentStart::CheckIDs(void) { return TRUE ; }
CEntityEvent *EStormStart::MakeCopy(void) { CEntityEvent *peeCopy = new EStormStart(*this); return peeCopy;}
SLONG EStormStart::GetSizeOf(void) { return sizeof(*this);}
EStormStart::EStormStart() : CEntityEvent(EVENTCODE_EStormStart) {;
};
BOOL EStormStart::CheckIDs(void) { return TRUE ; }
CEntityEvent *EStormStop::MakeCopy(void) { CEntityEvent *peeCopy = new EStormStop(*this); return peeCopy;}
SLONG EStormStop::GetSizeOf(void) { return sizeof(*this);}
EStormStop::EStormStop() : CEntityEvent(EVENTCODE_EStormStop) {;
};
BOOL EStormStop::CheckIDs(void) { return TRUE ; }
void CStormController::SetDefaultProperties(void) {
  m_penwsc = NULL;
  m_strName = "Storm controller";
  m_fNextLightningDelay = 0.0f;
  m_bStormOn = FALSE ;
  m_fNextLightningStrike = 0.0f;
  m_penLightning00 = NULL;
  m_penLightning01 = NULL;
  m_penLightning02 = NULL;
  m_penLightning03 = NULL;
  m_penLightning04 = NULL;
  m_penLightning05 = NULL;
  m_penLightning06 = NULL;
  m_penLightning07 = NULL;
  m_penLightning08 = NULL;
  m_penLightning09 = NULL;
  m_penLightning10 = NULL;
  m_penLightning11 = NULL;
  m_penLightning12 = NULL;
  m_penLightning13 = NULL;
  m_penLightning14 = NULL;
  m_penLightning15 = NULL;
  m_penLightning16 = NULL;
  m_penLightning17 = NULL;
  m_penLightning18 = NULL;
  m_penLightning19 = NULL;
  m_tmStormAppearTime = 10.0f;
  m_tmStormDisappearTime = 10.0f;
  m_fFirstLightningDelay = 10.0f;
  m_fMaxLightningPeriod = 10.0f;
  m_fMinLightningPeriod = 1.0f;
  m_fMaxStormPowerTime = 120.0f;
  m_colBlendStart = COLOR(C_WHITE  | CT_TRANSPARENT );
  m_colBlendStop = COLOR(C_WHITE  | CT_OPAQUE );
  m_colShadeStart = COLOR(C_WHITE  | CT_OPAQUE );
  m_colShadeStop = COLOR(C_GRAY  | CT_OPAQUE );
  CRationalEntity::SetDefaultProperties();
}
  
#line 66 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
void CStormController::CheckOneLightningTarget(CEntityPointer & pen) 
#line 67 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 68 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(pen  != NULL  && ! IsOfClass  (pen  , & CLightning_DLLClass ))
#line 69 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 70 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
WarningMessage  ("Target '%s' is not of class Lightning!" , pen  -> GetName  ());
#line 71 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
pen  = NULL ;
#line 72 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 73 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
  
#line 76 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
INDEX CStormController::GetLightningsCount(void)const 
#line 77 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 79 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning00  == NULL ){return 0;};
#line 80 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning01  == NULL ){return 1;};
#line 81 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning02  == NULL ){return 2;};
#line 82 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning03  == NULL ){return 3;};
#line 83 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning04  == NULL ){return 4;};
#line 84 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning05  == NULL ){return 5;};
#line 85 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning06  == NULL ){return 6;};
#line 86 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning07  == NULL ){return 7;};
#line 87 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning08  == NULL ){return 8;};
#line 88 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning09  == NULL ){return 9;};
#line 89 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning10  == NULL ){return 10;};
#line 90 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning11  == NULL ){return 11;};
#line 91 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning12  == NULL ){return 12;};
#line 92 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning13  == NULL ){return 13;};
#line 93 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning14  == NULL ){return 14;};
#line 94 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning15  == NULL ){return 15;};
#line 95 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning16  == NULL ){return 16;};
#line 96 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning17  == NULL ){return 17;};
#line 97 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penLightning18  == NULL ){return 18;};
#line 98 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return 20;
#line 99 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
  
#line 102 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
BOOL CStormController::SetUpWorldSettingsController() 
#line 103 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 104 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 106 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CBackgroundViewer  * penBcgViewer  = (CBackgroundViewer  *) GetWorld  () -> GetBackgroundViewer  ();
#line 107 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(penBcgViewer  == NULL )
#line 108 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 110 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return FALSE ;
#line 111 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 114 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_penwsc  = penBcgViewer  -> m_penWorldSettingsController ;
#line 115 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penwsc  == NULL )
#line 116 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 118 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return FALSE ;
#line 119 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 122 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! IsOfClass  (m_penwsc  , & CWorldSettingsController_DLLClass ))
#line 123 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 125 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return FALSE ;
#line 126 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CWorldSettingsController  * pwsc  = (CWorldSettingsController  *) & * m_penwsc ;
#line 129 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
pwsc  -> m_colBlendStart  = m_colBlendStart ;
#line 130 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
pwsc  -> m_colBlendStop  = m_colBlendStop ;
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
pwsc  -> m_colShadeStart  = m_colShadeStart ;
#line 132 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
pwsc  -> m_colShadeStop  = m_colShadeStop ;
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
pwsc  -> m_tmStormAppearTime  = m_tmStormAppearTime ;
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
pwsc  -> m_tmStormDisappearTime  = m_tmStormDisappearTime ;
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_bStormOn  = FALSE ;
#line 139 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return true ;
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
BOOL CStormController::
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Storm(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CStormController_Storm
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CStormController::Storm expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 147 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetTimerAfter(10.0f);
Jump(STATE_CURRENT, 0x025e0004, FALSE, EBegin());return TRUE;}BOOL CStormController::H0x025e0004_Storm_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0004
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x025e0005, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CStormController::H0x025e0005_Storm_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0005
;
#line 148 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_fNextLightningStrike  = m_tmStormAppearTime  + m_fFirstLightningDelay ;
#line 149 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Jump(STATE_CURRENT, STATE_CStormController_StormInternal, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CStormController::
#line 152 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
StormInternal(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CStormController_StormInternal
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CStormController::StormInternal expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penwsc  == NULL ){
#line 155 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! SetUpWorldSettingsController  ()){
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Return(STATE_CURRENT,EReturn  ());
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 157 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 158 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Jump(STATE_CURRENT,0x025e000d, FALSE, EInternal());return TRUE;}BOOL CStormController::H0x025e000d_StormInternal_07(const CEntityEvent &__eeInput)
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e000d
if(!(m_bStormOn  && 
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
_pTimer  -> CurrentTick  () < ((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormEnd  + m_tmStormDisappearTime )){ Jump(STATE_CURRENT,0x025e000e, FALSE, EInternal());return TRUE;}
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Jump(STATE_CURRENT,0x025e0009, FALSE, EInternal());return TRUE;}BOOL CStormController::H0x025e0009_StormInternal_03(const CEntityEvent &__eeInput)
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0009
if(!(_pTimer  -> CurrentTick  () < m_fNextLightningStrike  && 
#line 163 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
_pTimer  -> CurrentTick  () < ((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormEnd  + m_tmStormDisappearTime  && 
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_bStormOn )){ Jump(STATE_CURRENT,0x025e000a, FALSE, EInternal());return TRUE;}
#line 167 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x025e0007, FALSE, EBegin());return TRUE;}BOOL CStormController::H0x025e0007_StormInternal_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0007
switch(__eeInput.ee_slEvent)
#line 168 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{case(EVENTCODE_EBegin):
#line 170 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 171 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 172 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnvironmentStop):
#line 174 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EEnvironmentStop&e= (EEnvironmentStop&)__eeInput;

#line 175 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_fNextLightningStrike  += 1.0f;
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x025e0008, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 179 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}return TRUE;}BOOL CStormController::H0x025e0008_StormInternal_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0008

#line 180 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penwsc  == NULL ){
#line 181 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! SetUpWorldSettingsController  ()){
#line 182 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Return(STATE_CURRENT,EReturn  ());
#line 182 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 183 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 184 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}Jump(STATE_CURRENT,0x025e0009, FALSE, EInternal());return TRUE;
#line 185 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}BOOL CStormController::H0x025e000a_StormInternal_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e000a

#line 186 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x025e000b, FALSE, EBegin());return TRUE;}BOOL CStormController::H0x025e000b_StormInternal_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e000b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x025e000c, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CStormController::H0x025e000c_StormInternal_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e000c
;
#line 187 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penwsc  == NULL ){
#line 188 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! SetUpWorldSettingsController  ()){
#line 189 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Return(STATE_CURRENT,EReturn  ());
#line 189 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 190 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 191 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 194 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
FLOAT fLightningStart  = ((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormStart  + m_fFirstLightningDelay ;
#line 195 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
FLOAT fLightningMax  = fLightningStart  + m_fMaxStormPowerTime ;
#line 196 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
FLOAT fRatio ;
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(_pTimer  -> CurrentTick  () > ((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormEnd  - m_tmStormDisappearTime )
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_bStormOn  = FALSE ;
#line 201 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 202 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
else 
#line 203 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(_pTimer  -> CurrentTick  () < fLightningMax )
#line 206 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 207 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
fRatio  = CalculateRatio  (_pTimer  -> CurrentTick  () , fLightningStart  , fLightningMax  , 1.0f , 0.0f);
#line 208 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 210 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
else 
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
fRatio  = 1;
#line 213 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
FLOAT tmPeriod  = (m_fMaxLightningPeriod  - m_fMinLightningPeriod ) * (1.0f - fRatio );
#line 215 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
FLOAT fNextLighting  = m_fMinLightningPeriod  + tmPeriod  * (1.0f + (FRnd  () - 0.5f) * 0.25f);
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_fNextLightningStrike  = _pTimer  -> CurrentTick  () + fNextLighting ;
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
INDEX ctLightnings  = GetLightningsCount  ();
#line 221 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(ctLightnings  != 0)
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CLightning  * penLightning  = (CLightning  *) & * (& m_penLightning00 ) [ IRnd  () % ctLightnings  ];
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SendToTarget  (penLightning  , EET_TRIGGER );
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}Jump(STATE_CURRENT,0x025e000d, FALSE, EInternal());return TRUE;
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}BOOL CStormController::H0x025e000e_StormInternal_08(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e000e

#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_bStormOn  = FALSE ;
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Return(STATE_CURRENT,EReturn  ());
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CStormController::
#line 233 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CStormController_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CStormController::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning00 );
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning01 );
#line 238 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning02 );
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning03 );
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning04 );
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning05 );
#line 242 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning06 );
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning07 );
#line 244 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning08 );
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning09 );
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning10 );
#line 247 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning11 );
#line 248 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning12 );
#line 249 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning13 );
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning14 );
#line 251 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning15 );
#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning16 );
#line 253 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning17 );
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning18 );
#line 255 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
CheckOneLightningTarget  (m_penLightning19 );
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
InitAsEditorModel  ();
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 261 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetModel  (MODEL_STORM_CONTROLLER );
#line 265 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetModelMainTexture  (TEXTURE_STORM_CONTROLLER );
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x025e000f, FALSE, EBegin());return TRUE;}BOOL CStormController::H0x025e000f_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e000f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x025e0010, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CStormController::H0x025e0010_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0010
;
#line 271 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! SetUpWorldSettingsController  ()){
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Return(STATE_CURRENT,EVoid());
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_bStormOn  = FALSE ;
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Jump(STATE_CURRENT,0x025e0013, FALSE, EInternal());return TRUE;}BOOL CStormController::H0x025e0013_Main_05(const CEntityEvent &__eeInput)
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0013
if(!(TRUE )){ Jump(STATE_CURRENT,0x025e0014, FALSE, EInternal());return TRUE;}
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x025e0011, FALSE, EBegin());return TRUE;}BOOL CStormController::H0x025e0011_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0011
switch(__eeInput.ee_slEvent)
#line 280 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{case(EVENTCODE_EEnvironmentStart):
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EEnvironmentStart&e= (EEnvironmentStart&)__eeInput;

#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(_pNetwork  -> IsServer  ()){
#line 285 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SendEvent  (EStormEnvironmentStart  () , TRUE );
#line 286 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStormEnvironmentStart):
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EStormEnvironmentStart&e= (EStormEnvironmentStart&)__eeInput;

#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penwsc  == NULL ){
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! SetUpWorldSettingsController  ()){
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 294 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormStart  = tmNow  - m_tmStormAppearTime ;
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormEnd  = 1e6;
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_bStormOn  = TRUE ;
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_fNextLightningStrike  = _pTimer  -> CurrentTick  () + 2.0f;
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Call(STATE_CURRENT, STATE_CStormController_StormInternal, TRUE, EVoid());return TRUE;
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EStart&e= (EStart&)__eeInput;

#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(_pNetwork  -> IsServer  ()){
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SendEvent  (EStormStart  () , TRUE );
#line 308 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStormStart):
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EStormStart&e= (EStormStart&)__eeInput;

#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! m_bStormOn ){
#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penwsc  == NULL ){
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! SetUpWorldSettingsController  ()){
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 318 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 319 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormStart  = tmNow ;
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormEnd  = 1e6;
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
m_bStormOn  = TRUE ;
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
Call(STATE_CURRENT, STATE_CStormController_Storm, TRUE, EVoid());return TRUE;
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EStop&eStop= (EStop&)__eeInput;

#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(_pNetwork  -> IsServer  ()){
#line 330 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
SendEvent  (EStormStop  () , TRUE );
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStormStop):
#line 335 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{const EStormStop&e= (EStormStop&)__eeInput;

#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_bStormOn ){
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(m_penwsc  == NULL ){
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
if(! SetUpWorldSettingsController  ()){
#line 339 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
((CWorldSettingsController  *) & * m_penwsc ) -> m_tmStormEnd  = tmNow ;
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;default:
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
{
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
return TRUE;
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}ASSERT(FALSE);break;
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}return TRUE;}BOOL CStormController::H0x025e0012_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0012
;Jump(STATE_CURRENT,0x025e0013, FALSE, EInternal());return TRUE;
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/StormController.es"
}BOOL CStormController::H0x025e0014_Main_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x025e0014
 ASSERT(FALSE); return TRUE;};