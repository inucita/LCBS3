/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"

#include "StdH.h"
#include "EntitiesMP/WorldSettingsController.h"
//안태훈 수정 시작	//(Effect Add & Modify for Close Beta)(0.1)
#include <engine/Effect/CEffectGroup.h>
#include <engine/Effect/CEffectGroupManager.h>
#include <Engine/Effect/CSkaTag.h>
//안태훈 수정 끝	//(Effect Add & Modify for Close Beta)(0.1)

#include <EntitiesMP/ModelHolder3.h>
#include <EntitiesMP/ModelHolder3_tables.h>
CEntityEvent *EModel3Activate::MakeCopy(void) { CEntityEvent *peeCopy = new EModel3Activate(*this); return peeCopy;}
SLONG EModel3Activate::GetSizeOf(void) { return sizeof(*this);}
EModel3Activate::EModel3Activate() : CEntityEvent(EVENTCODE_EModel3Activate) {;
};
BOOL EModel3Activate::CheckIDs(void) { return TRUE ; }
CEntityEvent *EModel3Deactivate::MakeCopy(void) { CEntityEvent *peeCopy = new EModel3Deactivate(*this); return peeCopy;}
SLONG EModel3Deactivate::GetSizeOf(void) { return sizeof(*this);}
EModel3Deactivate::EModel3Deactivate() : CEntityEvent(EVENTCODE_EModel3Deactivate) {;
};
BOOL EModel3Deactivate::CheckIDs(void) { return TRUE ; }
#line 22 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"

// #define MIPRATIO 0.003125f //(2*tan(90/2))/640

void CModelHolder3::SetDefaultProperties(void) {
  m_fnModel = CTFILENAME("Data\\Models\\Editor\\Ska\\Axis.smc");
  m_fnTexture = CTFILENAME("Data\\Models\\Editor\\Vector.tex");
  m_fStretchAll = 1.0f;
  m_vStretchXYZ = FLOAT3D(1.0f , 1.0f , 1.0f);
  m_strName = "";
  m_strDescription = "";
  m_bColliding = FALSE ;
  m_strModelAnimation = "";
  m_stClusterShadows = ST_CLUSTER ;
  m_bBackground = FALSE ;
  m_bTargetable = FALSE ;
  m_cstCustomShading = CST_NONE ;
  m_aShadingDirection = ANGLE3D(AngleDeg  (45.0f) , AngleDeg  (45.0f) , AngleDeg  (45.0f));
  m_colLight = C_WHITE ;
  m_colAmbient = C_BLACK ;
  m_vShadingDirection = FLOAT3D(0 , 1 , 0);
  m_bActive = TRUE ;
  m_colModelColor = 0xFFFFFFFF;
  m_rMipFadeDistMetric = -1.0f;
  m_fMipFadeLenMetric = -1.0f;
  m_bRandomStretch = FALSE ;
  m_fStretchRndXYZ = FLOAT3D(0.2f , 0.2f , 0.2f);
  m_fStretchRndAll = 0.0f;
  m_fStretchRandom = FLOAT3D(1 , 1 , 1);
  m_penDestruction = NULL;
  m_vDamage = FLOAT3D(0 , 0 , 0);
  m_tmLastDamage = -1000.0f;
  m_penDestroyTarget = NULL;
  m_penLastDamager = NULL;
  m_tmSpraySpawned = 0.0f;
  m_fSprayDamage = 0.0f;
  m_penSpray = NULL;
  m_fMaxDamageAmmount = 0.0f;
  m_fClassificationStretch = 1.0f;
  m_colBurning = COLOR(C_WHITE  | CT_OPAQUE );
  m_dmtLastDamageType = DMT_CHAINSAW ;
  m_fChainSawCutDamage = 300.0f;
  m_fMaxTessellationLevel = 0.0f;
  m_bDoNotLoopAnimation = FALSE ;
  m_bRenderReflection = FALSE ;
  m_bTerrainShadow = FALSE ;
  m_strEffectGroupNameEvent = "";
  m_bDecorationObject = FALSE ;
  m_bHasRootTag = FALSE ;
  m_strEffectGroupName = "";
  CRationalEntity::SetDefaultProperties();
}
  
#line 120 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void CModelHolder3::Precache(void) {
#line 121 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
PrecacheSkaModel  (EDITOR_AXIS_MODEL );
#line 122 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
PrecacheClass  (CLASS_BLOOD_SPRAY  , 0);
#line 123 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(en_pmiModelInstance ){en_pmiModelInstance  -> m_tmSkaTagManager  . SetOwner  (this );}
#line 124 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(en_pmiModelInstance  -> mi_pmisSerial  
#line 125 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
&& en_pmiModelInstance  -> mi_pmisSerial  -> mis_pmiModelInstance  
#line 126 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
&& en_pmiModelInstance  -> mi_pmisSerial  -> mis_pmiModelInstance  -> m_fnmAnimEffectFile  != "")
#line 127 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
en_pmiModelInstance  -> ReadAnimEffectFile  (en_pmiModelInstance  -> mi_pmisSerial  -> mis_pmiModelInstance  -> m_fnmAnimEffectFile );
#line 130 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> RefreshTagManager  ();
#line 132 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bHasRootTag  && GetModelInstance  ())
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CSkaTag  tag ;
#line 135 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
tag  . SetName  ("__ROOT");
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 137 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
tag  . SetName  ("__TOP");
#line 138 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOATaabbox3D aabb ;
#line 139 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) , 0);
#line 141 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 142 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 143 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_strModelAnimation  != "")
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 145 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iAnim  = ska_GetIDFromStringTable  (m_strModelAnimation );
#line 146 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iDummy1  , iDummy2 ;
#line 147 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(GetModelInstance  () -> FindAnimationByID  (iAnim  , & iDummy1  , & iDummy2 )){
#line 148 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
NewClearState  (0.05f);
#line 149 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ULONG  ulFlags  = AN_LOOPING ;
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bDoNotLoopAnimation ){
#line 151 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ulFlags  = 0;
#line 152 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 153 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
AddAnimation  (iAnim  , ulFlags  , 1 , 1);
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
OffSetAnimationQueue  (FRnd  () * 10.0f);
#line 155 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CPrintF  ("WARNING! Animation '%s' not found in SKA entity '%s'!\n" , 
#line 157 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_strModelAnimation  , GetName  ());
#line 158 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(GetModelInstance  () && m_strEffectGroupName  != "")
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pModelEffectGroup ))
#line 163 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroup  -> Stop  (2);
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 166 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroup  = StartEffectGroup  (m_strEffectGroupName  
#line 167 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
, & GetModelInstance  () -> m_tmSkaTagManager  
#line 168 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
, _pTimer  -> GetLerpedCurrentTick  () + rand  () / RAND_MAX );
#line 169 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 170 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
else 
#line 171 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 172 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroup  = NULL ;
#line 173 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 174 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
BOOL CModelHolder3::FillEntityStatistics(EntityStats * pes) 
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pes  -> es_strName  = m_fnModel  . FileName  ();
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pes  -> es_ctCount  = 1;
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pes  -> es_ctAmmount  = 1;
#line 218 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestruction  != NULL ){
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pes  -> es_strName  += " (destroyable)";
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pes  -> es_fValue  = GetDestruction  () -> m_fHealth ;
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pes  -> es_fValue  = 0;
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE ;
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D CModelHolder3::GetClassificationBoxStretch(void) 
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return FLOAT3D (m_fClassificationStretch  , m_fClassificationStretch  , m_fClassificationStretch );
#line 233 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT CModelHolder3::GetMaxTessellationLevel(void) 
#line 238 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return m_fMaxTessellationLevel ;
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 244 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void CModelHolder3::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 247 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT fNewDamage  = fDamageAmmount ;
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestruction  == NULL ){
#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return ;
#line 253 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(dmtType  == DMT_BURNING )
#line 255 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
UBYTE  ubR  , ubG  , ubB  , ubA ;
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ColorToRGBA  (m_colBurning  , ubR  , ubG  , ubB  , ubA );
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ubR  = ClampDn  (ubR  - 4 , 32);
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_colBurning  = RGBAToColor  (ubR  , ubR  , ubR  , ubA );
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CModelDestruction  * penDestruction  = GetDestruction  ();
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fNewDamage  *= DamageStrength  (penDestruction  -> m_eibtBodyType  , dmtType );
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(fNewDamage  == 0){
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return ;
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT fKickDamage  = fNewDamage ;
#line 271 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if((dmtType  == DMT_EXPLOSION ) || (dmtType  == DMT_IMPACT ))
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fKickDamage  *= 1.5f;
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(dmtType  == DMT_CLOSERANGE ){
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fKickDamage  = 0.0f;
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(dmtType  == DMT_CHAINSAW ){
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fKickDamage  = 0.0f;
#line 280 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if((dmtType  == DMT_BULLET  || dmtType  == DMT_SNIPER  || dmtType  == DMT_SHOTGUN ) 
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
&& penDestruction  -> m_eibtBodyType  == EIBT_ROCK ){
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fKickDamage  = 0.0f;
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 285 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(dmtType  == DMT_BURNING )
#line 286 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fKickDamage  = 0.0f;
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
TIME  tmDelta  = tmNow  - m_tmLastDamage ;
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_tmLastDamage  = tmNow ;
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_penLastDamager  = penInflictor ;
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(tmDelta  >= _pTimer  -> TickQuantum  * 3){
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_vDamage  = FLOAT3D (0 , 0 , 0);
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vDirectionFixed ;
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(vDirection  . ManhattanNorm  () > 0.5f){
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
vDirectionFixed  = vDirection ;
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
vDirectionFixed  = FLOAT3D (0 , 1 , 0);
#line 308 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vDamageOld  = m_vDamage ;
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_vDamage  += vDirectionFixed  * fKickDamage ;
#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_vDamage  . Length  () > GetHealth  ()){
#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(! penDestruction  -> m_bRequireExplosion  || 
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
dmtType  == DMT_EXPLOSION )
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
EDeath  eDeath ;
#line 318 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SendEvent  (eDeath );
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_dmtLastDamageType  = dmtType ;
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_fMaxDamageAmmount  < fDamageAmmount ){
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fMaxDamageAmmount  = fDamageAmmount ;
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if((dmtType  != DMT_BURNING ) && (dmtType  != DMT_CHAINSAW ) && 
#line 330 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
(m_tmSpraySpawned  <= _pTimer  -> CurrentTick  () - _pTimer  -> TickQuantum  * 8 || 
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fSprayDamage  + fNewDamage  > 50.0f))
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 334 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CPlacement3D plSpray  = CPlacement3D (vHitPoint  , ANGLE3D (0 , 0 , 0));
#line 335 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY );
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_penSpray  -> SetParent  (this );
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ESpawnSpray  eSpawnSpray ;
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_fMaxDamageAmmount  > 10.0f){
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . fDamagePower  = 3.0f;
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else if(m_fSprayDamage  + fNewDamage  > 50.0f){
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . sptType  = penDestruction  -> m_sptType ;
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . fSizeMultiplier  = penDestruction  -> m_fParticleSize ;
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vDn  (- en_mRotation  (1 , 2) , - en_mRotation  (2 , 2) , - en_mRotation  (3 , 2));
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vHitPointRelative  = vHitPoint  - GetPlacement  () . pl_PositionVector ;
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vReflectingNormal ;
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetNormalComponent  (vHitPointRelative  , vDn  , vReflectingNormal );
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
vReflectingNormal  . Normalize  ();
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vProjectedComponent  = vReflectingNormal  * (vDirection  % vReflectingNormal );
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vSpilDirection  = vDirection  - vProjectedComponent  * 2.0f - vDn  * 0.5f;
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . vDirection  = vSpilDirection ;
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . eidOwner  = this ;
#line 365 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . colCentralColor  = penDestruction  -> m_colParticles ;
#line 366 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . colBurnColor  = m_colBurning ;
#line 367 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
eSpawnSpray  . fLaunchPower  = penDestruction  -> m_fParticleLaunchPower ;
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_penSpray  -> Initialize  (eSpawnSpray );
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_tmSpraySpawned  = _pTimer  -> CurrentTick  ();
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fSprayDamage  = 0.0f;
#line 372 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fMaxDamageAmmount  = 0.0f;
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(dmtType  == DMT_CHAINSAW  && m_fChainSawCutDamage  > 0)
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 377 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fChainSawCutDamage  -= fDamageAmmount ;
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_fChainSawCutDamage  <= 0)
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
EDeath  eDeath ;
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SendEvent  (eDeath );
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_dmtLastDamageType  = dmtType ;
#line 384 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fSprayDamage  += fNewDamage ;
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void * CModelHolder3::GetEntityInfo(void) {
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CModelDestruction  * pmd  = GetDestruction  ();
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(pmd  != NULL )
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return GetStdEntityInfo  (pmd  -> m_eibtBodyType );
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return CEntity  :: GetEntityInfo  ();
#line 398 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
class CModelDestruction * CModelHolder3::GetDestruction(void) 
#line 401 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ASSERT  (m_penDestruction  == NULL  || IsOfClass  (m_penDestruction  , & CModelDestruction_DLLClass ));
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return (CModelDestruction  *) & * m_penDestruction ;
#line 404 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 405 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
BOOL CModelHolder3::IsTargetable(void)const 
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 407 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return m_bTargetable ;
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void CModelHolder3::AdjustMipFactor(FLOAT & fMipFactor) 
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_rMipFadeDistMetric  > 0.5f){
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CModelInstance * pmi  = GetModelInstance  ();
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(pmi  == NULL ){
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return ;
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ENGINE_API  extern  FLOAT ska_fLODMul ;
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ENGINE_API  extern  FLOAT ska_fLODAdd ;
#line 427 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT fMipDistNow  = fMipFactor ;
#line 428 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT fMipFadeDist  = m_rMipFadeDistMetric  * ska_fLODMul  + ska_fLODAdd ;
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(fMipDistNow  > fMipFadeDist ){
#line 433 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fMipFactor  = UpperLimit  (0.0f);
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return ;
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT fFade  = (fMipFadeDist  - fMipDistNow );
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_fMipFadeLenMetric  > 0){
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fFade  /= m_fMipFadeLenMetric ;
#line 441 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 442 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(fFade  > 0){
#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fFade  = 1.0f;
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 445 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
fFade  = Clamp  (fFade  , 0.0f , 1.0f);
#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pmi  -> SetModelColor  ((pmi  -> GetModelColor  () & ~ 255) | UBYTE  (255 * fFade ));
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 451 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
BOOL CModelHolder3::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 456 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
switch(m_cstCustomShading )
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
case CST_FULL_CUSTOMIZED : 
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colLight  = m_colLight ;
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colAmbient  = m_colAmbient ;
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CWorldSettingsController  * pwsc  = GetWSC  (this );
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(pwsc  != NULL  && pwsc  -> m_bApplyShadingToModels ){
#line 466 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
COLOR colShade  = GetWorld  () -> wo_atbTextureBlendings  [ 9 ] . tb_colMultiply ;
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colLight  = MulColors  (colLight  , colShade );
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colAmbient  = MulColors  (colAmbient  , colShade );
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
vLightDirection  = m_vShadingDirection ;
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOn  (ENF_CUSTOMSHADING );
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
break ;
#line 473 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
case CST_CONSTANT_SHADING : 
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 477 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
UBYTE  lR  , lG  , lB  , aR  , aG  , aB  , rR  , rG  , rB ;
#line 478 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ColorToRGB  (colLight  , lR  , lG  , lB );
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ColorToRGB  (colAmbient  , aR  , aG  , aB );
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colLight  = 0;
#line 481 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
rR  = (UBYTE ) Clamp  ((ULONG ) lR  + aR  , (ULONG ) 0 , (ULONG ) 255);
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
rG  = (UBYTE ) Clamp  ((ULONG ) lG  + aG  , (ULONG ) 0 , (ULONG ) 255);
#line 483 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
rB  = (UBYTE ) Clamp  ((ULONG ) lB  + aB  , (ULONG ) 0 , (ULONG ) 255);
#line 484 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colAmbient  = RGBToColor  (rR  , rG  , rB );
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOff  (ENF_CUSTOMSHADING );
#line 486 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
break ;
#line 487 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 488 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
case CST_NONE : 
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOff  (ENF_CUSTOMSHADING );
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
break ;
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 495 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_colBurning  != COLOR (C_WHITE  | CT_OPAQUE )){
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colAmbient  = MulColors  (colAmbient  , m_colBurning );
#line 497 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
colLight  = MulColors  (colLight  , m_colBurning );
#line 498 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE ;
#line 499 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 501 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return m_stClusterShadows  != ST_NONE ;
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void CModelHolder3::MirrorAndStretch(FLOAT fStretch,BOOL bMirrorX) 
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchAll  *= fStretch ;
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(bMirrorX ){
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_vStretchXYZ  (1) = - m_vStretchXYZ  (1);
#line 511 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 512 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void CModelHolder3::StretchModel(void) {
#line 518 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(Abs  (m_vStretchXYZ  (1)) < 0.01f){m_vStretchXYZ  (1) = 0.01f;}
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(Abs  (m_vStretchXYZ  (2)) < 0.01f){m_vStretchXYZ  (2) = 0.01f;}
#line 520 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(Abs  (m_vStretchXYZ  (3)) < 0.01f){m_vStretchXYZ  (3) = 0.01f;}
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_fStretchAll  < 0.01f){m_fStretchAll  = 0.01f;}
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(Abs  (m_vStretchXYZ  (1)) > 1000.0f){m_vStretchXYZ  (1) = 1000.0f * Sgn  (m_vStretchXYZ  (1));}
#line 524 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(Abs  (m_vStretchXYZ  (2)) > 1000.0f){m_vStretchXYZ  (2) = 1000.0f * Sgn  (m_vStretchXYZ  (2));}
#line 525 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(Abs  (m_vStretchXYZ  (3)) > 1000.0f){m_vStretchXYZ  (3) = 1000.0f * Sgn  (m_vStretchXYZ  (3));}
#line 526 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_fStretchAll  > 1000.0f){m_fStretchAll  = 1000.0f;}
#line 528 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bRandomStretch ){
#line 529 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_bRandomStretch  = FALSE ;
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRndXYZ  = FLOAT3D (Clamp  (m_fStretchRndXYZ  (1) , 0.0f , 1.0f) , 
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Clamp  (m_fStretchRndXYZ  (2) , 0.0f , 1.0f) , 
#line 533 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Clamp  (m_fStretchRndXYZ  (3) , 0.0f , 1.0f));
#line 534 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRndAll  = Clamp  (m_fStretchRndAll  , 0.0f , 1.0f);
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRandom  (1) = (FRnd  () * m_fStretchRndXYZ  (1) * 2 - m_fStretchRndXYZ  (1)) + 1;
#line 537 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRandom  (2) = (FRnd  () * m_fStretchRndXYZ  (2) * 2 - m_fStretchRndXYZ  (2)) + 1;
#line 538 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRandom  (3) = (FRnd  () * m_fStretchRndXYZ  (3) * 2 - m_fStretchRndXYZ  (3)) + 1;
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT fRNDAll  = (FRnd  () * m_fStretchRndAll  * 2 - m_fStretchRndAll ) + 1;
#line 541 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRandom  (1) *= fRNDAll ;
#line 542 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRandom  (2) *= fRNDAll ;
#line 543 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fStretchRandom  (3) *= fRNDAll ;
#line 544 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 546 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOAT3D vStretch ;
#line 547 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
vStretch  (1) = m_vStretchXYZ  (1) * m_fStretchAll  * m_fStretchRandom  (1);
#line 548 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
vStretch  (2) = m_vStretchXYZ  (2) * m_fStretchAll  * m_fStretchRandom  (2);
#line 549 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
vStretch  (3) = m_vStretchXYZ  (3) * m_fStretchAll  * m_fStretchRandom  (3);
#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> StretchModel  (vStretch );
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ModelChangeNotify  ();
#line 554 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void CModelHolder3::InitModelHolder(void) {
#line 561 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_fnModel  == ""){
#line 562 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_fnModel  = CTFILENAME  ("Data\\Models\\Editor\\Ska\\Axis.smc");
#line 563 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 565 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bActive ){
#line 566 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
InitAsSkaModel  ();
#line 567 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 568 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
InitAsSkaEditorModel  ();
#line 569 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 571 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
BOOL bLoadOK  = TRUE ;
#line 573 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
try {
#line 574 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetSkaModel_t  (m_fnModel );
#line 576 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}catch  (char  *){
#line 577 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
bLoadOK  = FALSE ;
#line 580 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 581 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(! bLoadOK ){
#line 582 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetSkaModel  (CTFILENAME  ("Data\\Models\\Editor\\Ska\\Axis.smc"));
#line 583 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
WarningMessage  (TRANS  ("Cannot load ska model '%s'") , (CTString &) m_fnModel );
#line 584 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 587 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
StretchModel  ();
#line 588 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ModelChangeNotify  ();
#line 590 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bColliding  && m_bActive ){
#line 591 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetPhysicsFlags  (EPF_MODEL_FIXED );
#line 592 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetCollisionFlags  (ECF_MODEL_HOLDER );
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 594 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 595 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 596 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 598 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
switch(m_stClusterShadows ){
#line 599 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
case ST_NONE : 
#line 600 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 601 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () & ~ ENF_CLUSTERSHADOWS );
#line 603 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () & ~ ENF_PROJECTIONSHADOWS );
#line 606 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
break ;
#line 607 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 608 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
case ST_CLUSTER : 
#line 609 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 610 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () | ENF_CLUSTERSHADOWS );
#line 612 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () & ~ ENF_PROJECTIONSHADOWS );
#line 615 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
break ;
#line 616 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
case ST_POLYGONAL : 
#line 618 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 621 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () & ~ ENF_PROJECTIONSHADOWS );
#line 623 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () & ~ ENF_CLUSTERSHADOWS );
#line 624 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
break ;
#line 625 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 627 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
case ST_PROJECTION : 
#line 628 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 630 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> mi_bRenderShadow  = TRUE ;
#line 632 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () | ENF_PROJECTIONSHADOWS );
#line 633 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
break ;
#line 634 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 636 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 638 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bBackground ){
#line 639 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () | ENF_BACKGROUND );
#line 640 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 641 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlags  (GetFlags  () & ~ ENF_BACKGROUND );
#line 642 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 644 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestruction  == NULL ){
#line 645 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_strDescription  . PrintF  ("%s undestroyable" , (CTString &) m_fnModel  . FileName  ());
#line 646 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 647 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_strDescription  . PrintF  ("%s -> %s" , (CTString &) m_fnModel  . FileName  () , m_penDestruction  -> GetName  ());
#line 648 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 650 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_strDescription  . PrintF  ("%s" , (CTString &) m_fnModel  . FileName  ());
#line 652 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
AnglesToDirectionVector  (m_aShadingDirection  , m_vShadingDirection );
#line 653 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_vShadingDirection  = - m_vShadingDirection ;
#line 655 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return ;
#line 656 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
  
#line 658 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
void CModelHolder3::SetModelColor(const COLOR color) 
#line 659 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 660 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> SetModelColor  (color );
#line 661 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
BOOL CModelHolder3::
#line 665 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Die(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CModelHolder3_Die
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CModelHolder3::Die expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 668 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{FOREACHINLIST  (CEntity  , en_lnInParent  , en_lhChildren  , itenChild ){
#line 670 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
itenChild  -> SendEvent  (ERangeModelDestruction  () , TRUE );
#line 671 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}}
#line 674 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CModelDestruction  * pmd  = GetDestruction  ();
#line 675 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
pmd  -> SpawnDebris  (this );
#line 677 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CEntity  * penNext  = pmd  -> GetNextPhase  ();
#line 678 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(penNext  != NULL ){
#line 680 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CEntity  * penNew  = GetWorld  () -> CopyEntityInWorld  (* penNext  , GetPlacement  ());
#line 681 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(IsOfClass  (penNew  , & CModelHolder2_DLLClass )){
#line 682 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> GetModelObject  () -> StretchModel  (GetModelInstance  () -> mi_vStretch );
#line 683 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> ModelChangeNotify  ();
#line 684 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
((CModelHolder2  *) penNew ) -> m_colBurning  = m_colBurning ;
#line 685 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
((CModelHolder2  *) penNew ) -> m_fChainSawCutDamage  = m_fChainSawCutDamage ;
#line 687 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(pmd  -> m_iStartAnim  != - 1)
#line 688 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 689 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> GetModelObject  () -> PlayAnim  (pmd  -> m_iStartAnim  , 0);
#line 690 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 693 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CModelHolder2  & mhNew  = * ((CModelHolder2  *) penNew );
#line 694 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_cstCustomShading  = m_cstCustomShading ;
#line 695 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_colLight  = m_colLight ;
#line 696 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_colAmbient  = m_colAmbient ;
#line 697 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{mhNew  . m_fMipFadeDist  = MipFactor_MetricToLog  (m_rMipFadeDistMetric );
#line 698 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_fMipFadeLen  = MipFactor_MetricToLog  (m_fMipFadeLenMetric  + m_rMipFadeDistMetric ) 
#line 699 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
- mhNew  . m_fMipFadeDist ;
#line 701 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 703 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_dmtLastDamageType  == DMT_CHAINSAW )
#line 704 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 705 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
EDeath  eDeath ;
#line 706 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_fChainSawCutDamage  = 0.0f;
#line 707 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_dmtLastDamageType  = DMT_CHAINSAW ;
#line 708 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> SendEvent  (eDeath );
#line 709 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 710 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else if(IsOfClass  (penNew  , & CModelHolder3_DLLClass )){
#line 711 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> GetModelInstance  () -> StretchModel  (GetModelInstance  () -> mi_vStretch );
#line 712 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> ModelChangeNotify  ();
#line 714 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(pmd  -> m_strStartAnim  != "")
#line 715 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 716 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iAnim  = ska_GetIDFromStringTable  (pmd  -> m_strStartAnim );
#line 717 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iDummy1  , iDummy2 ;
#line 718 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(GetModelInstance  () -> FindAnimationByID  (iAnim  , & iDummy1  , & iDummy2 )){
#line 719 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> NewClearState  (0.05f);
#line 720 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> AddAnimation  (iAnim  , 0 , 1 , 1);
#line 721 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 722 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 725 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CModelHolder3  & mhNew  = * ((CModelHolder3  *) penNew );
#line 726 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_colBurning  = m_colBurning ;
#line 727 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_fChainSawCutDamage  = m_fChainSawCutDamage ;
#line 728 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_cstCustomShading  = m_cstCustomShading ;
#line 729 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_colLight  = m_colLight ;
#line 730 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_colAmbient  = m_colAmbient ;
#line 731 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_rMipFadeDistMetric  = m_rMipFadeDistMetric ;
#line 732 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_fMipFadeLenMetric  = m_fMipFadeLenMetric ;
#line 734 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_dmtLastDamageType  == DMT_CHAINSAW )
#line 735 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 736 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
EDeath  eDeath ;
#line 737 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_fChainSawCutDamage  = 0.0f;
#line 738 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
mhNew  . m_dmtLastDamageType  = DMT_CHAINSAW ;
#line 739 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
penNew  -> SendEvent  (eDeath );
#line 740 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 741 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 742 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 754 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestroyTarget  != NULL ){
#line 756 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SendToTarget  (m_penDestroyTarget  , EET_TRIGGER  , m_penLastDamager );
#line 757 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 760 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Destroy  (FALSE );
#line 761 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Return(STATE_CURRENT,EVoid());
#line 761 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CModelHolder3::
#line 763 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CModelHolder3_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CModelHolder3::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 774 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOn  (ENF_MARKDESTROY );
#line 775 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOn  (ENF_NONETCONNECT );
#line 776 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOff  (ENF_PROPSCHANGED );
#line 778 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOff  (ENF_RENDERREFLECTION );
#line 781 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFirstExtraFlagOff  (ENF_EX1_TERRAINSHADOW );
#line 785 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
InitModelHolder  ();
#line 788 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFirstExtraFlagOff  (ENF_EX1_DECORATION );
#line 789 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bDecorationObject ){SetFirstExtraFlagOn  (ENF_EX1_DECORATION );}
#line 793 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bRenderReflection )
#line 794 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 795 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOn  (ENF_RENDERREFLECTION );
#line 796 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 800 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bTerrainShadow )
#line 801 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 802 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFirstExtraFlagOn  (ENF_EX1_TERRAINSHADOW );
#line 803 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 807 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> SetModelColor  (m_colModelColor );
#line 811 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bHasRootTag  && GetModelInstance  ())
#line 812 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 813 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CSkaTag  tag ;
#line 814 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
tag  . SetName  ("__ROOT");
#line 815 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 816 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
tag  . SetName  ("__TOP");
#line 817 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
FLOATaabbox3D aabb ;
#line 818 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 819 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) , 0);
#line 820 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 821 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 825 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestruction  != NULL  && ! IsOfClass  (m_penDestruction  , & CModelDestruction_DLLClass )){
#line 826 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
WarningMessage  ("Destruction '%s' is wrong class!" , m_penDestruction  -> GetName  ());
#line 827 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_penDestruction  = NULL ;
#line 828 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 834 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_strModelAnimation  != "")
#line 835 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 836 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iAnim  = ska_GetIDFromStringTable  (m_strModelAnimation );
#line 837 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iDummy1  , iDummy2 ;
#line 838 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(GetModelInstance  () -> FindAnimationByID  (iAnim  , & iDummy1  , & iDummy2 )){
#line 839 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
NewClearState  (0.05f);
#line 840 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ULONG  ulFlags  = AN_LOOPING ;
#line 841 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bDoNotLoopAnimation ){
#line 842 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ulFlags  = 0;
#line 843 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 844 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
AddAnimation  (iAnim  , ulFlags  , 1 , 1);
#line 845 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
OffSetAnimationQueue  (FRnd  () * 10.0f);
#line 846 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 847 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CPrintF  ("WARNING! Animation '%s' not found in SKA entity '%s'!\n" , 
#line 848 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_strModelAnimation  , GetName  ());
#line 849 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 850 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 853 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_pModelEffectGroup )
#line 854 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 855 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
DestroyEffectGroup  (m_pModelEffectGroup );
#line 856 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 858 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(GetModelInstance  () && m_strEffectGroupName  != "")
#line 859 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 860 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pModelEffectGroup ))
#line 861 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 862 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroup  -> Stop  (0);
#line 863 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 864 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroup  = StartEffectGroup  (m_strEffectGroupName  
#line 865 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
, & GetModelInstance  () -> m_tmSkaTagManager  
#line 866 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
, _pTimer  -> GetLerpedCurrentTick  () + rand  () / RAND_MAX );
#line 867 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 868 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
else 
#line 869 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 870 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroup  = NULL ;
#line 871 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 874 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00f20003, FALSE, EBegin());return TRUE;}BOOL CModelHolder3::H0x00f20003_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f20003
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 878 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestruction  != NULL ){
#line 879 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetHealth  (GetDestruction  () -> m_fHealth );
#line 880 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 881 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 882 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):
#line 885 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{const EStart&e= (EStart&)__eeInput;

#line 886 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_strEffectGroupNameEvent  != "" && en_pmiModelInstance  != NULL )
#line 887 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 888 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
DestroyEffectGroup  (m_pModelEffectGroupEvent );
#line 889 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroupEvent  = StartEffectGroup  (m_strEffectGroupNameEvent  , & en_pmiModelInstance  -> m_tmSkaTagManager  , _pTimer  -> GetLerpedCurrentTick  ());
#line 890 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 891 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 892 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):
#line 894 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{const EStop&e= (EStop&)__eeInput;

#line 895 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_strEffectGroupNameEvent  != "" && en_pmiModelInstance  != NULL )
#line 896 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 897 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pModelEffectGroupEvent ))
#line 898 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 899 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroupEvent  -> Stop  (0);
#line 900 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_pModelEffectGroupEvent  = NULL ;
#line 901 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 902 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 903 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 904 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EActivate):{const EActivate&e= (EActivate&)__eeInput;

#line 908 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(_pNetwork  -> IsServer  ()){
#line 909 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SendEvent  (EModel3Activate  () , TRUE );
#line 910 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 911 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 912 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EModel3Activate):{const EModel3Activate&e= (EModel3Activate&)__eeInput;

#line 914 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 915 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SwitchToModel  ();
#line 916 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_bActive  = TRUE ;
#line 917 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_bColliding ){
#line 918 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetPhysicsFlags  (EPF_MODEL_FIXED );
#line 919 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetCollisionFlags  (ECF_MODEL_HOLDER );
#line 920 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 921 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 922 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 924 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(_pNetwork  -> IsServer  ()){
#line 925 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SendEvent  (EModel3Deactivate  () , TRUE );
#line 926 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 927 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 928 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EModel3Deactivate):{const EModel3Deactivate&e= (EModel3Deactivate&)__eeInput;

#line 930 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 931 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SwitchToEditorModel  ();
#line 932 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 933 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 934 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_bActive  = FALSE ;
#line 935 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 936 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_ERangeModelDestruction):{const ERangeModelDestruction&e= (ERangeModelDestruction&)__eeInput;

#line 940 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{FOREACHINLIST  (CEntity  , en_lnInParent  , en_lhChildren  , itenChild ){
#line 942 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
itenChild  -> SendEvent  (ERangeModelDestruction  () , TRUE );
#line 943 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}}
#line 945 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Destroy  (FALSE );
#line 946 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 947 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;

#line 950 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SendEvent  (EModelDeath  () , TRUE );
#line 951 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(_pNetwork  -> IsServer  ()){
#line 952 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestruction  != NULL ){
#line 953 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Jump(STATE_CURRENT, STATE_CModelHolder3_Die, TRUE, EVoid());return TRUE;
#line 954 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 955 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 956 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 957 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EModelDeath):{const EModelDeath&e= (EModelDeath&)__eeInput;

#line 959 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
SendEvent  (EModelDeath  () , TRUE );
#line 960 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(! _pNetwork  -> IsServer  ()){
#line 961 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_penDestruction  != NULL ){
#line 962 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
Jump(STATE_CURRENT, STATE_CModelHolder3_Die, TRUE, EVoid());return TRUE;
#line 963 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 964 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 965 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 966 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;case(EVENTCODE_EChangeAnim):{const EChangeAnim&eChange= (EChangeAnim&)__eeInput;

#line 969 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_strModelAnimation  = eChange  . strAnimation ;
#line 970 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(m_strModelAnimation  != "")
#line 971 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
{
#line 972 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iAnim  = ska_GetIDFromStringTable  (m_strModelAnimation );
#line 973 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
INDEX iDummy1  , iDummy2 ;
#line 974 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(GetModelInstance  () -> FindAnimationByID  (iAnim  , & iDummy1  , & iDummy2 )){
#line 975 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
NewClearState  (eChange  . fBlendTime );
#line 976 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ULONG  ulFlags  = 0;
#line 977 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
if(eChange  . bModelLoop ){
#line 978 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
ulFlags  = AN_LOOPING ;
#line 979 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 980 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
AddAnimation  (iAnim  , ulFlags  , 1 , 1);
#line 981 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}else {
#line 982 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
CPrintF  ("WARNING! Animation '%s' not found in SKA entity '%s'!\n" , 
#line 983 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
m_strModelAnimation  , GetName  ());
#line 984 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 985 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}
#line 986 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 987 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;default:{
#line 989 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
return TRUE;
#line 990 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}ASSERT(FALSE);break;
#line 991 "E:/질산/Korea/Client_USA/EntitiesMP/ModelHolder3.es"
}return TRUE;}BOOL CModelHolder3::H0x00f20004_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00f20004
; ASSERT(FALSE); return TRUE;};