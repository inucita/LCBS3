/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"

#include "StdH.h"

#include <Unit.h>
#include <Unit_tables.h>
void CUnit::SetDefaultProperties(void) {
	m_ttTarget = TT_NONE ;
	m_strName = "Unit";
	m_fMaxHealth = -1.0f;
	m_nMaxiHealth = 0;
	m_nCurrentHealth = 0;
	m_nMobLevel = 0;
	m_nPreHealth = -1;
	m_nMobDBIndex = -1;
	m_fActivityRange = 0.0f;
	m_fAttackRadius = 10000.0f;
	m_dtDestination = DT_PLAYERCURRENT ;
	m_fWalkSpeed = 1.0f;
	m_aWalkRotateSpeed = AngleDeg(10.0f);
	m_fAttackRunSpeed = 1.0f;
	m_aAttackRotateSpeed = AngleDeg(10.0f);
	m_fCloseRunSpeed = 1.0f;
	m_aCloseRotateSpeed = AngleDeg(10.0f);
	m_fAttackDistance = 3.0f;
	m_fCloseDistance = 0.0f;
	m_fAttackFireTime = 2.0f;
	m_fCloseFireTime = 2.0f;
	m_fStopDistance = 0.5f;
	m_fIgnoreRange = 50.0f;
	m_fMoveTime = 0.0f;
	m_fMoveSpeed = 0.0f;
	m_aRotateSpeed = 0.0f;
	m_fMoveFrequency = 0.0f;
	m_fSenseRange = 0.0f;
	m_fViewAngle = 360.0f;
	m_fFallHeight = 8.0f;
	m_fStepHeight = -1.0f;
	m_fShootTime = 0.0f;
	m_fDamageConfused = 0.0f;
	m_fBlowUpAmount = 0.0f;
	m_fBodyParts = 4;
	m_fDamageWounded = 0.0f;
	m_nPlayActionNum = -1;
	m_vDesiredPosition = FLOAT3D(0 , 0 , 0);
	m_bSkilling = FALSE ;
	m_nCurrentSkillNum = -1;
	m_fSkillSpeed = 1.0f;
	m_fAttackLengthMul = 1.0f;
	m_fAttackSpeedMul = 1.0f;
	m_idCurrentSkillAnim = -1;
	m_bAttack = FALSE ;
	m_bWasKilled = FALSE ;
	m_bUseAI = FALSE ;
	m_bAIStart = FALSE ;
	m_tmSkillStartTime = 0.0f;
	m_tmSkillAnimTime = 0.0f;
	m_fSkillAnimTime = 0.0f;
	m_bKillEnemy = FALSE ;
	m_vMyPositionTmp = FLOAT3D(0.0f , 0.0f , 0.0f);
	m_enAttackerID = 0;
	m_bStuned = FALSE ;
	m_bHold = FALSE ;
	m_bCannotUseSkill = FALSE ;
	CMovableModelEntity::SetDefaultProperties();
}
void CUnit::OnInitialize(const CEntityEvent & eeInput) 
#line 131 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 132 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
CMovableModelEntity  :: OnInitialize  (eeInput );
#line 133 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
void CUnit::OnEnd(void) 
#line 136 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 137 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
m_dcEnemies  . Clear  ();
#line 138 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
CMovableModelEntity  :: OnEnd  ();
#line 139 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
void CUnit::DeathNow() {}
void CUnit::SkillNow() {}
void CUnit::PreSkillNow() {}
void CUnit::AttackNow() {}
void CUnit::ActionNow() {}
void CUnit::SetAttackSpeed(SBYTE attackspeed) {}
void CUnit::StopNow() {}
BOOL CUnit::SetTargetEntity(CEntity * penPlayer) {return TRUE ;}
BOOL CUnit::SetKillTargetEntity(CEntity * penKill) {return FALSE ;}
BOOL CUnit::SetEnemyEntity(CEntity * penEnemy,int type) {return TRUE ;}
void CUnit::SetNoTargetEntity(void) {}
void CUnit::StopandTeleport() {}
void CUnit::MoveNow() {}
void CUnit::SendActEvent(void) {}
BOOL CUnit::CheckTarget(CEntity * penTarget) {return FALSE ;}
BOOL CUnit::UseSkill(int iSkillIndex) {return FALSE ;}
BOOL CUnit::IsMovable() {return TRUE ;}
BOOL CUnit::IsAvailableRide() {return FALSE ;}
void CUnit::StopMove() 
#line 163 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 164 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(_pNetwork  -> m_bSingleMode )
#line 165 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 166 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
_pNetwork  -> SendStopMessage  (this  , GetPlacement  ());
#line 167 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 168 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
m_vDesiredPosition  = GetPlacement  () . pl_PositionVector ;
#line 169 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
m_vMyPositionTmp  = GetPlacement  () . pl_PositionVector ;
#line 170 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
StopRotating  ();
#line 171 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
StopTranslating  ();
#line 172 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
FLOAT & CUnit::GetProp(FLOAT & m_fBase) 
#line 181 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 182 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return m_fBase ;
#line 183 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
FLOAT CUnit::GetThreatDistance(void) 
#line 187 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 189 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return Max  (GetProp  (m_fCloseDistance ) , GetProp  (m_fStopDistance ));
#line 190 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 193 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D CUnit::CalcDelta(CEntity * penEntity) 
#line 194 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 195 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 197 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return penEntity  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector ;
#line 198 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 201 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CUnit::CalcDist(CEntity * penEntity) 
#line 202 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 203 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return CalcDelta  (penEntity ) . Length  ();
#line 204 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 207 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D CUnit::CalcPlaneDelta(CEntity * penEntity) 
#line 208 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 209 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 210 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vPlaneDelta ;
#line 212 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetNormalComponent  (
#line 213 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
penEntity  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector  , 
#line 214 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
en_vGravityDir  , vPlaneDelta );
#line 215 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return vPlaneDelta ;
#line 216 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 219 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CUnit::CalcPlaneDist(CEntity * penEntity) 
#line 220 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 221 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return CalcPlaneDelta  (penEntity ) . Length  ();
#line 222 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 225 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CUnit::GetFrustumAngle(const FLOAT3D & vDir) 
#line 226 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 228 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 230 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return (vDir  / vDir  . Length  ()) % vFront ;
#line 231 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 234 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CUnit::GetPlaneFrustumAngle(const FLOAT3D & vDir) 
#line 235 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 236 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vPlaneDelta ;
#line 238 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetNormalComponent  (vDir  , en_vGravityDir  , vPlaneDelta );
#line 240 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 241 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vPlaneFront ;
#line 242 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetNormalComponent  (vFront  , en_vGravityDir  , vPlaneFront );
#line 244 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vPlaneDelta  . SafeNormalize  ();
#line 245 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vPlaneFront  . SafeNormalize  ();
#line 246 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return vPlaneDelta  % vPlaneFront ;
#line 247 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 250 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL CUnit::IsInFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum) 
#line 251 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 253 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDelta  = CalcDelta  (penEntity );
#line 255 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 257 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT fDotProduct  = (vDelta  / vDelta  . Length  ()) % vFront ;
#line 258 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return fDotProduct  >= fCosHalfFrustum ;
#line 259 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 262 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL CUnit::IsInPlaneFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum) 
#line 263 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 265 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vPlaneDelta  = CalcPlaneDelta  (penEntity );
#line 267 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 268 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vPlaneFront ;
#line 269 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetNormalComponent  (vFront  , en_vGravityDir  , vPlaneFront );
#line 271 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vPlaneDelta  . SafeNormalize  ();
#line 272 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vPlaneFront  . SafeNormalize  ();
#line 273 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT fDot  = vPlaneDelta  % vPlaneFront ;
#line 274 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return fDot  >= fCosHalfFrustum ;
#line 275 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 278 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL CUnit::IsVisible(CEntity * penEntity) 
#line 279 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 280 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 282 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vSource  , vTarget ;
#line 283 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetPositionCastRay  (this  , penEntity  , vSource  , vTarget );
#line 286 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 287 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_NONE ;
#line 288 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
crRay  . cr_bHitTranslucentPortals  = FALSE ;
#line 289 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
en_pwoWorld  -> CastRay  (crRay );
#line 292 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return (crRay  . cr_penHit  == NULL );
#line 293 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 296 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL CUnit::IsVisibleCheckAll(CEntity * penEntity) 
#line 297 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 298 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 300 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vSource  , vTarget ;
#line 301 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetPositionCastRay  (this  , penEntity  , vSource  , vTarget );
#line 304 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 305 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_COLLISIONBOX ;
#line 306 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
crRay  . cr_bHitTranslucentPortals  = FALSE ;
#line 307 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
en_pwoWorld  -> CastRay  (crRay );
#line 310 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return crRay  . cr_penHit  == penEntity ;
#line 311 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 314 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CUnit::CalcDistanceInPlaneToDestination(void) 
#line 315 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 317 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vNormal ;
#line 318 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetNormalComponent  (m_vDesiredPosition  - GetPlacement  () . pl_PositionVector  , en_vGravityDir  , vNormal );
#line 319 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return vNormal  . Length  ();
#line 320 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
ULONG CUnit::SetDesiredMovementEx(void) 
#line 331 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 332 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ULONG  ulFlags  = 0;
#line 335 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 336 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDelta  (2) = 0.0f;
#line 339 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(m_aRotateSpeed  > 0.0f)
#line 340 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 342 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDir  = vDelta ;
#line 343 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDir  . SafeNormalize  ();
#line 344 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ANGLE aWantedHeadingRelative  = GetRelativeHeading  (vDir );
#line 347 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aWantedHeadingRelative  = NormalizeAngle  (aWantedHeadingRelative );
#line 349 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ANGLE aHeadingRotation ;
#line 351 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(aWantedHeadingRelative  < - m_aRotateSpeed  * m_fMoveFrequency )
#line 352 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 354 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aHeadingRotation  = - m_aRotateSpeed ;
#line 356 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 357 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else if(aWantedHeadingRelative  > m_aRotateSpeed  * m_fMoveFrequency )
#line 358 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 360 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aHeadingRotation  = + m_aRotateSpeed ;
#line 362 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 363 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else 
#line 364 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 366 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aHeadingRotation  = aWantedHeadingRelative  / m_fMoveFrequency ;
#line 367 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 369 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (aHeadingRotation  , 0 , 0));
#line 371 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(Abs  (aHeadingRotation ) > 1.0f)
#line 372 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 373 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ulFlags  |= MF_ROTATEH ;
#line 374 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 377 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 378 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else 
#line 379 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 381 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 382 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 386 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(m_fMoveSpeed  > 0.0f)
#line 387 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 389 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 390 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDelta  (2) = 0.0f;
#line 392 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT length  = vDelta  . Length  ();
#line 393 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT deltaX  = m_vDesiredPosition  (1) - GetPlacement  () . pl_PositionVector  (1);
#line 394 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT deltaZ  = m_vDesiredPosition  (3) - GetPlacement  () . pl_PositionVector  (3);
#line 396 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT num  = length  / m_fMoveSpeed ;
#line 399 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(num  < 1.0f)
#line 400 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 402 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDelta  = GetPlacement  () . pl_PositionVector  - m_vMyPositionTmp ;
#line 403 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDelta  (2) = 0.0f;
#line 405 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(vDelta  . Length  () < 0.5f)
#line 406 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 408 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT flength  = Sqrt  (deltaX  * deltaX  + deltaZ  * deltaZ );
#line 410 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(flength  < 0.5f)
#line 411 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 412 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(! _pNetwork  -> m_bSingleMode ){
#line 413 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
StopMove  ();
#line 414 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 415 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return 0;
#line 416 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 417 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 419 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
CPlacement3D plPlacement ;
#line 420 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (GetPlacement  () . pl_OrientationAngle  (1) , 0 , 0);
#line 421 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
plPlacement  . pl_PositionVector  = m_vDesiredPosition ;
#line 424 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(! _pNetwork  -> m_bSingleMode )
#line 425 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 426 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
_pNetwork  -> SendMoveMessage  (this  , plPlacement  , m_fMoveSpeed );
#line 427 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 428 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
m_vMyPositionTmp  = GetPlacement  () . pl_PositionVector ;
#line 430 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return SetDesiredMovement  ();
#line 431 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 435 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
deltaX  = deltaX  / num ;
#line 436 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
deltaZ  = deltaZ  / num ;
#line 438 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vRayHit ;
#line 439 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
CPlacement3D plPlacement ;
#line 440 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (0 , 0 , 0);
#line 441 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
plPlacement  . pl_PositionVector  = FLOAT3D (GetPlacement  () . pl_PositionVector  (1) + deltaX  , 300.0f , GetPlacement  () . pl_PositionVector  (3) + deltaZ );
#line 443 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT fMaxY  = - 9999999.0f;
#line 444 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL bFloorHitted  = FALSE ;
#line 446 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vSource  = plPlacement  . pl_PositionVector ;
#line 447 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vTarget  = vSource ;
#line 448 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vTarget  (2) -= 1000.0f;
#line 449 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 450 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_NONE ;
#line 451 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
crRay  . cr_bHitTranslucentPortals  = TRUE ;
#line 452 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
crRay  . cr_bPhysical  = TRUE ;
#line 453 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
GetWorld  () -> CastRay  (crRay );
#line 454 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if((crRay  . cr_penHit  != NULL ) && (crRay  . cr_vHit  (2) > fMaxY ))
#line 455 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 456 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
fMaxY  = crRay  . cr_vHit  (2);
#line 457 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
bFloorHitted  = TRUE ;
#line 458 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 460 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(bFloorHitted )
#line 461 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 462 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
plPlacement  . pl_PositionVector  (2) += fMaxY  - plPlacement  . pl_PositionVector  (2) + 0.01f;
#line 463 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 465 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
plPlacement  . pl_OrientationAngle  (1) = GetPlacement  () . pl_OrientationAngle  (1);
#line 468 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(! _pNetwork  -> m_bSingleMode )
#line 469 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 470 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
_pNetwork  -> SendMoveMessage  (this  , plPlacement  , m_fMoveSpeed );
#line 471 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 472 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
m_vMyPositionTmp  = GetPlacement  () . pl_PositionVector ;
#line 474 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return SetDesiredMovement  ();
#line 476 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 477 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else 
#line 478 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 480 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , 0));
#line 481 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 482 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return ulFlags ;
#line 483 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
ULONG CUnit::SetDesiredMovement(void) 
#line 490 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 491 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ULONG  ulFlags  = 0;
#line 542 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ulFlags  = SetDesiredRotate  ();
#line 545 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(m_fMoveSpeed  > 0.0f)
#line 546 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 547 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDeltaPlane  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 548 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDeltaPlane  (2) = 0.0f;
#line 550 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT fLength  = vDeltaPlane  . Length  ();
#line 565 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDeltaPlane  . Normalize  ();
#line 567 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(fLength  < m_fMoveSpeed  * m_fMoveFrequency )
#line 568 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 570 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
m_fMoveSpeed  = fLength  / m_fMoveFrequency ;
#line 571 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 573 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vSpeed  = vDeltaPlane  * m_fMoveSpeed ;
#line 574 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT fTestLength  = vSpeed  . Length  ();
#line 575 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredTranslation  (vSpeed );
#line 576 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ulFlags  |= MF_MOVEZ ;
#line 577 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return ulFlags ;
#line 578 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 579 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else 
#line 580 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 582 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , 0));
#line 583 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 584 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return ulFlags ;
#line 585 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
ULONG CUnit::SetDesiredRotate(void) 
#line 588 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 589 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ULONG  ulFlags  = 0;
#line 592 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 593 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDelta  (2) = 0.0f;
#line 596 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(m_aRotateSpeed  > 0.0f)
#line 597 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 599 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D vDir  = vDelta ;
#line 600 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
vDir  . SafeNormalize  ();
#line 601 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ANGLE aWantedHeadingRelative  = GetRelativeHeading  (vDir );
#line 604 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aWantedHeadingRelative  = NormalizeAngle  (aWantedHeadingRelative );
#line 606 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ANGLE aHeadingRotation ;
#line 608 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(aWantedHeadingRelative  < - m_aRotateSpeed  * m_fMoveFrequency )
#line 609 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 611 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aHeadingRotation  = - m_aRotateSpeed ;
#line 613 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 614 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else if(aWantedHeadingRelative  > m_aRotateSpeed  * m_fMoveFrequency )
#line 615 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 617 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aHeadingRotation  = + m_aRotateSpeed ;
#line 619 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 620 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else 
#line 621 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 623 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
aHeadingRotation  = aWantedHeadingRelative  / m_fMoveFrequency ;
#line 624 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 626 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (aHeadingRotation  , 0 , 0));
#line 628 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
if(Abs  (aHeadingRotation ) > 1.0f)
#line 629 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 630 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
ulFlags  |= MF_ROTATEH ;
#line 631 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 634 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 635 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
else 
#line 636 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 638 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 639 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
#line 640 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return ulFlags ;
#line 641 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 649 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
void CUnit::StopMoving() 
#line 650 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 651 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
StopRotating  ();
#line 652 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
StopTranslating  ();
#line 653 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 656 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
void CUnit::StopRotating() 
#line 657 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 658 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 659 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}

#line 662 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
void CUnit::StopTranslating() 
#line 663 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 664 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
SetDesiredTranslation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 665 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
void CUnit::StandingAnim(void) {}
void CUnit::WalkingAnim(void) {}
void CUnit::RunningAnim(void) {}
void CUnit::RotatingAnim(void) {}
void CUnit::AttackAnim(void) {}
void CUnit::HungryAnim(void) {}
void CUnit::ActEventAnim(void) {}

#line 685 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL CUnit::IsValidForEnemy(CEntity * penPlayer) 
#line 686 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
{
#line 687 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
return 
#line 688 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
penPlayer  != NULL  && 
#line 691 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
penPlayer  -> GetFlags  () & ENF_ALIVE ;
#line 692 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
}
BOOL CUnit::
#line 695 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CUnit_Main
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CUnit::Main expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 697 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
InitAsVoid  (); ASSERT(FALSE); return TRUE;};