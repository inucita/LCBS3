/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"

#include "StdH.h"

#include <EntitiesMP/Unit.h>
#include <EntitiesMP/Unit_tables.h>
void CUnit::SetDefaultProperties(void) {
  m_ttTarget = TT_NONE ;
  m_strName = "Unit";
  m_fMaxHealth = -1.0f;
  m_nMaxiHealth = 0;
  m_nCurrentHealth = 0;
  m_nMobLevel = 0;
  m_nPreHealth = -1;
  m_nMobDBIndex = -1;
  m_fActivityRange = 0.0f;
  m_fAttackRadius = 10000.0f;
  m_dtDestination = DT_PLAYERCURRENT ;
  m_fWalkSpeed = 1.0f;
  m_aWalkRotateSpeed = AngleDeg(10.0f);
  m_fAttackRunSpeed = 1.0f;
  m_aAttackRotateSpeed = AngleDeg(10.0f);
  m_fCloseRunSpeed = 1.0f;
  m_aCloseRotateSpeed = AngleDeg(10.0f);
  m_fAttackDistance = 3.0f;
  m_fCloseDistance = 0.0f;
  m_fAttackFireTime = 2.0f;
  m_fCloseFireTime = 2.0f;
  m_fStopDistance = 0.5f;
  m_fIgnoreRange = 50.0f;
  m_fMoveTime = 0.0f;
  m_fMoveSpeed = 0.0f;
  m_aRotateSpeed = 0.0f;
  m_fMoveFrequency = 0.0f;
  m_fSenseRange = 0.0f;
  m_fViewAngle = 360.0f;
  m_fFallHeight = 8.0f;
  m_fStepHeight = -1.0f;
  m_fShootTime = 0.0f;
  m_fDamageConfused = 0.0f;
  m_fBlowUpAmount = 0.0f;
  m_fBodyParts = 4;
  m_fDamageWounded = 0.0f;
  m_nPlayActionNum = -1;
  m_vDesiredPosition = FLOAT3D(0 , 0 , 0);
  m_bSkilling = FALSE ;
  m_nCurrentSkillNum = -1;
  m_fSkillSpeed = 1.0f;
  m_fAttackLengthMul = 1.0f;
  m_fAttackSpeedMul = 1.0f;
  m_idCurrentSkillAnim = -1;
  m_bAttack = FALSE ;
  m_bWasKilled = FALSE ;
  m_bUseAI = FALSE ;
  m_bAIStart = FALSE ;
  m_tmSkillStartTime = 0.0f;
  m_tmSkillAnimTime = 0.0f;
  m_fSkillAnimTime = 0.0f;
  m_bKillEnemy = FALSE ;
  m_vMyPositionTmp = FLOAT3D(0.0f , 0.0f , 0.0f);
  m_bStuned = FALSE ;
  m_bHold = FALSE ;
  m_bCannotUseSkill = FALSE ;
  CMovableModelEntity::SetDefaultProperties();
}
  void CUnit::OnInitialize(const CEntityEvent & eeInput) 
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 129 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
CMovableModelEntity  :: OnInitialize  (eeInput );
#line 130 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  void CUnit::OnEnd(void) 
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
m_dcEnemies  . Clear  ();
#line 135 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
CMovableModelEntity  :: OnEnd  ();
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  void CUnit::DeathNow() {}
  void CUnit::SkillNow() {}
  void CUnit::PreSkillNow() {}
  void CUnit::AttackNow() {}
  void CUnit::ActionNow() {}
  void CUnit::SetAttackSpeed(SBYTE attackspeed) {}
  void CUnit::StopNow() {}
  BOOL CUnit::SetTargetEntity(CEntity * penPlayer) {return TRUE ;}
  BOOL CUnit::SetKillTargetEntity(CEntity * penKill) {return FALSE ;}
  BOOL CUnit::SetEnemyEntity(CEntity * penEnemy,int type) {return TRUE ;}
  void CUnit::SetNoTargetEntity(void) {}
  void CUnit::StopandTeleport() {}
  void CUnit::MoveNow() {}
  BOOL CUnit::CheckTarget(CEntity * penTarget) {return FALSE ;}
  BOOL CUnit::UseSkill(int iSkillIndex) {return FALSE ;}
  BOOL CUnit::IsMovable() {return TRUE ;}
  void CUnit::StopMove() 
#line 158 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(_pNetwork  -> m_bSingleMode )
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
_pNetwork  -> SendStopMessage  (this  , GetPlacement  ());
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 163 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
m_vDesiredPosition  = GetPlacement  () . pl_PositionVector ;
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
m_vMyPositionTmp  = GetPlacement  () . pl_PositionVector ;
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
StopRotating  ();
#line 166 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
StopTranslating  ();
#line 167 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  FLOAT & CUnit::GetProp(FLOAT & m_fBase) 
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return m_fBase ;
#line 178 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  FLOAT CUnit::GetThreatDistance(void) 
#line 182 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 184 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return Max  (GetProp  (m_fCloseDistance ) , GetProp  (m_fStopDistance ));
#line 185 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 188 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D CUnit::CalcDelta(CEntity * penEntity) 
#line 189 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 190 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 192 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return penEntity  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector ;
#line 193 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 196 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT CUnit::CalcDist(CEntity * penEntity) 
#line 197 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return CalcDelta  (penEntity ) . Length  ();
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 202 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D CUnit::CalcPlaneDelta(CEntity * penEntity) 
#line 203 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vPlaneDelta ;
#line 207 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetNormalComponent  (
#line 208 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
penEntity  -> GetPlacement  () . pl_PositionVector  - GetPlacement  () . pl_PositionVector  , 
#line 209 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
en_vGravityDir  , vPlaneDelta );
#line 210 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return vPlaneDelta ;
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT CUnit::CalcPlaneDist(CEntity * penEntity) 
#line 215 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return CalcPlaneDelta  (penEntity ) . Length  ();
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT CUnit::GetFrustumAngle(const FLOAT3D & vDir) 
#line 221 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return (vDir  / vDir  . Length  ()) % vFront ;
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT CUnit::GetPlaneFrustumAngle(const FLOAT3D & vDir) 
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vPlaneDelta ;
#line 233 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetNormalComponent  (vDir  , en_vGravityDir  , vPlaneDelta );
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vPlaneFront ;
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetNormalComponent  (vFront  , en_vGravityDir  , vPlaneFront );
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vPlaneDelta  . SafeNormalize  ();
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vPlaneFront  . SafeNormalize  ();
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return vPlaneDelta  % vPlaneFront ;
#line 242 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
BOOL CUnit::IsInFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum) 
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 248 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDelta  = CalcDelta  (penEntity );
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT fDotProduct  = (vDelta  / vDelta  . Length  ()) % vFront ;
#line 253 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return fDotProduct  >= fCosHalfFrustum ;
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
BOOL CUnit::IsInPlaneFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum) 
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vPlaneDelta  = CalcPlaneDelta  (penEntity );
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vFront  = - GetRotationMatrix  () . GetColumn  (3);
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vPlaneFront ;
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetNormalComponent  (vFront  , en_vGravityDir  , vPlaneFront );
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vPlaneDelta  . SafeNormalize  ();
#line 267 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vPlaneFront  . SafeNormalize  ();
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT fDot  = vPlaneDelta  % vPlaneFront ;
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return fDot  >= fCosHalfFrustum ;
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
BOOL CUnit::IsVisible(CEntity * penEntity) 
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vSource  , vTarget ;
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetPositionCastRay  (this  , penEntity  , vSource  , vTarget );
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_NONE ;
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
crRay  . cr_bHitTranslucentPortals  = FALSE ;
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
en_pwoWorld  -> CastRay  (crRay );
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return (crRay  . cr_penHit  == NULL );
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
BOOL CUnit::IsVisibleCheckAll(CEntity * penEntity) 
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ASSERT  (penEntity  != NULL );
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vSource  , vTarget ;
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetPositionCastRay  (this  , penEntity  , vSource  , vTarget );
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_COLLISIONBOX ;
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
crRay  . cr_bHitTranslucentPortals  = FALSE ;
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
en_pwoWorld  -> CastRay  (crRay );
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return crRay  . cr_penHit  == penEntity ;
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT CUnit::CalcDistanceInPlaneToDestination(void) 
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vNormal ;
#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetNormalComponent  (m_vDesiredPosition  - GetPlacement  () . pl_PositionVector  , en_vGravityDir  , vNormal );
#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return vNormal  . Length  ();
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  ULONG CUnit::SetDesiredMovementEx(void) 
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ULONG  ulFlags  = 0;
#line 330 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(m_aRotateSpeed  > 0.0f)
#line 334 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDir  = vDelta ;
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vDir  . SafeNormalize  ();
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ANGLE aWantedHeadingRelative  = GetRelativeHeading  (vDir );
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aWantedHeadingRelative  = NormalizeAngle  (aWantedHeadingRelative );
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ANGLE aHeadingRotation ;
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(aWantedHeadingRelative  < - m_aRotateSpeed  * m_fMoveFrequency )
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = - m_aRotateSpeed ;
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else if(aWantedHeadingRelative  > m_aRotateSpeed  * m_fMoveFrequency )
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = + m_aRotateSpeed ;
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = aWantedHeadingRelative  / m_fMoveFrequency ;
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (aHeadingRotation  , 0 , 0));
#line 365 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(Abs  (aHeadingRotation ) > 1.0f)
#line 366 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 367 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ulFlags  |= MF_ROTATEH ;
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 372 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(m_fMoveSpeed  > 0.0f)
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT length  = vDelta  . Length  ();
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT deltaX  = m_vDesiredPosition  (1) - GetPlacement  () . pl_PositionVector  (1);
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT deltaZ  = m_vDesiredPosition  (3) - GetPlacement  () . pl_PositionVector  (3);
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT num  = length  / m_fMoveSpeed ;
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(num  < 1.0f)
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDelta  = GetPlacement  () . pl_PositionVector  - m_vMyPositionTmp ;
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(vDelta  . Length  () < 0.5f)
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT flength  = Sqrt  (deltaX  * deltaX  + deltaZ  * deltaZ );
#line 401 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(flength  < 0.5f)
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(! _pNetwork  -> m_bSingleMode ){
#line 404 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
StopMove  ();
#line 405 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return 0;
#line 407 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
CPlacement3D plPlacement ;
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (GetPlacement  () . pl_OrientationAngle  (1) , 0 , 0);
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
plPlacement  . pl_PositionVector  = m_vDesiredPosition ;
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(! _pNetwork  -> m_bSingleMode )
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
_pNetwork  -> SendMoveMessage  (this  , plPlacement  , m_fMoveSpeed );
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
m_vMyPositionTmp  = GetPlacement  () . pl_PositionVector ;
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return SetDesiredMovement  ();
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 426 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
deltaX  = deltaX  / num ;
#line 427 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
deltaZ  = deltaZ  / num ;
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vRayHit ;
#line 430 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
CPlacement3D plPlacement ;
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (0 , 0 , 0);
#line 432 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
plPlacement  . pl_PositionVector  = FLOAT3D (GetPlacement  () . pl_PositionVector  (1) + deltaX  , 300.0f , GetPlacement  () . pl_PositionVector  (3) + deltaZ );
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT fMaxY  = - 9999999.0f;
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
BOOL bFloorHitted  = FALSE ;
#line 437 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vSource  = plPlacement  . pl_PositionVector ;
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vTarget  = vSource ;
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vTarget  (2) -= 1000.0f;
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 441 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_NONE ;
#line 442 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
crRay  . cr_bHitTranslucentPortals  = TRUE ;
#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
crRay  . cr_bPhysical  = TRUE ;
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
GetWorld  () -> CastRay  (crRay );
#line 445 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if((crRay  . cr_penHit  != NULL ) && (crRay  . cr_vHit  (2) > fMaxY ))
#line 446 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
fMaxY  = crRay  . cr_vHit  (2);
#line 448 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
bFloorHitted  = TRUE ;
#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 451 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(bFloorHitted )
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
plPlacement  . pl_PositionVector  (2) += fMaxY  - plPlacement  . pl_PositionVector  (2) + 0.01f;
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 456 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
plPlacement  . pl_OrientationAngle  (1) = GetPlacement  () . pl_OrientationAngle  (1);
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(! _pNetwork  -> m_bSingleMode )
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
_pNetwork  -> SendMoveMessage  (this  , plPlacement  , m_fMoveSpeed );
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
m_vMyPositionTmp  = GetPlacement  () . pl_PositionVector ;
#line 465 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return SetDesiredMovement  ();
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , 0));
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 473 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return ulFlags ;
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  ULONG CUnit::SetDesiredMovement(void) 
#line 481 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ULONG  ulFlags  = 0;
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 488 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(m_aRotateSpeed  > 0.0f)
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDir  = vDelta ;
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vDir  . SafeNormalize  ();
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ANGLE aWantedHeadingRelative  = GetRelativeHeading  (vDir );
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aWantedHeadingRelative  = NormalizeAngle  (aWantedHeadingRelative );
#line 498 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ANGLE aHeadingRotation ;
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(aWantedHeadingRelative  < - m_aRotateSpeed  * m_fMoveFrequency )
#line 501 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 504 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = - (m_aRotateSpeed  * m_fMoveFrequency );
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else if(aWantedHeadingRelative  > m_aRotateSpeed  * m_fMoveFrequency )
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = + (m_aRotateSpeed  * m_fMoveFrequency );
#line 512 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 514 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = aWantedHeadingRelative  / m_fMoveFrequency ;
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (aHeadingRotation  , 0 , 0));
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(Abs  (aHeadingRotation ) > 1.0f)
#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ulFlags  |= MF_ROTATEH ;
#line 524 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 527 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 528 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 529 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 535 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(m_fMoveSpeed  > 0.0f)
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 537 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDeltaPlane  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT fLength  = vDeltaPlane  . Length  ();
#line 555 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vDeltaPlane  . Normalize  ();
#line 557 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(fLength  < m_fMoveSpeed  * m_fMoveFrequency )
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 560 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
m_fMoveSpeed  = fLength  / m_fMoveFrequency ;
#line 561 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 563 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vSpeed  = vDeltaPlane  * m_fMoveSpeed ;
#line 564 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT fTestLength  = vSpeed  . Length  ();
#line 565 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredTranslation  (vSpeed );
#line 566 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ulFlags  |= MF_MOVEZ ;
#line 567 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return ulFlags ;
#line 568 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 569 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 570 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 572 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredTranslation  (FLOAT3D (0 , 0 , 0));
#line 573 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 574 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return ulFlags ;
#line 575 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  ULONG CUnit::SetDesiredRotate(void) 
#line 578 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 579 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ULONG  ulFlags  = 0;
#line 582 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 585 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(m_aRotateSpeed  > 0.0f)
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 588 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
FLOAT3D vDir  = vDelta ;
#line 589 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
vDir  . SafeNormalize  ();
#line 590 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ANGLE aWantedHeadingRelative  = GetRelativeHeading  (vDir );
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aWantedHeadingRelative  = NormalizeAngle  (aWantedHeadingRelative );
#line 595 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ANGLE aHeadingRotation ;
#line 597 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(aWantedHeadingRelative  < - m_aRotateSpeed  * m_fMoveFrequency )
#line 598 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 600 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = - m_aRotateSpeed ;
#line 602 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 603 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else if(aWantedHeadingRelative  > m_aRotateSpeed  * m_fMoveFrequency )
#line 604 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 606 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = + m_aRotateSpeed ;
#line 608 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 609 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 610 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 612 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
aHeadingRotation  = aWantedHeadingRelative  / m_fMoveFrequency ;
#line 613 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 615 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (aHeadingRotation  , 0 , 0));
#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
if(Abs  (aHeadingRotation ) > 1.0f)
#line 618 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 619 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
ulFlags  |= MF_ROTATEH ;
#line 620 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 623 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 624 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
else 
#line 625 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 627 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 628 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
#line 629 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return ulFlags ;
#line 630 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 638 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
void CUnit::StopMoving() 
#line 639 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 640 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
StopRotating  ();
#line 641 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
StopTranslating  ();
#line 642 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 645 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
void CUnit::StopRotating() 
#line 646 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 647 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredRotation  (ANGLE3D (0 , 0 , 0));
#line 648 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  
#line 651 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
void CUnit::StopTranslating() 
#line 652 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 653 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
SetDesiredTranslation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 654 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
  void CUnit::StandingAnim(void) {}
  void CUnit::WalkingAnim(void) {}
  void CUnit::RunningAnim(void) {}
  void CUnit::RotatingAnim(void) {}
  void CUnit::AttackAnim(void) {}
  void CUnit::HungryAnim(void) {}
  
#line 673 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
BOOL CUnit::IsValidForEnemy(CEntity * penPlayer) 
#line 674 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
{
#line 675 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
return 
#line 676 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
penPlayer  != NULL  && 
#line 679 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
penPlayer  -> GetFlags  () & ENF_ALIVE ;
#line 680 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
}
BOOL CUnit::
#line 683 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CUnit_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CUnit::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 685 "E:/질산/Korea/Client_USA/EntitiesMP/Unit.es"
InitAsVoid  (); ASSERT(FALSE); return TRUE;};