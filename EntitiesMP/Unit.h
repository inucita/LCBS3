/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#ifndef _Unit_INCLUDED
#define _Unit_INCLUDED 1
extern DECL_DLL CEntityPropertyEnumType wPetAIState_enum;
enum wPetAIState {
	WPET_AI_NONE = 0,
	WPET_AI_STOP = 1,
	WPET_AI_ACTION = 2,
	WPET_AI_NORMALATTACK = 3,
	WPET_AI_USESKILL = 4,
	WPET_AI_FOLLOW = 5,
};
DECL_DLL inline void ClearToDefault(wPetAIState &e) { e = (wPetAIState)0; } ;
extern DECL_DLL CEntityPropertyEnumType EventType_enum;
enum EventType {
	EVENT_NONE = 0,
	EVENT_MOBCREATE = 1,
	EVENT_MOBDESTROY = 2,
	EVENT_MOBCLICK = 3,
};
DECL_DLL inline void ClearToDefault(EventType &e) { e = (EventType)0; } ;
extern DECL_DLL CEntityPropertyEnumType DestinationType_enum;
enum DestinationType {
	DT_PLAYERCURRENT = 0,
	DT_PLAYERSPOTTED = 1,
	DT_PATHTEMPORARY = 2,
	DT_PATHPERSISTENT = 3,
};
DECL_DLL inline void ClearToDefault(DestinationType &e) { e = (DestinationType)0; } ;
extern DECL_DLL CEntityPropertyEnumType TargetType_enum;
enum TargetType {
	TT_NONE = 0,
	TT_SOFT = 1,
	TT_HARD = 2,
};
DECL_DLL inline void ClearToDefault(TargetType &e) { e = (TargetType)0; } ;
extern "C" DECL_DLL CDLLEntityClass CUnit_DLLClass;
class DECL_DLL  CUnit : public CMovableModelEntity {
public:
virtual const CTString &GetName(void) const { return m_strName; };
virtual BOOL IsTargetable(void) const { return TRUE; };
	 virtual void SetDefaultProperties(void);
	enum TargetType m_ttTarget;
	CTString m_strName;
	FLOAT m_fMaxHealth;
	INDEX m_nMaxiHealth;
	INDEX m_nCurrentHealth;
	INDEX m_nMobLevel;
	INDEX m_nPreHealth;
	INDEX m_nMobDBIndex;
	FLOAT m_fActivityRange;
	RANGE m_fAttackRadius;
	enum DestinationType m_dtDestination;
	FLOAT m_fWalkSpeed;
	ANGLE m_aWalkRotateSpeed;
	FLOAT m_fAttackRunSpeed;
	ANGLE m_aAttackRotateSpeed;
	FLOAT m_fCloseRunSpeed;
	ANGLE m_aCloseRotateSpeed;
	FLOAT m_fAttackDistance;
	FLOAT m_fCloseDistance;
	FLOAT m_fAttackFireTime;
	FLOAT m_fCloseFireTime;
	FLOAT m_fStopDistance;
	FLOAT m_fIgnoreRange;
	FLOAT m_fMoveTime;
	FLOAT m_fMoveSpeed;
	ANGLE m_aRotateSpeed;
	FLOAT m_fMoveFrequency;
	RANGE m_fSenseRange;
	FLOAT m_fViewAngle;
	FLOAT m_fFallHeight;
	FLOAT m_fStepHeight;
	FLOAT m_fShootTime;
	FLOAT m_fDamageConfused;
	FLOAT m_fBlowUpAmount;
	INDEX m_fBodyParts;
	FLOAT m_fDamageWounded;
	INDEX m_nPlayActionNum;
	FLOAT3D m_vDesiredPosition;
	BOOL m_bSkilling;
	INDEX m_nCurrentSkillNum;
	FLOAT m_fSkillSpeed;
	FLOAT m_fAttackLengthMul;
	FLOAT m_fAttackSpeedMul;
	INDEX m_idCurrentSkillAnim;
	BOOL m_bAttack;
	BOOL m_bWasKilled;
	BOOL m_bUseAI;
	BOOL m_bAIStart;
	FLOAT m_tmSkillStartTime;
	FLOAT m_tmSkillAnimTime;
	FLOAT m_fSkillAnimTime;
	INDEX m_bKillEnemy;
	FLOAT3D m_vMyPositionTmp;
	INDEX m_enAttackerID;
	BOOL m_bStuned;
	BOOL m_bHold;
	BOOL m_bCannotUseSkill;
CSelectedEntities m_dcEnemies;
FLOAT m_fAttackSpeed;
ANGLE3D m_aDesiredRotation;
  
#line 130 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void OnInitialize(const CEntityEvent & eeInput);
  
#line 135 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void OnEnd(void);
  
#line 141 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void DeathNow();
  
#line 142 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void SkillNow();
  
#line 143 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void PreSkillNow();
  
#line 144 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void AttackNow();
  
#line 145 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void ActionNow();
  
#line 146 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void SetAttackSpeed(SBYTE attackspeed);
  
#line 147 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void StopNow();
  
#line 148 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual BOOL SetTargetEntity(CEntity * penPlayer);
  
#line 149 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual BOOL SetKillTargetEntity(CEntity * penKill);
  
#line 150 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual BOOL SetEnemyEntity(CEntity * penEnemy,int type);
  
#line 151 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void SetNoTargetEntity(void);
  
#line 152 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void StopandTeleport();
  
#line 153 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void MoveNow();
  
#line 154 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void SendActEvent(void);
  
#line 156 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual BOOL CheckTarget(CEntity * penTarget);
  
#line 157 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual BOOL UseSkill(int iSkillIndex);
  
#line 160 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual BOOL IsMovable();
  
#line 161 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual BOOL IsAvailableRide();
  
#line 162 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void StopMove();
  
#line 180 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual FLOAT & GetProp(FLOAT & m_fBase);
  
#line 186 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual FLOAT GetThreatDistance(void);
   
#line 193 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D CalcDelta(CEntity * penEntity);
   
#line 201 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CalcDist(CEntity * penEntity);
   
#line 207 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT3D CalcPlaneDelta(CEntity * penEntity);
   
#line 219 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CalcPlaneDist(CEntity * penEntity);
   
#line 225 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT GetFrustumAngle(const FLOAT3D & vDir);
   
#line 234 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT GetPlaneFrustumAngle(const FLOAT3D & vDir);
   
#line 250 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL IsInFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum);
   
#line 262 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL IsInPlaneFrustum(CEntity * penEntity,FLOAT fCosHalfFrustum);
   
#line 278 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL IsVisible(CEntity * penEntity);
   
#line 296 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL IsVisibleCheckAll(CEntity * penEntity);
   
#line 314 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
FLOAT CalcDistanceInPlaneToDestination(void);
  
#line 330 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual ULONG SetDesiredMovementEx(void);
  
#line 489 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual ULONG SetDesiredMovement(void);
  
#line 587 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual ULONG SetDesiredRotate(void);
   
#line 649 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
void StopMoving();
   
#line 656 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
void StopRotating();
   
#line 662 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
void StopTranslating();
  
#line 672 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void StandingAnim(void);
  
#line 673 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void WalkingAnim(void);
  
#line 674 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void RunningAnim(void);
  
#line 675 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void RotatingAnim(void);
  
#line 676 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void AttackAnim(void);
  
#line 677 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void HungryAnim(void);
  
#line 678 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
virtual void ActEventAnim(void);
   
#line 685 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
BOOL IsValidForEnemy(CEntity * penPlayer);
#define  STATE_CUnit_Main 1
	BOOL 
#line 695 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Unit.es"
Main(const CEntityEvent &__eeInput);
};
#endif // _Unit_INCLUDED
