/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 3 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"

#include "StdH.h"

#include <Engine/Effect/CWorldTag.h>
#include <Engine/Effect/CEffectGroup.h>
#include <Engine/Effect/CEffectGroupManager.h>
#include <Engine/Effect/CSkaEffect.h>
#include <Engine/Graphics/Color.h>
#include <Engine/Entities/ItemData.h>
#include <Engine/Network/ItemTarget.h>
#include <deque>
#include <Engine/Entities/Skill.h>
#include <Engine/Network/MessageDefine.h>
#include "EntitiesMP/Common/CharacterDefinition.h"

#define MOB_ATTACK_MOTION_NUM		(1)

struct sSkillEffectInfo
{
	void InitForNormalAttack(CMobData &mob, INDEX aniID)
	{
		m_bSkillAttack = FALSE;
		szEffectNameCast = mob.GetFireEffect0();
		szEffectNameMissile = mob.GetFireEffect1();
		szEffectNameHit = mob.GetFireEffect2();
		iFireDelayCount = mob.GetDelayCount();
		fFireDelay[0] = mob.GetDelay(0);
		fFireDelay[1] = mob.GetDelay(1);
		fFireDelay[2] = mob.GetDelay(2);
		fFireDelay[3] = mob.GetDelay(3);
		iMissileType = mob.GetMissileType();
		fMissileSpeed = mob.GetMissileSpeed();
		iAnimatioID = aniID;
		dwValidValue = 0x00000000;
	}
	void InitForSkillAttack(CSkill &skill)
	{
		m_bSkillAttack = TRUE;
		szEffectNameCast = skill.GetFireEffect1(0);
		szEffectNameMissile = skill.GetFireEffect2(0);
		szEffectNameHit = skill.GetFireEffect3(0);
		iFireDelayCount = skill.GetDelayCount(0);
		fFireDelay[0] = skill.GetDelay(0,0);
		fFireDelay[1] = skill.GetDelay(1,0);
		fFireDelay[2] = skill.GetDelay(2,0);
		fFireDelay[3] = skill.GetDelay(3,0);
		iMissileType = skill.GetMissileType(0);
		fMissileSpeed = skill.GetMissileSpeed(0);
		iAnimatioID = skill.idPlayer_Anim_Skill[0][2];
		dwValidValue = 0x00000000;
	}
	
	BOOL		m_bSkillAttack;
	const char	*szEffectNameCast;
	const char	*szEffectNameMissile;
	const char	*szEffectNameHit;
	int			iFireDelayCount;
	FLOAT		fFireDelay[4];
	int			iMissileType;
	FLOAT		fMissileSpeed;
	INDEX		iAnimatioID;
	DWORD		dwValidValue;
};
#define SkillEffectInfo() ((sSkillEffectInfo*)m_pSkillEffectInfo)

//-----------------------------------------------------------------------------
// Purpose: 컨테이너 내의 모든 엔티티에 한번에 데미지를 줍니다.
// Input  : pEntity - 
//			sTI - 
//			vCenter - 
// Output : static void
//-----------------------------------------------------------------------------
void DamagedTargetsInRange(CEntity* pEntity, CSelectedEntities& dcEntities, enum DamageType dmtType, FLOAT fDamageAmmount, FLOAT3D vCenter, BOOL bSkill);

void ShotFallDown(FLOAT3D vStartPos, FLOAT3D vToTargetDir, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szFallObjEffectName
				 , bool bCritical);
void GetTargetDirection2(CEntity *penMe, CEntity *penTarget, FLOAT3D &vTargetPos, FLOAT3D &vDirection)
{
	if(penTarget == NULL) {return;}

	if(penTarget == penMe)
	{
		vTargetPos = penMe->en_plPlacement.pl_PositionVector;
		vDirection = FLOAT3D(0,1,1);
		return;
	}
	FLOAT3D vCurrentCenter(((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[0],
	((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[1],
	((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[2] );
	FLOAT3D vCurrentPos = penMe->en_plPlacement.pl_PositionVector + vCurrentCenter;
	FLOAT3D vTargetCenter(0, 0, 0);
	vTargetPos = FLOAT3D(0, 0, 0);
	vDirection = FLOAT3D(0, 0, 0);
	FLOAT size = 0;
	if(penTarget != NULL && penTarget->GetFlags()&ENF_ALIVE)
	{
		if(penTarget->en_RenderType == CEntity::RT_SKAMODEL)
		{
			// Bounding Box를 이용하여 Effect를 찍을 위치를 찾는다.
			FLOATaabbox3D bbox;
			penTarget->GetModelInstance()->GetCurrentColisionBox(bbox);
			FLOAT3D vRadius = (bbox.maxvect - bbox.minvect) * 0.5f * 0.4f/*단순히 원으로 하면 너무 큼. 사이즈 조절 상수*/;
			size = vRadius.Length();
		}
		vTargetCenter = FLOAT3D(((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[0],
		((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[1],
		((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[2] );
		vTargetPos = penTarget->en_plPlacement.pl_PositionVector + vTargetCenter;
		vDirection = vTargetPos - vCurrentPos;
		vDirection.Normalize();
		vTargetPos -= vDirection * size;
	}
	vDirection.Normalize(); 				
};

ENGINE_API void SetDropItemModel(CEntity *penEntity, CItemData &ItemData, CItemTarget &it);

#include <EntitiesMP/Pet.h>
#include <EntitiesMP/Pet_tables.h>
CEntityEvent *EPetAttackDamage::MakeCopy(void) { CEntityEvent *peeCopy = new EPetAttackDamage(*this); return peeCopy;}
SLONG EPetAttackDamage::GetSizeOf(void) { return sizeof(*this);}
EPetAttackDamage::EPetAttackDamage() : CEntityEvent(EVENTCODE_EPetAttackDamage) {;
};
BOOL EPetAttackDamage::CheckIDs(void) { return TRUE ; }
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"

// info structure
static EntityInfo eiPetBoss = {
	EIBT_FLESH, 200.0f,
	//0.0f, 1.75f*m_fStretch, 0.0f,     // source (eyes)
	//0.0f, 1.30f*m_fStretch, 0.0f,     // target (body)
	0.0f, 1.75f*1.0f, 0.0f,     // source (eyes)
	0.0f, 1.30f*1.0f, 0.0f,     // target (body)
};

//안태훈 수정 시작	//(Effect Add & Modify for Close Beta)(0.1)
static INDEX g_iNPCMinBrightness = 32;	//명도 0~240
void CPet_OnInitClass(void)
{
	_pShell->DeclareSymbol("persistent user INDEX g_iNPCMinBrightness;", &g_iNPCMinBrightness);
}
//안태훈 수정 끝	//(Effect Add & Modify for Close Beta)(0.1)

void ShotMissile(CEntity *penShoter, const char *szShotPosTagName
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szArrowEffectName
				 , bool bCritical
				 , FLOAT fHorizonalOffset = 0.0f, FLOAT fVerticalOffset = 0.0f	//-1.0f ~ 1.0f
				 , INDEX iArrowType = 0, const char *szMissileModel = NULL);
void ShotMagicContinued(CEntity *penShoter, FLOAT3D vStartPos, FLOATquat3D qStartRot
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szMagicEffectName
				 , bool bCritical, INDEX iOrbitType, BOOL bDirectTag = FALSE);

void CPet::SetDefaultProperties(void) {
  m_fBodyAnimTime = -1.0f;
  m_fStretch = 1.0f;
  iAnimPet_Walk = -1;
  iAnimPet_Idle1 = -1;
  iAnimPet_Idle2 = -1;
  iAnimPet_Run = -1;
  iAnimPet_Death = -1;
  iAnimPet_Wound = -1;
  iAnimPet_Attack = -1;
  iAnimPet_NormalBox = -1;
  iAnimPet_LevelUp = -1;
  iAnimPet_Skill01 = -1;
  iAnimPet_Skill02 = -1;
  iAnimPet_Skill03 = -1;
  iAnimPet_Skill04 = -1;
  iAnimPet_Skill05 = -1;
  iAnimPet_Skill01_01 = -1;
  iAnimPet_Skill01_02 = -1;
  iAnimPet_Pick = -1;
  iAnimPetType = -1;
  iAnimPetAge = -1;
  m_strName = "Enemy";
  m_EventType = EVENT_NONE ;
  m_penEventTarget = NULL;
  m_bIsRun = FALSE ;
  m_bDie = FALSE ;
  m_fActionAnimTime = 0.0f;
  m_bTransform = FALSE ;
  CPetBase::SetDefaultProperties();
}
  
#line 218 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
BOOL CPet::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
g_iNPCMinBrightness  = Clamp  (g_iNPCMinBrightness  , (INDEX) 0 , (INDEX) 240);
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
BOOL bRecalcAmbient  = FALSE ;
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
UBYTE  ubAH  , ubAS  , ubAV ;
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ColorToHSV  (colAmbient  , ubAH  , ubAS  , ubAV );
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(ubAV  < g_iNPCMinBrightness )
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
UBYTE  ubAR  , ubAG  , ubAB ;
#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ColorToRGB  (colAmbient  , ubAR  , ubAG  , ubAB );
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ubAR  = g_iNPCMinBrightness ;
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ubAG  = g_iNPCMinBrightness ;
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ubAB  = g_iNPCMinBrightness ;
#line 233 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ColorToHSV  (RGBToColor  (ubAR  , ubAG  , ubAB ) , ubAH  , ubAS  , ubAV );
#line 234 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
bRecalcAmbient  = TRUE ;
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(bRecalcAmbient ){colAmbient  = HSVToColor  (ubAH  , ubAS  , ubAV );}
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE ;
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  FLOAT CPet::GetLockRotationSpeed(void) 
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 244 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return AngleDeg  (1800.0f);
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  BOOL CPet::IsMovable() 
#line 249 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 251 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_bUseAI )
#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if((_pNetwork  -> _PetTargetInfo  . bIsActive  && (_pNetwork  -> _PetTargetInfo  . fHungry  <= 0 || _pNetwork  -> _PetTargetInfo  . fHealth  <= 0)) 
#line 255 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
|| m_bStuned  || m_bHold )
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return FALSE ;
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE ;
#line 261 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::OnInitialize(const CEntityEvent & eeInput) 
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 265 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CPetBase  :: OnInitialize  (eeInput );
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::OnEnd(void) 
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CPetBase  :: OnEnd  ();
#line 271 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  CTString CPet::GetPlayerKillDescription(const CTString & strPlayerName,const EDeath & eDeath) 
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CTString str ;
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
str  . PrintF  (TRANS  ("A %s sent %s into the halls of Valhalla") , m_strName  , strPlayerName );
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return str ;
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void * CPet::GetEntityInfo(void) 
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return & eiPetBoss ;
#line 285 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::Precache(void) 
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 289 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CPetBase  :: Precache  ();
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(en_pmiModelInstance ){en_pmiModelInstance  -> m_tmSkaTagManager  . SetOwner  (this );}
#line 294 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  BOOL CPet::IsPet(void)const 
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE ;
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::InflictDirectDamage(CEntity * penToDamage,CEntity * penInflictor,enum DamageType dmtType,
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(penToDamage )
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(! (penToDamage  -> GetFlags  () & ENF_ALIVE )){return ;}
#line 308 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX preHealth  , curHealth ;
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
preHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
curHealth  = ((CUnit  *) penToDamage ) -> m_nCurrentHealth ;
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(preHealth  != - 1)
#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
fDamageAmmount  = 1;
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((CUnit  *) penToDamage ) -> m_nCurrentHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else fDamageAmmount  = 0;
#line 319 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((CUnit  *) penToDamage ) -> m_nPreHealth  = - 1;
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CEntity  :: InflictDirectDamage  (penToDamage  , penInflictor  , dmtType  , 
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
fDamageAmmount  , vHitPoint  , vDirection );
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(penToDamage  && penToDamage  -> IsEnemy  ())
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
const INDEX iMobIndex  = ((CEnemy  *) penToDamage ) -> m_nMobDBIndex ;
#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iMobIndex  == LORD_SYMBOL_INDEX )
#line 330 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (iMobIndex );
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX iCurHealth  = ((CUnit  *) ((CEntity  *) penToDamage )) -> m_nCurrentHealth ;
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static INDEX iType  = 0;
#line 334 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
float  fMaxHealth  = MD  . GetHealth  ();
#line 335 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iCurHealth  <= fMaxHealth  * 0.25f)
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iType  != 1)
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 339 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iType  = 1;
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword04.smc");
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(iCurHealth  <= fMaxHealth  * 0.50f)
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iType  != 2)
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iType  = 2;
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword03.smc");
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 353 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(iCurHealth  <= fMaxHealth  * 0.75f)
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iType  != 3)
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iType  = 3;
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword02.smc");
#line 359 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iType  != 0)
#line 365 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 366 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iType  = 0;
#line 367 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> SetSkaModel  (MD  . GetMobSmcFileName  ());
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 372 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(penToDamage )
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(((CUnit  *) penToDamage ) -> m_nCurrentHealth  <= 0 && penToDamage  != this )
#line 377 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((CUnit  *) ((CEntity  *) penToDamage )) -> DeathNow  ();
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(dmtType  != DMT_NONE  && fDamageAmmount  > 0)
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT angle  = acos  (vDirection  % vAxisY );
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D axis  = vAxisY  * vDirection ;
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
axis  . Normalize  ();
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOATquat3D quat ;
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
quat  . FromAxisAngle  (axis  , angle );
#line 398 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StartEffectGroup  ("Normal Hit" 
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, _pTimer  -> GetLerpedCurrentTick  () , vHitPoint  , quat );
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CPetBase  :: ReceiveDamage  (penInflictor  , dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 405 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
BOOL CPet::IsCommandAnimationPlaying() 
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(IsAnimationPlaying  (iAnimPet_Skill01 ) || 
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
IsAnimationPlaying  (iAnimPet_Skill02 ) || 
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
IsAnimationPlaying  (iAnimPet_Skill03 ) || 
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
IsAnimationPlaying  (iAnimPet_Skill04 ) || 
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
IsAnimationPlaying  (iAnimPet_Skill05 ))
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE ;
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return FALSE ;
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
BOOL CPet::TransformPetModel(INDEX iMobIndex,FLOAT fStretch) 
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (GetPhysicsFlags  () & ~ (EPF_TRANSLATEDBYGRAVITY  | EPF_ORIENTEDBYGRAVITY ));
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (iMobIndex );
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetSkaModel  (MD  . GetMobSmcFileName  ());
#line 426 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fprevStretch  = m_fStretch ;
#line 427 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fStretch  = fStretch ;
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StretchModel  (FLOAT3D (m_fStretch  , m_fStretch  , m_fStretch ));
#line 432 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_WALK_1  ] = iAnimPet_Walk ;
#line 433 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_IDLE_1  ] = iAnimPet_Idle1 ;
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_IDLE_2  ] = iAnimPet_Idle2 ;
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_RUN_1  ] = iAnimPet_Run ;
#line 436 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_PICK  ] = iAnimPet_Pick ;
#line 437 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_DAMAGE  ] = iAnimPet_Wound ;
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_DIE  ] = iAnimPet_Death ;
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_LEVELUP  ] = iAnimPet_LevelUp ;
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_ATTACK  ] = iAnimPet_Attack ;
#line 442 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Walk  = ska_GetIDFromStringTable  (MD  . GetAnimWalkName  ());
#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Idle1  = ska_GetIDFromStringTable  (MD  . GetAnimDefaultName  ());
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Idle2  = ska_GetIDFromStringTable  (MD  . GetAnimDefault2Name  ());
#line 445 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Run  = ska_GetIDFromStringTable  (MD  . GetAnimRunName  ());
#line 446 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Pick  = ska_GetIDFromStringTable  (MD  . GetAnimAttackName  ());
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Attack  = ska_GetIDFromStringTable  (MD  . GetAnimAttackName  ());
#line 448 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Death  = ska_GetIDFromStringTable  (MD  . GetAnimDeathName  ());
#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_LevelUp  = ska_GetIDFromStringTable  (MD  . GetAnimWoundName  ());
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Wound  = ska_GetIDFromStringTable  (MD  . GetAnimWoundName  ());
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
AddAnimation  (iAnimPet_Idle1  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1.0f , 0x03 , ESKA_MASTER_MODEL_INSTANCE );
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (GetPhysicsFlags  () | EPF_TRANSLATEDBYGRAVITY  | EPF_ORIENTEDBYGRAVITY );
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bTransform  = TRUE ;
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE ;
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::ReturnPetModel(void) 
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(! m_bTransform )
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return ;
#line 465 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CTString strNewLook ;
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fStretch  = m_fprevStretch ;
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bTransform  = FALSE ;
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (GetPhysicsFlags  () & ~ (EPF_TRANSLATEDBYGRAVITY  | EPF_ORIENTEDBYGRAVITY ));
#line 473 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetSkaModel  (PetInfo  () . GetFileName  (m_iPetType  , m_iPetAge ));
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Walk  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_WALK_1  ];
#line 476 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Idle1  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_IDLE_1  ];
#line 477 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Idle2  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_IDLE_2  ];
#line 478 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Run  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_RUN_1  ];
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Pick  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_PICK  ];
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Wound  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_DAMAGE  ];
#line 481 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Death  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_DIE  ];
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_LevelUp  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_LEVELUP  ];
#line 483 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iAnimPet_Attack  = m_PetAnimationIndices  . m_iAnimation  [ PET_ANIM_ATTACK  ];
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (GetPhysicsFlags  () | EPF_TRANSLATEDBYGRAVITY  | EPF_ORIENTEDBYGRAVITY );
#line 488 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_iPetColor  > 0)
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CTString strTexFile  = PetInfo  () . GetColoredTexFileName  (m_iPetType  , m_iPetAge  , m_iPetColor );
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> mi_aMeshInst  [ 0 ] . mi_tiTextures  [ 0 ] . ti_toTexture  . SetData_t  (strTexFile );
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 499 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX CPet::AnimForDamage(FLOAT fDamage) 
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 501 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Wound  != - 1 && "Invalid Animation");
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 505 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(! IsAnimationPlaying  (iAnimPet_Idle1 ) || ! IsAnimationPlaying  (iAnimPet_Idle2 ))
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX animSet  , animIdx ;
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(this  -> en_pmiModelInstance  
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 511 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
this  -> en_pmiModelInstance  -> AddAnimationChild  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 514 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 515 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return animId ;
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 518 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
NewClearState  (CLEAR_STATE_LENGTH );
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Wound  , AN_CLEAR  , 1 , 0);
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return iAnimPet_Wound ;
#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 525 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX CPet::AnimForDeath(void) 
#line 526 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 527 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Death  != - 1 && "Invalid Animation");
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
NewClearState  (CLEAR_STATE_LENGTH );
#line 533 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Death  , AN_NORESTART  , 1 , 0);
#line 535 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return iAnimPet_Death ;
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 539 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT CPet::WaitForDust(FLOAT3D & vStretch) 
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 542 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
vStretch  = FLOAT3D (1 , 1 , 1);
#line 543 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(GetModelInstance  () -> IsAnimationPlaying  (iAnimPet_Death ))
#line 544 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 545 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return 0.5f;
#line 546 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 547 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return - 1.0f;
#line 548 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 550 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::DeathNotify(void) 
#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
en_fDensity  = 500.0f;
#line 555 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_EventType  == EVENT_MOBDESTROY )
#line 556 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 557 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SendToTarget  (m_penEventTarget  , EET_TRIGGER  , this );
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 559 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 562 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::ClickedEvent(void) 
#line 563 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 564 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_EventType  == EVENT_MOBCLICK )
#line 565 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 566 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SendToTarget  (m_penEventTarget  , EET_TRIGGER  , this );
#line 567 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 568 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 570 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::StandingAnim(void) 
#line 571 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 572 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bIsRun  = FALSE ;
#line 573 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Idle1  != - 1 && "Invalid Animation");
#line 574 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 575 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimation  (iAnimPet_Idle1  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 576 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Idle1  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 577 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 579 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::RunningAnim(void) 
#line 580 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 581 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bIsRun  = TRUE ;
#line 582 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Run  != - 1 && "Invalid Animation");
#line 583 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 584 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimation  (iAnimPet_Run  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 585 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Run  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 588 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::WalkingAnim(void) 
#line 589 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 590 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bIsRun  = FALSE ;
#line 591 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Walk  != - 1 && "Invalid Animation");
#line 592 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimation  (iAnimPet_Walk  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 594 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Walk  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 595 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 597 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::LevelUpAnim(void) 
#line 598 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 599 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_LevelUp  != - 1 && "Invalid Animation");
#line 600 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 601 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_LevelUp  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 602 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 604 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::SitAnim(void) 
#line 605 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 606 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Skill01  != - 1 && "Invalid Animation");
#line 607 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 608 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Skill01  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 611 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 613 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::StandUpAnim(void) 
#line 614 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 615 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Skill01_02  != - 1 && "Invalid Animation");
#line 616 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Skill01_02  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 620 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 622 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::SittingAnim(void) 
#line 623 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 624 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Skill01_01  != - 1 && "Invalid Animation");
#line 625 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 626 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Skill01_01  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 631 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 633 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::PickAnim(void) 
#line 634 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 635 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimPet_Pick  != - 1 && "Invalid Animation");
#line 636 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 637 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Pick  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 638 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 640 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::SkillAnim(INDEX iAnimIndex,DWORD dwFlag,float fSpeed) 
#line 641 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 642 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (iAnimIndex  != - 1 && "Invalid Animation");
#line 643 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 645 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimIndex  , dwFlag  , 1 , 0 , fSpeed );
#line 648 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 650 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::RotatingAnim(void) 
#line 651 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 652 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_bIsRun )
#line 653 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 654 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
RunningAnim  ();
#line 655 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 656 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 657 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 658 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
WalkingAnim  ();
#line 659 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 660 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 663 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::EnemyPostInit(void) 
#line 664 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 666 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_soSound  . Set3DParameters  (30.0f , 5.0f , 1.0f , 1.0f);
#line 667 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 671 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::AddDeathItem(FLOAT3D pos,class CItemTarget * pItemTarget,class CItemData * pItemData) 
#line 672 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 673 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX cnt  = m_aDeathItemTargetDrop  . Count  ();
#line 674 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemPosDrop  . Expand  (cnt  + 1);
#line 675 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemPosDrop  [ cnt  ] = pos ;
#line 676 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemTargetDrop  . Expand  (cnt  + 1);
#line 677 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemTargetDrop  [ cnt  ] = * pItemTarget ;
#line 678 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemDataDrop  . Expand  (cnt  + 1);
#line 679 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemDataDrop  [ cnt  ] = pItemData ;
#line 680 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  void CPet::DropDeathItem() 
#line 683 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 684 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
for(INDEX i  = 0;i  < m_aDeathItemTargetDrop  . Count  ();++ i )
#line 685 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 686 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CItemTarget  * pItem  = NULL ;
#line 687 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
for(int  iItem  = 0;iItem  < _pNetwork  -> ga_srvServer  . srv_aitItem  . Count  ();++ iItem )
#line 688 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 689 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_aDeathItemTargetDrop  [ i  ] . item_Index  == _pNetwork  -> ga_srvServer  . srv_aitItem  [ iItem  ] . item_Index )
#line 690 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 691 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
pItem  = & (_pNetwork  -> ga_srvServer  . srv_aitItem  [ iItem  ]);
#line 692 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 693 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 694 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(pItem  == NULL ){continue ;}
#line 696 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CItemTarget  & it  = * pItem ;
#line 697 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
it  = m_aDeathItemTargetDrop  [ i  ];
#line 698 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CItemData  & ItemData  = * ((CItemData  *) m_aDeathItemDataDrop  [ i  ]);
#line 699 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
const char  * szItemData  = _pNetwork  -> GetItemName  (ItemData  . GetItemIndex  ());
#line 700 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CEntity  * penEntity  = NULL ;
#line 701 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CPlacement3D plPlacement ;
#line 702 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
plPlacement  . pl_PositionVector  = m_aDeathItemPosDrop  [ i  ];
#line 703 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
plPlacement  . pl_OrientationAngle  = ANGLE3D (0.0f , 0.0f , 0.0f);
#line 704 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERT  (it  . item_pEntity  == NULL );
#line 705 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penEntity  = _pNetwork  -> ga_World  . CreateEntity_t  (plPlacement  , CLASS_ITEM  , - 1 , TRUE );
#line 706 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(penEntity  == NULL ){continue ;}
#line 708 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
it  . item_pEntity  = penEntity ;
#line 709 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
it  . item_iClientIndex  = penEntity  -> en_ulID ;
#line 710 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
penEntity  -> en_strItemName  = szItemData ;
#line 711 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetDropItemModel  (penEntity  , ItemData  , it );
#line 714 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(ItemData  . GetType  () == CItemData  :: ITEM_ETC  
#line 715 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
&& ItemData  . GetType  () == CItemData  :: ITEM_ETC_MONEY )
#line 716 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 717 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((CPlayerEntity  *) CEntity  :: GetPlayerEntity  (0)) -> PlayItemSound  (FALSE  , TRUE );
#line 718 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 719 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 720 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 721 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((CPlayerEntity  *) CEntity  :: GetPlayerEntity  (0)) -> PlayItemSound  (FALSE  , FALSE );
#line 722 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 723 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 724 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemPosDrop  . Clear  ();
#line 725 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemTargetDrop  . Clear  ();
#line 726 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aDeathItemDataDrop  . Clear  ();
#line 727 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
  
#line 729 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
void CPet::SkillAndAttackFire(int num) 
#line 730 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 731 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(! (m_penEnemy  . ep_pen  != NULL  
#line 732 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
&& m_penEnemy  -> en_pmiModelInstance  != NULL  
#line 733 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
&& m_penEnemy  -> GetFlags  () & ENF_ALIVE ))
#line 734 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 735 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return ;
#line 736 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 737 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
switch(SkillEffectInfo  () -> iMissileType )
#line 738 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 739 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 0: 
#line 740 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 741 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vHitPoint ;
#line 742 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vHitDir ;
#line 743 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetTargetDirection2  (this  , m_penEnemy  , vHitPoint  , vHitDir );
#line 745 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_dcEnemies  . Count  () > 0)
#line 746 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 747 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , vHitPoint  , TRUE );
#line 748 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_dcEnemies  . Clear  ();
#line 749 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 750 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 751 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 753 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , vHitPoint  , vHitDir );
#line 754 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 756 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 757 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT angle  = acos  (vHitDir  % vAxisY );
#line 758 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D axis  = vAxisY  * vHitDir ;
#line 759 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
axis  . Normalize  ();
#line 760 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOATquat3D quat ;
#line 761 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
quat  . FromAxisAngle  (axis  , angle );
#line 762 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 763 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, _pTimer  -> GetLerpedCurrentTick  () 
#line 764 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, vHitPoint  , quat );
#line 765 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}break ;
#line 766 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 1: 
#line 767 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 768 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_dcEnemies  . Count  () > 0)
#line 769 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 770 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 771 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 772 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 773 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CEntity  * pEn  = (* it );
#line 774 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 775 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 776 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ShotMissile  (this  , "RHAND" , pEn  , SkillEffectInfo  () -> fMissileSpeed  , "Normal Hit" , "Normal Arrow Trace" , false );
#line 777 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 778 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 779 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 780 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 781 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 782 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ShotMissile  (this  , "RHAND" , m_penEnemy  , SkillEffectInfo  () -> fMissileSpeed  , "Normal Hit" , "Normal Arrow Trace" , false );
#line 783 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 784 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}break ;
#line 785 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 2: 
#line 786 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 787 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 788 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 789 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 790 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}break ;
#line 791 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 3: 
#line 792 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 793 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D lastEffectInfo  = m_penEnemy  -> en_plPlacement  . pl_PositionVector ;
#line 794 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
lastEffectInfo  (2) += 1;
#line 795 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_pSkillReadyEffect  != NULL  && CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pSkillReadyEffect ))
#line 796 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 797 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
for(INDEX i  = 0;i  < m_pSkillReadyEffect  -> GetEffectCount  ();++ i )
#line 798 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 799 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CEffect  * pEffect  = m_pSkillReadyEffect  -> GetEffectKeyVector  () [ i  ] . m_pCreatedEffect ;
#line 800 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(pEffect  != NULL  && pEffect  -> GetType  () == ET_SKA )
#line 801 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 802 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CSkaEffect  * pSkaEffect  = (CSkaEffect  *) pEffect ;
#line 803 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
lastEffectInfo  = pSkaEffect  -> GetInstancePosition  ();
#line 804 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
break ;
#line 805 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 806 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 807 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(num  == SkillEffectInfo  () -> iFireDelayCount )
#line 808 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 809 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillReadyEffect  -> Stop  (0.04f);
#line 810 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 811 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 812 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_dcEnemies  . Count  () > 0)
#line 813 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 814 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 815 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 816 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 817 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CEntity  * pEn  = (* it );
#line 818 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 819 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 820 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ShotMagicContinued  (this  , lastEffectInfo  , FLOATquat3D (1 , 0 , 0 , 0) 
#line 821 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, pEn  , SkillEffectInfo  () -> fMissileSpeed  
#line 822 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  
#line 823 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, false  , 3);
#line 824 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 825 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 826 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 827 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 828 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 829 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ShotMagicContinued  (this  , lastEffectInfo  , FLOATquat3D (1 , 0 , 0 , 0) 
#line 830 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, m_penEnemy  , SkillEffectInfo  () -> fMissileSpeed  
#line 831 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  
#line 832 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, false  , 3);
#line 833 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 834 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}break ;
#line 835 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 4: {}break ;
#line 836 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 5: {}break ;
#line 837 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 6: {}break ;
#line 838 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 7: {}break ;
#line 839 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 8: 
#line 840 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 841 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 842 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 843 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 844 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_dcEnemies  . Count  () > 0)
#line 845 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 846 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , FLOAT3D (0 , 0 , 0) , TRUE );
#line 847 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_dcEnemies  . Clear  ();
#line 848 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 849 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 850 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 851 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , FLOAT3D (0 , 0 , 0) , FLOAT3D (0 , 0 , 0));
#line 852 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 853 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}break ;
#line 854 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 9: {}break ;
#line 856 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
case 21: 
#line 857 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 858 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 859 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static INDEX s_iFireBallCount  = 10;
#line 860 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static FLOAT s_fFallHeight  = 3;
#line 861 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static FLOAT s_fFallHeightVariation  = 3;
#line 862 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static FLOAT s_fSpeed  = 5;
#line 863 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static FLOAT s_fSpeedVariation  = 5;
#line 864 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
for(INDEX i  = 0;i  < s_iFireBallCount ;++ i )
#line 865 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 866 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D pos  = CRandomTable  :: Instance  () . GetRndCylinderPos  () * skill  . GetAppRange  ();
#line 867 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
pos  (2) = CRandomTable  :: Instance  () . GetRndFactor  () * s_fFallHeightVariation  + s_fFallHeight ;
#line 868 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
pos  += m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 869 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ShotFallDown  (pos  , FLOAT3D (0 , 1 , 0) , s_fSpeed  + s_fSpeedVariation  * CRandomTable  :: Instance  () . GetRndFactor  () 
#line 870 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  , FALSE );
#line 871 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 872 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}break ;
#line 874 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
default  :
#line 875 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 876 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ASSERTALWAYS  ("Something wrong... Plz check fire obj type of this skill.");
#line 877 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}break ;
#line 878 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 879 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
BOOL CPet::
#line 885 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 887 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Jump(STATE_CURRENT, STATE_CPetBase_Fire, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 890 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 892 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
STATE_CPet_NormalAttack, TRUE;
Jump(STATE_CURRENT, 0x4c7b0003, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b0003_Hit_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CPet_NormalAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x4c7b0004, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CPet::H0x4c7b0004_Hit_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0004
const EEnd&__e= (EEnd&)__eeInput;
;
#line 893 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 893 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 897 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
AttackTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_AttackTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::AttackTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 899 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 901 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX attackAnimID  = - 1;
#line 902 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
const int  iAttackMotion  = m_nAttackCnt  % MOB_ATTACK_MOTION_NUM ;
#line 903 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iAttackMotion  == 0)
#line 904 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 905 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
attackAnimID  = iAnimPet_Attack ;
#line 906 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 907 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillEffectInfo  = new  sSkillEffectInfo ;
#line 908 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> InitForNormalAttack  (_pNetwork  -> GetMobData  (0) , attackAnimID );
#line 910 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(strlen  (SkillEffectInfo  () -> szEffectNameHit ) == 0){SkillEffectInfo  () -> szEffectNameHit  = "Normal Hit";}
#line 911 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(SkillEffectInfo  () -> iFireDelayCount  == 0)
#line 912 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 913 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> iMissileType  = CSkill  :: MT_NONE ;
#line 914 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> iFireDelayCount  = 1;
#line 915 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> fFireDelay  [ 0 ] = GetAnimLength  (iAnimPet_Attack ) / 3;
#line 916 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 917 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
STATE_CPet_SkillAndMagicAnimation, TRUE;
Jump(STATE_CURRENT, 0x4c7b0006, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b0006_AttackTarget_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0006
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CPet_SkillAndMagicAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x4c7b0007, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CPet::H0x4c7b0007_AttackTarget_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0007
const EReturn&__e= (EReturn&)__eeInput;
;
#line 919 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 919 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 922 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillingTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_SkillingTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::SkillingTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 924 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 934 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 935 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillEffectInfo  = new  sSkillEffectInfo ;
#line 936 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> InitForSkillAttack  (skill );
#line 937 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
STATE_CPet_SkillAndMagicAnimation, TRUE;
Jump(STATE_CURRENT, 0x4c7b0009, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b0009_SkillingTarget_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0009
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CPet_SkillAndMagicAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x4c7b000a, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CPet::H0x4c7b000a_SkillingTarget_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b000a
const EReturn&__e= (EReturn&)__eeInput;
;
#line 939 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 939 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 943 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ActionAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_ActionAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::ActionAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 945 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX iActionSkill  = - 1;
#line 947 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_nPlayActionNum  == 271)
#line 948 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 949 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill01 ;
#line 950 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 951 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == 272)
#line 952 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 953 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill02 ;
#line 954 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 955 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == 273)
#line 956 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 957 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill03 ;
#line 958 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 959 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == 284)
#line 960 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 961 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill01 ;
#line 962 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 963 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == 285)
#line 964 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 965 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill03 ;
#line 966 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 967 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == 286)
#line 968 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 969 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill02 ;
#line 970 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 971 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == 287)
#line 972 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 973 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill05 ;
#line 974 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 975 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == 288)
#line 976 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 977 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Skill04 ;
#line 978 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 979 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else if(m_nPlayActionNum  == ACTION_NUM_PICKITEM )
#line 980 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 981 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
iActionSkill  = iAnimPet_Pick ;
#line 982 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 986 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimation  (iActionSkill  , AN_CLEAR  , 1.0f , 0);
#line 987 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iActionSkill  , AN_CLEAR  , 1.0f , 0);
#line 988 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fActionAnimTime  = GetModelInstance  () -> GetAnimLength  (iActionSkill );
#line 990 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetTimerAfter(m_fActionAnimTime  - 0.1f);
Jump(STATE_CURRENT, 0x4c7b000c, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b000c_ActionAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b000c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x4c7b000d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CPet::H0x4c7b000d_ActionAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b000d
;
#line 1000 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StandingAnim  ();
#line 1002 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1002 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 1005 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
AttackAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_AttackAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::AttackAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1007 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
const int  iAttackMotion  = m_nAttackCnt  % MOB_ATTACK_MOTION_NUM ;
#line 1008 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iAttackMotion  == 0)
#line 1009 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1010 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Attack  , AN_CLEAR  , 1.0f , 0);
#line 1011 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1013 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fAttackFrequency  = 0.25f;
#line 1014 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fAttackStartTime  = _pTimer  -> CurrentTick  ();
#line 1015 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fImpactTime  = GetAnimLength  (iAnimPet_Attack ) / 3;
#line 1017 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Jump(STATE_CURRENT,0x4c7b0011, FALSE, EInternal());return TRUE;}BOOL CPet::H0x4c7b0011_AttackAnimation_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0011
if(!(_pTimer  -> CurrentTick  () - m_fAttackStartTime  < GetAnimLength  (iAnimPet_Attack ) * 0.8f)){ Jump(STATE_CURRENT,0x4c7b0012, FALSE, EInternal());return TRUE;}
#line 1019 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetTimerAfter(m_fAttackFrequency );
Jump(STATE_CURRENT, 0x4c7b000f, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b000f_AttackAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b000f
switch(__eeInput.ee_slEvent)
#line 1020 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{case(EVENTCODE_EBegin):
#line 1022 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1023 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_bMoving )
#line 1024 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1028 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1028 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1029 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1031 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fMoveSpeed  = 0.0f;
#line 1032 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 1034 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(_pTimer  -> CurrentTick  () - m_fAttackStartTime  > m_fImpactTime )
#line 1035 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1036 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SendEvent  (EPetAttackDamage  ());
#line 1037 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fImpactTime  = 1000.0f;
#line 1038 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1040 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1041 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}ASSERT(FALSE);break;case(EVENTCODE_EPetBaseDamage):
#line 1043 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{const EPetBaseDamage&eEBDamage= (EPetBaseDamage&)__eeInput;

#line 1045 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 1046 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_fDamageConfused  < 0.001f)
#line 1047 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1048 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 1050 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX animSet  , animIdx ;
#line 1051 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 1052 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(this  -> en_pmiModelInstance  
#line 1053 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 1054 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1056 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
this  -> en_pmiModelInstance  -> AddAnimationChild  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 1057 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1058 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1059 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1060 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}ASSERT(FALSE);break;case(EVENTCODE_EPetAttackDamage):
#line 1062 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{const EPetAttackDamage&eAttackDamage= (EPetAttackDamage&)__eeInput;

#line 1065 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CEntity  * pen  = m_penEnemy ;
#line 1066 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vCurrentCenter  (((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1067 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1068 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1069 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vCurrentPos  = this  -> en_plPlacement  . pl_PositionVector  + vCurrentCenter ;
#line 1070 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vTargetCenter  (0 , 0 , 0);
#line 1071 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vTargetPos  (0 , 0 , 0);
#line 1072 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vDirection  (0 , 0 , 0);
#line 1073 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT size  = 0;
#line 1074 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(pen  != NULL  && pen  -> GetFlags  () & ENF_ALIVE )
#line 1075 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1076 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(pen  -> en_RenderType  == RT_SKAMODEL )
#line 1077 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1079 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOATaabbox3D bbox ;
#line 1080 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
pen  -> GetModelInstance  () -> GetCurrentColisionBox  (bbox );
#line 1081 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT3D vRadius  = (bbox  . maxvect  - bbox  . minvect ) * 0.5f * 0.4f;
#line 1082 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
size  = vRadius  . Length  ();
#line 1083 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1084 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
vTargetCenter  = FLOAT3D (((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1085 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1086 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1087 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
vTargetPos  = pen  -> en_plPlacement  . pl_PositionVector  + vTargetCenter ;
#line 1088 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
vDirection  = vTargetPos  - vCurrentPos ;
#line 1089 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
vDirection  . Normalize  ();
#line 1090 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
vTargetPos  -= vDirection  * size ;
#line 1091 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1092 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
vDirection  . Normalize  ();
#line 1097 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_CLOSERANGE  , (int ) 1 , vTargetPos  , vDirection );
#line 1099 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((CLiveEntity  *) ((CEntity  *) m_penEnemy )) -> SetHealth  (1000.0f);
#line 1101 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fImpactTime  = 1000.0f;
#line 1103 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
UnsetTimer();Jump(STATE_CURRENT,0x4c7b0010, FALSE, EInternal());return TRUE;
#line 1104 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x4c7b0010, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1106 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}return TRUE;}BOOL CPet::H0x4c7b0010_AttackAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0010
Jump(STATE_CURRENT,0x4c7b0011, FALSE, EInternal());return TRUE;
#line 1107 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}BOOL CPet::H0x4c7b0012_AttackAnimation_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0012

#line 1109 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_penKillEnemy  != NULL )
#line 1110 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1111 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(((CUnit  *) ((CEntity  *) m_penKillEnemy )) -> m_nCurrentHealth  <= 0)
#line 1112 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1113 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
((CUnit  *) ((CEntity  *) m_penKillEnemy )) -> DeathNow  ();
#line 1114 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1115 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_penKillEnemy  = NULL ;
#line 1116 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1119 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bAttack  = FALSE ;
#line 1120 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bMoving  = FALSE ;
#line 1121 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_bStop  = FALSE ;
#line 1122 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StandingAnim  ();
#line 1123 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetNoTargetEntity  ();
#line 1125 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1125 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 1128 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillAndMagicAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_SkillAndMagicAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::SkillAndMagicAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1130 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(SkillEffectInfo  () -> dwValidValue  != 0)
#line 1131 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1132 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1133 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
delete  m_pSkillEffectInfo ;
#line 1134 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillEffectInfo  = NULL ;
#line 1135 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1135 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1136 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1138 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fAttackFrequency  = 0.05f;
#line 1139 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fAttackStartTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 1140 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fImpactTime  = GetAnimLength  (iAnimPet_Attack ) / 3;
#line 1142 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (SkillEffectInfo  () -> iAnimatioID  , AN_CLEAR  , 1.0f , 0);
#line 1144 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_nEffectStep  = 1;
#line 1145 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillReadyEffect  = NULL ;
#line 1146 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillReadyEffect  = StartEffectGroup  (SkillEffectInfo  () -> szEffectNameCast  
#line 1147 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, & en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1148 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1150 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Jump(STATE_CURRENT,0x4c7b0016, FALSE, EInternal());return TRUE;}BOOL CPet::H0x4c7b0016_SkillAndMagicAnimation_03(const CEntityEvent &__eeInput)
#line 1151 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0016
if(!(_pTimer  -> GetLerpedCurrentTick  () - m_fAttackStartTime  < GetAnimLength  (SkillEffectInfo  () -> iAnimatioID ) * 0.8f)){ Jump(STATE_CURRENT,0x4c7b0017, FALSE, EInternal());return TRUE;}
#line 1152 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetTimerAfter(m_fAttackFrequency );
Jump(STATE_CURRENT, 0x4c7b0014, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b0014_SkillAndMagicAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0014
switch(__eeInput.ee_slEvent)
#line 1153 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{case(EVENTCODE_EBegin):
#line 1155 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1156 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_bMoving  || m_bStop )
#line 1157 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1158 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
DestroyEffectGroupIfValid  (m_pSkillReadyEffect );
#line 1159 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> AddAnimationChild  (iAnimPet_Idle1  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 1160 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1161 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
delete  m_pSkillEffectInfo ;
#line 1162 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillEffectInfo  = NULL ;
#line 1163 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1163 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1164 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1166 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fMoveSpeed  = 0.0f;
#line 1167 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_penEnemy  . ep_pen  != this )
#line 1168 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1169 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetDesiredMovement  ();
#line 1170 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1172 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOAT time  = _pTimer  -> GetLerpedCurrentTick  () - m_fAttackStartTime ;
#line 1173 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 0 ] && m_nEffectStep  == 1 && SkillEffectInfo  () -> iFireDelayCount  > 0)
#line 1174 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1175 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
++ m_nEffectStep ;
#line 1176 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillAndAttackFire  (1);
#line 1177 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1178 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 1 ] && m_nEffectStep  == 2 && SkillEffectInfo  () -> iFireDelayCount  > 1)
#line 1179 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1180 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
++ m_nEffectStep ;
#line 1181 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillAndAttackFire  (2);
#line 1182 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1183 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 2 ] && m_nEffectStep  == 3 && SkillEffectInfo  () -> iFireDelayCount  > 2)
#line 1184 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1185 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
++ m_nEffectStep ;
#line 1186 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillAndAttackFire  (3);
#line 1187 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1188 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 3 ] && m_nEffectStep  == 4 && SkillEffectInfo  () -> iFireDelayCount  > 3)
#line 1189 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1190 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
++ m_nEffectStep ;
#line 1191 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillAndAttackFire  (4);
#line 1192 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1193 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1194 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 1196 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 1198 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 1199 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_fDamageConfused  < 0.001f)
#line 1200 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1201 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 1203 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX animSet  , animIdx ;
#line 1204 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 1205 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(this  -> en_pmiModelInstance  
#line 1206 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 1207 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1209 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
this  -> en_pmiModelInstance  -> AddAnimationChild  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 1210 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1211 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1212 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1213 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x4c7b0015, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1215 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}return TRUE;}BOOL CPet::H0x4c7b0015_SkillAndMagicAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0015
Jump(STATE_CURRENT,0x4c7b0016, FALSE, EInternal());return TRUE;
#line 1216 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}BOOL CPet::H0x4c7b0017_SkillAndMagicAnimation_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0017

#line 1218 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_nEffectStep  = 0;
#line 1219 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1220 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
delete  m_pSkillEffectInfo ;
#line 1221 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_pSkillEffectInfo  = NULL ;
#line 1222 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1222 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 1226 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
NormalAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_NormalAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::NormalAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1229 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
StandingAnim  ();
#line 1230 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetTimerAfter(0.8f + FRnd  () * 0.25f);
Jump(STATE_CURRENT, 0x4c7b0019, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b0019_NormalAttack_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b0019
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x4c7b001a, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CPet::H0x4c7b001a_NormalAttack_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b001a
;
#line 1232 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
INDEX attackAnimID  = - 1;
#line 1233 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
const int  iAttackMotion  = rand  () % MOB_ATTACK_MOTION_NUM ;
#line 1234 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(iAttackMotion  == 0)
#line 1235 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1236 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
attackAnimID  = iAnimPet_Attack ;
#line 1237 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1239 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_nAttackCnt  = attackAnimID ;
#line 1241 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
STATE_CPet_AttackTarget, TRUE;
Jump(STATE_CURRENT, 0x4c7b001b, FALSE, EBegin());return TRUE;}BOOL CPet::H0x4c7b001b_NormalAttack_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b001b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CPet_AttackTarget, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x4c7b001c, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CPet::H0x4c7b001c_NormalAttack_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c7b001c
const EEnd&__e= (EEnd&)__eeInput;
;
#line 1245 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EEnd  ());
#line 1245 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CPet::
#line 1251 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPet_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPet::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1253 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(GetModelInstance  () == NULL )
#line 1254 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1255 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
InitAsSkaEditorModel  ();
#line 1256 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetSkaModel  ("Models\\Editor\\Ska\\Axis.smc");
#line 1257 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Return(STATE_CURRENT,EEnd  ());
#line 1257 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
return TRUE;
#line 1258 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1260 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(GetModelInstance  () != NULL )
#line 1261 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1262 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CSkaTag  tag ;
#line 1263 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetName  ("__ROOT");
#line 1264 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1265 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1266 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOATaabbox3D aabb ;
#line 1267 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 1268 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetName  ("CENTER");
#line 1269 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1270 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) * 0.5f * GetModelInstance  () -> mi_vStretch  (2) , 0);
#line 1271 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1272 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetName  ("__TOP");
#line 1273 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1274 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) * GetModelInstance  () -> mi_vStretch  (2) , 0);
#line 1275 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1276 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1279 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetFlags  (GetFlags  () | ENF_ALIVE );
#line 1281 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
en_sbNetworkType  = MSG_CHAR_PET ;
#line 1284 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_iPetAge  != 2)
#line 1285 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1286 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (EPF_ONBLOCK_CLIMBORSLIDE  
#line 1287 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
| EPF_TRANSLATEDBYGRAVITY  
#line 1289 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
| EPF_MOVABLE  
#line 1290 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
| EPF_ABSOLUTETRANSLATE );
#line 1292 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetCollisionFlags  (ECF_MODEL_NO_COLLISION );
#line 1293 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1294 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
else 
#line 1295 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1298 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (EPF_MODEL_WALKING  | EPF_HASLUNGS );
#line 1299 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (EPF_MOVABLE );
#line 1300 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (GetPhysicsFlags  () & ~ EPF_TRANSLATEDBYGRAVITY );
#line 1301 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetPhysicsFlags  (EPF_MODEL_WALKING );
#line 1302 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1305 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
en_tmMaxHoldBreath  = 60.0f;
#line 1306 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
en_fDensity  = 1000.0f;
#line 1308 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetFlagOn  (ENF_RENDERREFLECTION );
#line 1311 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aWalkRotateSpeed  = AngleDeg  (1800.0f);
#line 1312 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aAttackRotateSpeed  = AngleDeg  (1800.0f);
#line 1313 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_aCloseRotateSpeed  = AngleDeg  (1800.0f);
#line 1316 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fAttackFireTime  = 2.0f;
#line 1317 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fCloseFireTime  = 2.0f;
#line 1318 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fBlowUpAmount  = 80.0f;
#line 1319 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fBodyParts  = 4;
#line 1320 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
m_fDamageWounded  = 0.0f;
#line 1323 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> StretchModel  (FLOAT3D (m_fStretch  , m_fStretch  , m_fStretch ));
#line 1324 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> mi_bRenderShadow  = TRUE ;
#line 1326 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetHealth  (10000.0f);
#line 1327 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
ModelChangeNotify  ();
#line 1331 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(GetModelInstance  ())
#line 1332 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1333 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
CSkaTag  tag ;
#line 1334 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetName  ("__ROOT");
#line 1335 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1336 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1337 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetName  ("__TOP");
#line 1338 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 1339 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
FLOATaabbox3D aabb ;
#line 1340 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 1341 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) , 0);
#line 1342 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 1343 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1346 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
if(m_bUseAI )
#line 1347 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
{
#line 1348 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
SetTargetEntity  (CEntity  :: GetPlayerEntity  (0));
#line 1349 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
}
#line 1352 "E:/질산/Korea/Client_USA/EntitiesMP/Pet.es"
Jump(STATE_CURRENT, STATE_CPetBase_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};