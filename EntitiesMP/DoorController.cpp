/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"

#include "StdH.h"
#include <Engine/CurrentVersion.h>
#include <Engine/Interface/UIManager.h>

#define CHECK_MIN_ENEMY		5

#include <EntitiesMP/DoorController.h>
#include <EntitiesMP/DoorController_tables.h>
void CDoorController::SetDefaultProperties(void) {
  m_strName = "DoorController";
  m_strDescription = "";
  m_penTarget1 = NULL;
  m_penTarget2 = NULL;
  m_fWidth = 2.0f;
  m_fHeight = 3.0f;
  m_bPlayersOnly = TRUE ;
  m_dtType = DT_AUTO ;
  m_strLockedMessage = "";
  m_penLockedTarget = NULL;
  m_bTriggerOnAnything = FALSE ;
  m_bActive = TRUE ;
  m_bLocked = FALSE ;
  m_penCaused = NULL;
  m_bOpened = FALSE ;
  m_iOpenMobNum = 1;
  m_iMaxCheckPoint = 0;
  CRationalEntity::SetDefaultProperties();
}
  
#line 59 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CEntity * CDoorController::GetTarget(void)const {return m_penTarget1 ;}
  
#line 61 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
const CTString & CDoorController::GetDescription(void)const 
#line 62 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 63 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_penTarget1  != NULL  && m_penTarget2  != NULL ){
#line 64 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CTString &) m_strDescription ) . PrintF  ("->%s,%s" , 
#line 65 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penTarget1  -> GetName  () , m_penTarget2  -> GetName  ());
#line 66 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}else if(m_penTarget1  != NULL ){
#line 67 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CTString &) m_strDescription ) . PrintF  ("->%s" , 
#line 68 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penTarget1  -> GetName  ());
#line 69 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}else {
#line 70 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CTString &) m_strDescription ) . PrintF  ("-><none>");
#line 71 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 72 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return m_strDescription ;
#line 73 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  void CDoorController::Read_t(CTStream * istr,BOOL bNetwork) 
#line 77 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 78 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CRationalEntity  :: Read_t  (istr  , bNetwork );
#line 80 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  
#line 84 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
BOOL CDoorController::CanReactOnEntity(CEntity * pen) 
#line 85 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 86 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(pen  == NULL ){
#line 87 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return FALSE ;
#line 88 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 90 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(! (pen  -> GetFlags  () & ENF_ALIVE )){
#line 91 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return FALSE ;
#line 92 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 94 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_bPlayersOnly  && ! IsDerivedFromClass  (pen  , & CPlayer_DLLClass )){
#line 95 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return FALSE ;
#line 96 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 98 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE ;
#line 99 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  
#line 102 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
BOOL CDoorController::CanTriggerOnEntity(CEntity * pen) 
#line 103 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 104 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return m_bTriggerOnAnything  || CanReactOnEntity  (pen );
#line 105 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  
#line 107 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
void CDoorController::TriggerDoor(void) 
#line 108 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 111 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_penTarget1  != NULL )
#line 112 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 116 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(g_slZone  == 7)
#line 117 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 118 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_penTarget )
#line 119 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 120 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_bForceStop  = TRUE ;
#line 121 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_bMoveToMarker  = FALSE ;
#line 122 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_bStopMoving  = TRUE ;
#line 123 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_bMoving  = FALSE ;
#line 124 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_bRotating  = FALSE ;
#line 125 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> SetDesiredTranslation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 126 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> SetDesiredRotation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(! m_bOpened )
#line 129 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 130 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CEntity  * penTarget  = ((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_penTarget  -> GetTarget  ();
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penTarget1  -> SetPlacement  (penTarget  -> en_plPlacement );
#line 132 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
else 
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 135 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CEntity  * penTargetTemp  = ((CMovingBrush  *) (CEntity  *) m_penTarget1 ) -> m_penTarget  -> GetTarget  ();
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CEntity  * penTarget  = ((CMovingBrushMarker  *) (CEntity  *) penTargetTemp ) -> m_penTarget ;
#line 137 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penTarget1  -> SetPlacement  (penTarget  -> en_plPlacement );
#line 138 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 139 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 141 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
else 
#line 142 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 143 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SendToTarget  (m_penTarget1  , EET_TRIGGER  , m_penCaused );
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 145 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 146 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_penTarget2  != NULL )
#line 147 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(g_slZone  == 7)
#line 151 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 152 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_penTarget )
#line 153 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_bForceStop  = TRUE ;
#line 155 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_bMoveToMarker  = FALSE ;
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_bStopMoving  = TRUE ;
#line 157 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_bMoving  = FALSE ;
#line 158 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_bRotating  = FALSE ;
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> SetDesiredTranslation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> SetDesiredRotation  (FLOAT3D (0.0f , 0.0f , 0.0f));
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(! m_bOpened )
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 163 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CEntity  * penTarget  = ((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_penTarget  -> GetTarget  ();
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penTarget2  -> SetPlacement  (penTarget  -> en_plPlacement );
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 166 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
else 
#line 167 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 168 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CEntity  * penTargetTemp  = ((CMovingBrush  *) (CEntity  *) m_penTarget2 ) -> m_penTarget  -> GetTarget  ();
#line 169 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CEntity  * penTarget  = ((CMovingBrushMarker  *) (CEntity  *) penTargetTemp ) -> m_penTarget ;
#line 170 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penTarget2  -> SetPlacement  (penTarget  -> en_plPlacement );
#line 171 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 172 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 173 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 174 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
else 
#line 175 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SendToTarget  (m_penTarget2  , EET_TRIGGER  , m_penCaused );
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 178 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 179 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  
#line 182 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
void CDoorController::MirrorAndStretch(FLOAT fStretch,BOOL bMirrorX) 
#line 183 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 185 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_fWidth  *= fStretch ;
#line 186 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_fHeight  *= fStretch ;
#line 187 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  
#line 191 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SLONG CDoorController::GetUsedMemory(void) 
#line 192 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 194 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SLONG  slUsedMemory  = sizeof  (CDoorController ) - sizeof  (CRationalEntity ) + CRationalEntity  :: GetUsedMemory  ();
#line 196 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
slUsedMemory  += m_strDescription  . Length  ();
#line 197 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
slUsedMemory  += m_strName  . Length  ();
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
slUsedMemory  += m_strLockedMessage  . Length  ();
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return slUsedMemory ;
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  
#line 202 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
BOOL CDoorController::AnyPlayerHasKey(INDEX iKey) 
#line 203 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
ULONG  ulKey  = (1 << INDEX (iKey ));
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
for(INDEX iplt  = 0;iplt  < _pNetwork  -> ga_srvServer  . srv_apltPlayers  . Count  ();iplt  ++){
#line 206 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CPlayerTarget  & plt  = _pNetwork  -> ga_srvServer  . srv_apltPlayers  [ iplt  ];
#line 207 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(plt  . plt_bActive ){
#line 208 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CPlayer  * penPlayer  = (CPlayer  *) plt  . plt_penPlayerEntity ;
#line 209 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(penPlayer  -> m_ulKeys  & ulKey ){
#line 210 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE ;
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 213 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return FALSE ;
#line 215 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
  
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
void CDoorController::RemoveKeyFromAllPlayers(INDEX iKey) 
#line 218 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
ULONG  ulKey  = (1 << INDEX (iKey ));
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
for(INDEX iplt  = 0;iplt  < _pNetwork  -> ga_srvServer  . srv_apltPlayers  . Count  ();iplt  ++){
#line 221 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CPlayerTarget  & plt  = _pNetwork  -> ga_srvServer  . srv_apltPlayers  [ iplt  ];
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(plt  . plt_bActive ){
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CPlayer  * penPlayer  = (CPlayer  *) plt  . plt_penPlayerEntity ;
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
penPlayer  -> m_ulKeys  &= ~ ulKey ;
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
BOOL CDoorController::
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
DoorAuto(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_DoorAuto
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::DoorAuto expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_bActive ){
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorAutoActive, TRUE, EVoid());return TRUE;
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}else {
#line 238 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorAutoInactive, TRUE, EVoid());return TRUE;
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
} ASSERT(FALSE); return TRUE;};BOOL CDoorController::
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
DoorAutoActive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_DoorAutoActive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::DoorAutoActive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
ASSERT  (m_bActive );
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT,0x00dd0006, FALSE, EInternal());return TRUE;}BOOL CDoorController::H0x00dd0006_DoorAutoActive_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0006
if(!(TRUE )){ Jump(STATE_CURRENT,0x00dd0007, FALSE, EInternal());return TRUE;}
#line 248 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dd0002, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0002_DoorAutoActive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0002
switch(__eeInput.ee_slEvent){case(EVENTCODE_EPass):{const EPass&ePass= (EPass&)__eeInput;

#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(CanReactOnEntity  (ePass  . penOther )){
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penCaused  = ePass  . penOther ;
#line 255 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
TriggerDoor  ();
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(_SE_DEMO  && GetSP  () -> sp_bCooperative  && ! GetSP  () -> sp_bSinglePlayer ){
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_strName  == "Appear gold amon"){
#line 261 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CPlayer  * penPlayer  = (CPlayer  *) & * ePass  . penOther ;
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
penPlayer  -> SetGameEnd  ();
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 267 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_bActive  = FALSE ;
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorAutoInactive, TRUE, EVoid());return TRUE;
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;default:{
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}return TRUE;}BOOL CDoorController::H0x00dd0003_DoorAutoActive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0003
;
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00dd0004, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0004_DoorAutoActive_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0004
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00dd0005, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CDoorController::H0x00dd0005_DoorAutoActive_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0005
;Jump(STATE_CURRENT,0x00dd0006, FALSE, EInternal());return TRUE;
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}BOOL CDoorController::H0x00dd0007_DoorAutoActive_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0007
 ASSERT(FALSE); return TRUE;};BOOL CDoorController::
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
DoorAutoInactive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_DoorAutoInactive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::DoorAutoInactive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 289 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
ASSERT  (! m_bActive );
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT,0x00dd000d, FALSE, EInternal());return TRUE;}BOOL CDoorController::H0x00dd000d_DoorAutoInactive_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd000d
if(!(TRUE )){ Jump(STATE_CURRENT,0x00dd000e, FALSE, EInternal());return TRUE;}
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dd0009, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0009_DoorAutoInactive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0009
switch(__eeInput.ee_slEvent){case(EVENTCODE_EActivate):{const EActivate&e= (EActivate&)__eeInput;

#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_bActive  = TRUE ;
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorAutoActive, TRUE, EVoid());return TRUE;
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;default:{
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}return TRUE;}BOOL CDoorController::H0x00dd000a_DoorAutoInactive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd000a
;
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00dd000b, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd000b_DoorAutoInactive_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd000b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00dd000c, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CDoorController::H0x00dd000c_DoorAutoInactive_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd000c
;Jump(STATE_CURRENT,0x00dd000d, FALSE, EInternal());return TRUE;
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}BOOL CDoorController::H0x00dd000e_DoorAutoInactive_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd000e
 ASSERT(FALSE); return TRUE;};BOOL CDoorController::
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
DoorDummy(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_DoorDummy
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::DoorDummy expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dd0010, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0010_DoorDummy_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0010
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;default:{
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 318 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;
#line 319 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}return TRUE;}BOOL CDoorController::H0x00dd0011_DoorDummy_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0011
 ASSERT(FALSE); return TRUE;};BOOL CDoorController::
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
DoorTriggered(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_DoorTriggered
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::DoorTriggered expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT,0x00dd0017, FALSE, EInternal());return TRUE;}BOOL CDoorController::H0x00dd0017_DoorTriggered_05(const CEntityEvent &__eeInput)
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0017
if(!(TRUE )){ Jump(STATE_CURRENT,0x00dd0018, FALSE, EInternal());return TRUE;}
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dd0013, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0013_DoorTriggered_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0013
switch(__eeInput.ee_slEvent)
#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{case(EVENTCODE_ETrigger):
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
m_penCaused  = eTrigger  . penCaused ;
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
TriggerDoor  ();
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EPass):
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{const EPass&ePass= (EPass&)__eeInput;

#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(CanReactOnEntity  (ePass  . penOther ))
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_strLockedMessage  != "")
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_penLockedTarget  != NULL )
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SendToTarget  (m_penLockedTarget  , EET_TRIGGER  , ePass  . penOther );
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 353 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;default:
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}return TRUE;}BOOL CDoorController::H0x00dd0014_DoorTriggered_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0014
;
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00dd0015, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0015_DoorTriggered_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0015
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00dd0016, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CDoorController::H0x00dd0016_DoorTriggered_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0016
;Jump(STATE_CURRENT,0x00dd0017, FALSE, EInternal());return TRUE;
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}BOOL CDoorController::H0x00dd0018_DoorTriggered_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0018
 ASSERT(FALSE); return TRUE;};BOOL CDoorController::
#line 366 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
DoorLocked(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_DoorLocked
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::DoorLocked expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT,0x00dd001e, FALSE, EInternal());return TRUE;}BOOL CDoorController::H0x00dd001e_DoorLocked_05(const CEntityEvent &__eeInput)
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd001e
if(!(TRUE )){ Jump(STATE_CURRENT,0x00dd001f, FALSE, EInternal());return TRUE;}
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dd001a, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd001a_DoorLocked_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd001a
switch(__eeInput.ee_slEvent)
#line 372 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{case(EVENTCODE_EPass):
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{const EPass&ePass= (EPass&)__eeInput;

#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(IsDerivedFromClass  (ePass  . penOther  , & CPlayer_DLLClass ))
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 377 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CPlayer  * penPlayer  = (CPlayer  *) & * ePass  . penOther ;
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(_pNetwork  -> m_ubGMLevel  > 1)
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 382 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
CTString strMessage ;
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
strMessage  . PrintF  ("=====Remain Enemy : %d=====\n" , _pNetwork  -> wo_dwEnemyCount );
#line 384 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
_pNetwork  -> ClientSystemMessage  (strMessage );
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
strMessage  . PrintF  ("=====MAX Check Point : %X=====\n" , m_iMaxCheckPoint );
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
_pNetwork  -> ClientSystemMessage  (strMessage );
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
strMessage  . PrintF  ("=====Check Point : %X=====\n" , _pNetwork  -> wo_stCheckPoint  . m_iCheckFlag );
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
_pNetwork  -> ClientSystemMessage  (strMessage );
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(_pNetwork  -> wo_stCheckPoint  . m_iCheckFlag  >= m_iMaxCheckPoint  && 
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
_pNetwork  -> wo_dwEnemyCount  <= m_iOpenMobNum  && 
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
_pNetwork  -> m_bSingleMode )
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
_pNetwork  -> wo_dwEnemyCount  = 0;
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
TriggerDoor  ();
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorAutoInactive, TRUE, EVoid());return TRUE;
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
else 
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_penLockedTarget  != NULL )
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SendToTarget  (m_penLockedTarget  , EET_TRIGGER  , ePass  . penOther );
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;default:
#line 425 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
{
#line 426 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 427 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;
#line 428 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}return TRUE;}BOOL CDoorController::H0x00dd001b_DoorLocked_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd001b
;
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00dd001c, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd001c_DoorLocked_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd001c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00dd001d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CDoorController::H0x00dd001d_DoorLocked_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd001d
;Jump(STATE_CURRENT,0x00dd001e, FALSE, EInternal());return TRUE;
#line 432 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}BOOL CDoorController::H0x00dd001f_DoorLocked_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd001f
 ASSERT(FALSE); return TRUE;};BOOL CDoorController::
#line 436 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
DoorTriggeredAuto(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_DoorTriggeredAuto
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::DoorTriggeredAuto expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT,0x00dd0025, FALSE, EInternal());return TRUE;}BOOL CDoorController::H0x00dd0025_DoorTriggeredAuto_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0025
if(!(TRUE )){ Jump(STATE_CURRENT,0x00dd0026, FALSE, EInternal());return TRUE;}
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00dd0021, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0021_DoorTriggeredAuto_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0021
switch(__eeInput.ee_slEvent){case(EVENTCODE_ETrigger):{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorAuto, TRUE, EVoid());return TRUE;
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;case(EVENTCODE_EPass):{const EPass&ePass= (EPass&)__eeInput;

#line 446 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(CanReactOnEntity  (ePass  . penOther )){
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_strLockedMessage  != ""){
#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
if(m_penLockedTarget  != NULL ){
#line 451 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SendToTarget  (m_penLockedTarget  , EET_TRIGGER  , ePass  . penOther );
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;default:{
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
return TRUE;
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}ASSERT(FALSE);break;
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}return TRUE;}BOOL CDoorController::H0x00dd0022_DoorTriggeredAuto_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0022
;
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00dd0023, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0023_DoorTriggeredAuto_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0023
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00dd0024, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CDoorController::H0x00dd0024_DoorTriggeredAuto_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0024
;Jump(STATE_CURRENT,0x00dd0025, FALSE, EInternal());return TRUE;
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}BOOL CDoorController::H0x00dd0026_DoorTriggeredAuto_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0026
 ASSERT(FALSE); return TRUE;};BOOL CDoorController::
#line 466 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CDoorController_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CDoorController::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
InitAsEditorModel  ();
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetCollisionFlags  (ECF_TOUCHMODEL );
#line 473 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
GetModelObject  () -> StretchModel  (FLOAT3D (m_fWidth  , m_fHeight  , m_fWidth ));
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetModel  (MODEL_DOORCONTROLLER );
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetModelMainTexture  (TEXTURE_DOORCONTROLLER );
#line 476 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
ModelChangeNotify  ();
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00dd0027, FALSE, EBegin());return TRUE;}BOOL CDoorController::H0x00dd0027_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0027
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00dd0028, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CDoorController::H0x00dd0028_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00dd0028
;
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
switch(m_dtType ){
#line 483 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
case DT_AUTO : {
#line 484 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorAuto, TRUE, EVoid());return TRUE;
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}break ;
#line 486 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
case DT_TRIGGERED : {
#line 487 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorTriggered, TRUE, EVoid());return TRUE;
#line 488 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}break ;
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
case DT_TRIGGEREDAUTO : {
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorTriggeredAuto, TRUE, EVoid());return TRUE;
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}break ;
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
case DT_LOCKED : {
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
Jump(STATE_CURRENT, STATE_CDoorController_DoorLocked, TRUE, EVoid());return TRUE;
#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
}break ;
#line 495 "E:/질산/Korea/Client_USA/EntitiesMP/DoorController.es"
} ASSERT(FALSE); return TRUE;};