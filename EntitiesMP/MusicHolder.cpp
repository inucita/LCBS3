/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"

#include "StdH.h"
#include "EntitiesMP/EnemyBase.h"
#include "EntitiesMP/EnemySpawner.h"
#include "EntitiesMP/Trigger.h"
//#include "EntitiesMP/Woman.h"
//#include "EntitiesMP/BigHead.h"
//#include "EntitiesMP/CrateRider.h"

#include <Engine/Sound/SoundData.h>

#include <EntitiesMP/MusicHolder.h>
#include <EntitiesMP/MusicHolder_tables.h>
CEntityEvent *EChangeMusic::MakeCopy(void) { CEntityEvent *peeCopy = new EChangeMusic(*this); return peeCopy;}
SLONG EChangeMusic::GetSizeOf(void) { return sizeof(*this);}
EChangeMusic::EChangeMusic() : CEntityEvent(EVENTCODE_EChangeMusic) {;
 ClearToDefault(mtType);
 ClearToDefault(fnMusic);
 ClearToDefault(fVolume);
 ClearToDefault(bForceStart);
};
BOOL EChangeMusic::CheckIDs(void) { return TRUE ; }
CEntityEvent *ENetChangeMusic::MakeCopy(void) { CEntityEvent *peeCopy = new ENetChangeMusic(*this); return peeCopy;}
SLONG ENetChangeMusic::GetSizeOf(void) { return sizeof(*this);}
ENetChangeMusic::ENetChangeMusic() : CEntityEvent(EVENTCODE_ENetChangeMusic) {;
 ClearToDefault(mtType);
 ClearToDefault(iBossID);
 ClearToDefault(iCounterID);
};
BOOL ENetChangeMusic::CheckIDs(void) { return TRUE ; }
#line 36 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"

#define MUSIC_VOLUMEMIN   0.02f     // minimum volume (considered off)
#define MUSIC_VOLUMEMAX   0.98f     // maximum volume (considered full)

float FadeInFactor(TIME fFadeTime)
{
	return (float) pow(MUSIC_VOLUMEMAX/MUSIC_VOLUMEMIN, 1/(fFadeTime/_pTimer->TickQuantum));
}
float FadeOutFactor(TIME fFadeTime)
{
	return (float) pow(MUSIC_VOLUMEMIN/MUSIC_VOLUMEMAX, 1/(fFadeTime/_pTimer->TickQuantum));
}

void CMusicHolder::SetDefaultProperties(void) {
  m_strName = "MusicHolder";
  m_fScoreMedium = 100.0f;
  m_fScoreHeavy = 1000.0f;
  m_fnMusic0 = CTFILENAME("");
  m_fnMusic1 = CTFILENAME("");
  m_fnMusic2 = CTFILENAME("");
  m_fnMusic3 = CTFILENAME("");
  m_fnMusic4 = CTFILENAME("");
  m_fVolume0 = 1.0f;
  m_fVolume1 = 1.0f;
  m_fVolume2 = 1.0f;
  m_fVolume3 = 1.0f;
  m_fVolume4 = 1.0f;
  m_penBoss = NULL;
  m_penCounter = NULL;
  m_ctEnemiesInWorld = 0;
  m_iRespawnMarker = -1;
  m_ctSecretsInWorld = 0;
  m_tmFade = 1.0f;
  m_mtCurrentMusic = MT_LIGHT ;
  m_ctTreasuresInWorld = 0;
  m_fCurrentVolume0a = 1.0f;
  m_fCurrentVolume0b = 1.0f;
  m_fCurrentVolume1a = 1.0f;
  m_fCurrentVolume1b = 1.0f;
  m_fCurrentVolume2a = 1.0f;
  m_fCurrentVolume2b = 1.0f;
  m_fCurrentVolume3a = 1.0f;
  m_fCurrentVolume3b = 1.0f;
  m_fCurrentVolume4a = 1.0f;
  m_fCurrentVolume4b = 1.0f;
  m_soMusic0a.SetOwner(this);
m_soMusic0a.Stop(FALSE);
  m_soMusic0b.SetOwner(this);
m_soMusic0b.Stop(FALSE);
  m_soMusic1a.SetOwner(this);
m_soMusic1a.Stop(FALSE);
  m_soMusic1b.SetOwner(this);
m_soMusic1b.Stop(FALSE);
  m_soMusic2a.SetOwner(this);
m_soMusic2a.Stop(FALSE);
  m_soMusic2b.SetOwner(this);
m_soMusic2b.Stop(FALSE);
  m_soMusic3a.SetOwner(this);
m_soMusic3a.Stop(FALSE);
  m_soMusic3b.SetOwner(this);
m_soMusic3b.Stop(FALSE);
  m_soMusic4a.SetOwner(this);
m_soMusic4a.Stop(FALSE);
  m_soMusic4b.SetOwner(this);
m_soMusic4b.Stop(FALSE);
  m_iSubChannel0 = 1;
  m_iSubChannel1 = 1;
  m_iSubChannel2 = 1;
  m_iSubChannel3 = 1;
  m_iSubChannel4 = 1;
  m_tmLastUpdate = -1;
  m_iFirstTime = TRUE ;
  CRationalEntity::SetDefaultProperties();
}
  
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
void CMusicHolder::Precache(void) 
#line 135 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_fnMusic0  != ""){
#line 137 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_aps0  . Precache  (m_fnMusic0 );
#line 138 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 139 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_fnMusic1  != ""){
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_aps1  . Precache  (m_fnMusic1 );
#line 141 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 142 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_fnMusic2  != ""){
#line 143 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_aps2  . Precache  (m_fnMusic2 );
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 145 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
  
#line 148 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
void CMusicHolder::CountEnemies(void) 
#line 149 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_ctEnemiesInWorld  = 0;
#line 151 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_ctSecretsInWorld  = 0;
#line 153 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{FOREACHINDYNAMICCONTAINER  (GetWorld  () -> wo_cenEntities  , CEntity  , iten ){
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CEntity  * pen  = iten ;
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(IsDerivedFromClass  (pen  , "Enemy Base")){
#line 157 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CEnemyBase  * penEnemy  = (CEnemyBase  *) pen ;
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(! penEnemy  -> m_bTemplate )
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_ctEnemiesInWorld  ++;
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
AddEnemyKillData  (penEnemy  , NULL );
#line 174 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(IsDerivedFromClass  (pen  , "Enemy Spawner")){
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CEnemySpawner  * penSpawner  = (CEnemySpawner  *) pen ;
#line 178 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
BOOL bDoNotCount  = FALSE ;
#line 179 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(penSpawner  -> m_penTarget ){
#line 185 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 187 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(penSpawner  -> m_estType  != EST_TELEPORTER  && ! bDoNotCount ){
#line 188 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
AddSpawnerKillData  (penSpawner  , penSpawner  -> m_ctTotal );
#line 190 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_ctEnemiesInWorld  += penSpawner  -> m_ctTotal ;
#line 192 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(penSpawner  -> m_penTarget )
#line 193 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 201 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 203 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(IsDerivedFromClass  (pen  , "Trigger")){
#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CTrigger  * penTrigger  = (CTrigger  *) pen ;
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 213 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}}
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
  
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
void CMusicHolder::CheckOldFussMakers(void) 
#line 218 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
TIME  tmTooOld  = tmNow  - 10.0f;
#line 221 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CDynamicContainer  < CEntity  > cenOldFussMakers ;
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{FOREACHINDYNAMICCONTAINER  (m_cenFussMakers  , CEntity  , itenFussMaker ){
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CEnemyBase  & enFussMaker  = (CEnemyBase  &) * itenFussMaker ;
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(enFussMaker  . m_tmLastFussTime  < tmTooOld ){
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
cenOldFussMakers  . Add  (& enFussMaker );
#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}}
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{FOREACHINDYNAMICCONTAINER  (cenOldFussMakers  , CEntity  , itenOldFussMaker ){
#line 233 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CEnemyBase  & enOldFussMaker  = (CEnemyBase  &) * itenOldFussMaker ;
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
enOldFussMaker  . RemoveFromFuss  ();
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}}
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
  
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
INDEX CMusicHolder::GetFussMakersScore(void) {
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
INDEX iScore  = 0;
#line 242 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{FOREACHINDYNAMICCONTAINER  (m_cenFussMakers  , CEntity  , itenFussMaker ){
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CEnemyBase  & enFussMaker  = (CEnemyBase  &) * itenFussMaker ;
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}}
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
return iScore ;
#line 247 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
  
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
void CMusicHolder::ChangeMusicChannel(enum MusicType mtType,const CTFileName & fnNewMusic,FLOAT fNewVolume) 
#line 251 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 253 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CTFileName fnmExpanded ;
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fnNewMusic  != ""){
#line 255 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ExpandFilePath  (EFP_READ  , fnNewMusic  , fnmExpanded );
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
INDEX & iSubChannel  = (& m_iSubChannel0 ) [ mtType  ];
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
BOOL bChangeMusic  = TRUE ;
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CSoundObject & soMusicCurrent  = (& m_soMusic0a ) [ mtType  * 2 + iSubChannel  ];
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
const CSoundData  * sdSound  = soMusicCurrent  . so_psdLink ;
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(sdSound  != NULL ){
#line 265 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(sdSound  -> ser_FileName  == fnmExpanded ){
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
bChangeMusic  = FALSE ;
#line 267 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(bChangeMusic ){
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fnmExpanded  != ""){
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
iSubChannel  = (iSubChannel  + 1) % 2;
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT & fVolume  = (& m_fVolume0 ) [ mtType  ];
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CSoundObject & soMusic  = (& m_soMusic0a ) [ mtType  * 2 + iSubChannel  ];
#line 280 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT & fCurrentVolume  = (& m_fCurrentVolume0a ) [ mtType  * 2 + iSubChannel  ];
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ULONG  ulFlags  = SOF_MUSIC ;
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(mtType  != MT_EVENT ){ulFlags  |= SOF_LOOP ;}
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
fVolume  = fNewVolume ;
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fnmExpanded  != "" && bChangeMusic ){
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
PlaySound  (soMusic  , fnmExpanded  , ulFlags );
#line 294 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
fCurrentVolume  = MUSIC_VOLUMEMIN ;
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
soMusic  . Pause  ();
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
soMusic  . SetVolume  (fCurrentVolume  * fVolume );
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
  
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
void CMusicHolder::FadeOutChannel(INDEX iChannel,INDEX iSubChannel) 
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT & fVolume  = (& m_fVolume0 ) [ iChannel  ];
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CSoundObject & soMusic  = (& m_soMusic0a ) [ iChannel  * 2 + iSubChannel  ];
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT & fCurrentVolume  = (& m_fCurrentVolume0a ) [ iChannel  * 2 + iSubChannel  ];
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(! soMusic  . IsPlaying  ()){return ;}
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(soMusic  . IsPaused  ()){return ;}
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fCurrentVolume  < MUSIC_VOLUMEMIN ){
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
soMusic  . Pause  ();
#line 318 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else {
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
fCurrentVolume  *= FadeOutFactor  (m_tmFade );
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
soMusic  . SetVolume  (fCurrentVolume  * fVolume );
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
  
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
void CMusicHolder::FadeInChannel(INDEX iChannel,INDEX iSubChannel) 
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT & fVolume  = (& m_fVolume0 ) [ iChannel  ];
#line 330 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CSoundObject & soMusic  = (& m_soMusic0a ) [ iChannel  * 2 + iSubChannel  ];
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT & fCurrentVolume  = (& m_fCurrentVolume0a ) [ iChannel  * 2 + iSubChannel  ];
#line 334 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(! soMusic  . IsPlaying  ()){return ;}
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(soMusic  . IsPaused  ()){
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
soMusic  . Resume  ();
#line 339 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fCurrentVolume  < MUSIC_VOLUMEMAX ){
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
fCurrentVolume  *= FadeInFactor  (m_tmFade );
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
fCurrentVolume  = ClampUp  (fCurrentVolume  , 1.0f);
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
soMusic  . SetVolume  (fCurrentVolume  * fVolume );
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
  
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
void CMusicHolder::CrossFadeOneChannel(enum MusicType mtType) 
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
{
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
INDEX iSubChannelActive  = (& m_iSubChannel0 ) [ mtType  ];
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
INDEX iSubChannelInactive  = (iSubChannelActive  + 1) % 2;
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(mtType  == m_mtCurrentMusic ){
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FadeInChannel  (mtType  , iSubChannelActive );
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FadeOutChannel  (mtType  , iSubChannelInactive );
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else {
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FadeOutChannel  (mtType  , 0);
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FadeOutChannel  (mtType  , 1);
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 365 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
BOOL CMusicHolder::
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMusicHolder_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMusicHolder::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
InitAsEditorModel  ();
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetModel  (MODEL_MARKER );
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetModelMainTexture  (TEXTURE_MARKER );
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetFlagOff  (ENF_NONETCONNECT );
#line 384 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x00de0002, FALSE, EBegin());return TRUE;}BOOL CMusicHolder::H0x00de0002_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0002
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00de0003, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMusicHolder::H0x00de0003_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0003
;
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(_pNetwork  -> IsServer  ()){
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_LIGHT  , m_fnMusic0  , m_fVolume0 );
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_MEDIUM  , m_fnMusic1  , m_fVolume1 );
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_HEAVY  , m_fnMusic2  , m_fVolume2 );
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_EVENT  , m_fnMusic3  , m_fVolume3 );
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_CONTINUOUS  , m_fnMusic4  , m_fVolume4 );
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = MT_LIGHT ;
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_fCurrentVolume0a  = MUSIC_VOLUMEMAX  * 0.98f;
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_tmFade  = 0.01f;
#line 398 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_LIGHT );
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x00de0004, FALSE, EBegin());return TRUE;}BOOL CMusicHolder::H0x00de0004_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0004
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00de0005, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMusicHolder::H0x00de0005_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0005
;
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CountEnemies  ();
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
Jump(STATE_CURRENT,0x00de0008, FALSE, EInternal());return TRUE;}BOOL CMusicHolder::H0x00de0008_Main_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0008
if(!(TRUE )){ Jump(STATE_CURRENT,0x00de0009, FALSE, EInternal());return TRUE;}
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00de0006, FALSE, EBegin());return TRUE;}BOOL CMusicHolder::H0x00de0006_Main_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0006
switch(__eeInput.ee_slEvent){case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;

#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_iFirstTime  && ! _pNetwork  -> IsServer  ()){
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_mtCurrentMusic  == MT_LIGHT ){
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_LIGHT  , m_fnMusic0  , m_fVolume0 );
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_MEDIUM ){
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_MEDIUM  , m_fnMusic1  , m_fVolume1 );
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_HEAVY ){
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_HEAVY  , m_fnMusic2  , m_fVolume2 );
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_EVENT ){
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_EVENT  , m_fnMusic3  , m_fVolume3 );
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_CONTINUOUS ){
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (MT_CONTINUOUS  , m_fnMusic4  , m_fVolume4 );
#line 425 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 428 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_LIGHT );
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_MEDIUM );
#line 430 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_HEAVY );
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_EVENT );
#line 432 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_CONTINUOUS );
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CountEnemies  ();
#line 442 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_iFirstTime  = FALSE ;
#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
UnsetTimer();Jump(STATE_CURRENT,0x00de0007, FALSE, EInternal());return TRUE;
#line 445 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_EChangeMusic):{const EChangeMusic&ecm= (EChangeMusic&)__eeInput;

#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ChangeMusicChannel  (ecm  . mtType  , ecm  . fnMusic  , ecm  . fVolume );
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(ecm  . mtType  == MT_LIGHT ){
#line 451 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_fnMusic0  = ecm  . fnMusic ;
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(ecm  . mtType  == MT_MEDIUM ){
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_fnMusic1  = ecm  . fnMusic ;
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(ecm  . mtType  == MT_HEAVY ){
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_fnMusic2  = ecm  . fnMusic ;
#line 456 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(ecm  . mtType  == MT_EVENT ){
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_fnMusic3  = ecm  . fnMusic ;
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(ecm  . mtType  == MT_CONTINUOUS ){
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_fnMusic4  = ecm  . fnMusic ;
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(ecm  . bForceStart ){
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = ecm  . mtType ;
#line 465 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
UnsetTimer();Jump(STATE_CURRENT,0x00de0007, FALSE, EInternal());return TRUE;
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}ASSERT(FALSE);break;case(EVENTCODE_ENetChangeMusic):{const ENetChangeMusic&encm= (ENetChangeMusic&)__eeInput;

#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(! _pNetwork  -> IsServer  ()){
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = encm  . mtType ;
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CEntity  * penEntity ;
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(encm  . iBossID  == - 1){
#line 476 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_penBoss  = NULL ;
#line 477 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else {
#line 478 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
_pNetwork  -> ga_World  . EntityExists  (encm  . iBossID  , penEntity );
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_penBoss  = penEntity ;
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 481 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(encm  . iCounterID  == - 1){
#line 482 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_penCounter  = NULL ;
#line 483 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else {
#line 484 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
_pNetwork  -> ga_World  . EntityExists  (encm  . iCounterID  , penEntity );
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_penCounter  = penEntity ;
#line 486 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 488 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
UnsetTimer();Jump(STATE_CURRENT,0x00de0007, FALSE, EInternal());return TRUE;
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}return TRUE;}BOOL CMusicHolder::H0x00de0007_Main_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0007

#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(_pNetwork  -> IsServer  ()){
#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CheckOldFussMakers  ();
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT fFussScore  = GetFussMakersScore  ();
#line 497 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
MusicType  mtOldMusic  = m_mtCurrentMusic ;
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_mtCurrentMusic  == MT_EVENT ){
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(! m_soMusic3a  . IsPlaying  () && ! m_soMusic3b  . IsPlaying  ()){
#line 504 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = MT_LIGHT ;
#line 505 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_mtCurrentMusic  == MT_HEAVY ){
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fFussScore  <= 0.0f){
#line 512 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = MT_LIGHT ;
#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 515 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_MEDIUM ){
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fFussScore  <= 0.0f){
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = MT_LIGHT ;
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(fFussScore  >= m_fScoreHeavy ){
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = MT_HEAVY ;
#line 524 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 526 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_LIGHT ){
#line 528 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(fFussScore  >= m_fScoreHeavy ){
#line 530 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = MT_HEAVY ;
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(fFussScore  >= m_fScoreMedium ){
#line 534 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_mtCurrentMusic  = MT_MEDIUM ;
#line 535 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 538 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
FLOAT tmNow  = _pTimer  -> GetHighPrecisionTimer  () . GetSeconds  ();
#line 539 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if((tmNow  - m_tmLastUpdate ) > 4 * _pTimer  -> TickQuantum ){
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
ENetChangeMusic  encm ;
#line 541 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
encm  . mtType  = m_mtCurrentMusic ;
#line 542 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(((CEntity  *) m_penBoss ) == NULL ){
#line 543 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
encm  . iBossID  = - 1;
#line 544 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else {
#line 545 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
encm  . iBossID  = m_penBoss  -> en_ulID ;
#line 546 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 547 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(((CEntity  *) m_penCounter ) == NULL ){
#line 548 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
encm  . iCounterID  = - 1;
#line 549 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else {
#line 550 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
encm  . iCounterID  = m_penCounter  -> en_ulID ;
#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 552 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
SendEvent  (encm  , TRUE );
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_tmLastUpdate  = tmNow ;
#line 554 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 555 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
if(m_mtCurrentMusic  == MT_LIGHT ){
#line 559 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_tmFade  = 2.0f;
#line 560 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_MEDIUM ){
#line 561 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_tmFade  = 1.0f;
#line 562 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_HEAVY ){
#line 563 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_tmFade  = 1.0f;
#line 564 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}else if(m_mtCurrentMusic  == MT_EVENT  || m_mtCurrentMusic  == MT_CONTINUOUS ){
#line 565 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
m_tmFade  = 0.5f;
#line 566 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}
#line 569 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_LIGHT );
#line 570 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_MEDIUM );
#line 571 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_HEAVY );
#line 572 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_EVENT );
#line 573 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
CrossFadeOneChannel  (MT_CONTINUOUS );Jump(STATE_CURRENT,0x00de0008, FALSE, EInternal());return TRUE;
#line 574 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
}BOOL CMusicHolder::H0x00de0009_Main_08(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00de0009

#line 575 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
Return(STATE_CURRENT,EVoid());
#line 575 "E:/질산/Korea/Client_USA/EntitiesMP/MusicHolder.es"
return TRUE; ASSERT(FALSE); return TRUE;};