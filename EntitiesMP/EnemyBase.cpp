/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"

#include "StdH.h"
#include "EntitiesMP/Common/PathFinding.h"
#include "EntitiesMP/NavigationMarker.h"
#include "EntitiesMP/TacticsHolder.h"

#include "EntitiesMP/MovingBrush.h"
#include "EntitiesMP/DestroyableArchitecture.h"

//안태훈 수정 시작	//(Add & Modify SSSE Effect)(0.1)
#include <Engine/Effect/EffectCommon.h>
#include <Engine/Effect/CWorldTag.h>
#include <Engine/Effect/CEffectGroupManager.h>
#include <Engine/Base/Timer.h>
//안태훈 수정 끝	//(Add & Modify SSSE Effect)(0.1)

//extern void JumpFromBouncer(CEntity *penToBounce, CEntity *penBouncer);
extern INDEX ent_bReportBrokenChains;
extern INDEX dbg_bShowEnemyBodyPoint;
extern INDEX gam_iBlood;
extern INDEX gam_bGibs;

#include <EntitiesMP/EnemyBase.h>
#include <EntitiesMP/EnemyBase_tables.h>
CEntityEvent *EReconsiderBehavior::MakeCopy(void) { CEntityEvent *peeCopy = new EReconsiderBehavior(*this); return peeCopy;}
SLONG EReconsiderBehavior::GetSizeOf(void) { return sizeof(*this);}
EReconsiderBehavior::EReconsiderBehavior() : CEntityEvent(EVENTCODE_EReconsiderBehavior) {;
};
BOOL EReconsiderBehavior::CheckIDs(void) { return TRUE ; }
CEntityEvent *EForceWound::MakeCopy(void) { CEntityEvent *peeCopy = new EForceWound(*this); return peeCopy;}
SLONG EForceWound::GetSizeOf(void) { return sizeof(*this);}
EForceWound::EForceWound() : CEntityEvent(EVENTCODE_EForceWound) {;
};
BOOL EForceWound::CheckIDs(void) { return TRUE ; }
CEntityEvent *EEnemyBaseDeath::MakeCopy(void) { CEntityEvent *peeCopy = new EEnemyBaseDeath(*this); return peeCopy;}
SLONG EEnemyBaseDeath::GetSizeOf(void) { return sizeof(*this);}
EEnemyBaseDeath::EEnemyBaseDeath() : CEntityEvent(EVENTCODE_EEnemyBaseDeath) {;
 ClearToDefault(eidInflictor);
};
BOOL EEnemyBaseDeath::CheckIDs(void) { return TRUE && eidInflictor.IsValid(); }
CEntityEvent *EEnemyBaseDamage::MakeCopy(void) { CEntityEvent *peeCopy = new EEnemyBaseDamage(*this); return peeCopy;}
SLONG EEnemyBaseDamage::GetSizeOf(void) { return sizeof(*this);}
EEnemyBaseDamage::EEnemyBaseDamage() : CEntityEvent(EVENTCODE_EEnemyBaseDamage) {;
 ClearToDefault(eidInflictor);
 ClearToDefault(vDirection);
 ClearToDefault(vHitPoint);
 ClearToDefault(fAmount);
 ClearToDefault(dmtType);
 ClearToDefault(fHealth);
};
BOOL EEnemyBaseDamage::CheckIDs(void) { return TRUE && eidInflictor.IsValid(); }
CEntityEvent *EBlowUp::MakeCopy(void) { CEntityEvent *peeCopy = new EBlowUp(*this); return peeCopy;}
SLONG EBlowUp::GetSizeOf(void) { return sizeof(*this);}
EBlowUp::EBlowUp() : CEntityEvent(EVENTCODE_EBlowUp) {;
 ClearToDefault(vDamage);
 ClearToDefault(vTranslation);
};
BOOL EBlowUp::CheckIDs(void) { return TRUE ; }
void CEnemyBase::SetDefaultProperties(void) {
  m_penWatcher = NULL;
  m_vStartPosition = FLOAT3D(0 , 0 , 0);
  m_penEnemy = NULL;
  m_strDescription = "Enemy base";
  m_strName = "Enemy base";
  m_soSound.SetOwner(this);
m_soSound.Stop(FALSE);
  m_vDamage = FLOAT3D(0 , 0 , 0);
  m_tmLastDamage = -1000.0f;
  m_bRobotBlowup = FALSE ;
  m_fBlowUpSize = 2.0f;
  m_penPathMarker = NULL;
  m_vPlayerSpotted = FLOAT3D(0 , 0 , 0);
  m_fLockStartTime = 0.0f;
  m_fRangeLast = 0.0f;
  m_bFadeOut = FALSE ;
  m_fFadeStartTime = 0.0f;
  m_fFadeTime = 0.0f;
  m_penSpawnerTarget = NULL;
  m_penDeathTarget = NULL;
  m_eetDeathType = EET_TRIGGER ;
  m_bTemplate = FALSE ;
  m_colColor = 0x00;
  m_bDeaf = FALSE ;
  m_bBlind = FALSE ;
  m_tmGiveUp = 5.0f;
  m_tmReflexMin = 0.0f;
  m_tmReflexMax = 0.0f;
  m_bApplyRandomStretch = FALSE ;
  m_fRandomStretchFactor = 0.1f;
  m_fStretchMultiplier = 1.0f;
  m_fRandomStretchMultiplier = 1.0f;
  m_penMarker = NULL;
  m_penMainMusicHolder = NULL;
  m_tmLastFussTime = 0.0f;
  m_bBoss = FALSE ;
  m_fSpiritStartTime = 0.0f;
  m_tmSpraySpawned = 0.0f;
  m_fSprayDamage = 0.0f;
  m_penSpray = NULL;
  m_fMaxDamageAmmount = 0.0f;
  m_vLastStain = FLOAT3D(0 , 0 , 0);
  m_sptType = SPT_LAVA_STONES ;
  m_penTacticsHolder = NULL;
  m_bTacticActive = FALSE ;
  m_tmTacticsActivation = 0.0f;
  m_vTacticsStartPosition = FLOAT3D(0 , 0 , 0);
  m_fTacticVar3 = 0.0f;
  m_fTacticVar4 = 0.0f;
  m_fTacticVar5 = 0.0f;
  m_bTacticsStartOnSense = FALSE ;
  m_colBurning = COLOR(C_WHITE  | CT_OPAQUE );
  m_bResizeAttachments = FALSE ;
  m_tmStopJumpAnim = 0.0f;
  m_bMoving = FALSE ;
  m_fAttackStartTime = 0.0f;
  m_fAttackFrequency = 0.0f;
  m_bStop = FALSE ;
  m_fImpactTime = 0.0f;
  m_bNpc = FALSE ;
  m_nAttackCnt = 0;
  m_penKillEnemy = NULL;
  CUnit::SetDefaultProperties();
}
   CEnemyBase::CEnemyBase(void) 
#line 192 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 193 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  CTString CEnemyBase::GetPlayerKillDescription(const CTString & strPlayerName,const EDeath & eDeath) 
#line 197 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CTString str ;
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
str  . PrintF  (TRANS  ("%s killed %s") , GetClass  () -> ec_pdecDLLClass  -> dec_strName  , strPlayerName );
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return str ;
#line 201 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  FLOAT CEnemyBase::GetCrushHealth(void) 
#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return 0.0f;
#line 206 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  FLOAT & CEnemyBase::GetProp(FLOAT & m_fBase) 
#line 210 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return m_fBase ;
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::MaybeSwitchToAnotherPlayer(void) 
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(GetSP  () -> sp_bSinglePlayer )
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(CalcDist  (m_penEnemy ) < GetThreatDistance  ())
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 234 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntity  * penNewEnemy  = GetWatcher  () -> CheckAnotherPlayer  (m_penEnemy );
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(penNewEnemy  != m_penEnemy  && penNewEnemy  != NULL )
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penEnemy  = penNewEnemy ;
#line 238 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::AssignWatcher(CEntity * penWatcher) 
#line 244 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ASSERT  (penWatcher  != NULL );
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penWatcher  = penWatcher ;
#line 247 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 249 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
class CWatcher * CEnemyBase::GetWatcher(void) 
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 252 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return (CWatcher  *) & * m_penWatcher ;
#line 253 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::Copy(CEntity & enOther,ULONG ulFlags) 
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: Copy  (enOther  , ulFlags );
#line 258 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEnemyBase  * penOther  = (CEnemyBase  *) (& enOther );
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 261 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::Precache(void) 
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH );
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH_APPLE );
#line 265 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH_BANANA );
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_FLESH_BURGER );
#line 267 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheModel  (MODEL_MACHINE );
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_MACHINE );
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_RED );
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_GREEN );
#line 271 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_APPLE );
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_BANANA );
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_BURGER );
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_LOLLY );
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheTexture  (TEXTURE_FLESH_ORANGE );
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODSPILL );
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODSTAIN );
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODSTAINGROW );
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BLOODEXPLODE );
#line 280 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_BOMB );
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_EXPLOSIONSTAIN );
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_DEBRIS );
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PrecacheClass  (CLASS_WATCHER );
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  FLOAT3D CEnemyBase::PlayerDestinationPos(void) 
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 289 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IfTargetCrushed(CEntity * penOther,const FLOAT3D & vDirection) 
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 294 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsOfClass  (penOther  , & CModelHolder2_DLLClass ) 
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
|| IsOfClass  (penOther  , & CModelHolder3_DLLClass ))
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fCrushHealth  = GetCrushHealth  ();
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fCrushHealth  > ((CRationalEntity  &) * penOther ) . GetHealth  ())
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
InflictDirectDamage  (penOther  , this  , 
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
DMT_EXPLOSION  , fCrushHealth  , GetPlacement  () . pl_PositionVector  , vDirection );
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::IsSkillAttack() 
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 311 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::IsBossMob() 
#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::MovementAnimation(ULONG ulFlags) 
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(ulFlags  & MF_MOVEZ )
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fMoveSpeed  == GetProp  (m_fAttackRunSpeed ) || 
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  == GetProp  (m_fCloseRunSpeed ) || 
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  > GetProp  (m_fWalkSpeed ))
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
RunningAnim  ();
#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 330 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
WalkingAnim  ();
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 334 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 335 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(ulFlags  & MF_ROTATEH )
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bAttack )
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 339 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AttackAnim  ();
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
RotatingAnim  ();
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL )
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bAttack )
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AttackAnim  ();
#line 353 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 356 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 359 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::MovesByTargetedRoute(CTString & strTargetProperty)const {
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
strTargetProperty  = "Marker";
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 371 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::DropsMarker(CTFileName & fnmMarkerClass,CTString & strTargetProperty)const 
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fnmMarkerClass  = CTFILENAME  ("Classes\\EnemyMarker.ecl");
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
strTargetProperty  = "Marker";
#line 377 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
const CTString & CEnemyBase::GetDescription(void)const 
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
((CTString &) m_strDescription ) . PrintF  ("-><none>");
#line 382 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penMarker  != NULL ){
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
((CTString &) m_strDescription ) . PrintF  ("->%s" , m_penMarker  -> GetName  ());
#line 384 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return m_strDescription ;
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  const CTFileName & CEnemyBase::GetComputerMessageName(void)const 
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
static CTFileName fnm  (CTString (""));
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return fnm ;
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::Read_t(CTStream * istr,BOOL bNetwork) 
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: Read_t  (istr  , bNetwork );
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  != NULL )
#line 401 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . Add  (this );
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 404 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 407 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::FillEntityStatistics(EntityStats * pes) 
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
pes  -> es_strName  = GetClass  () -> ec_pdecDLLClass  -> dec_strName ;
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bTemplate )
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
pes  -> es_ctCount  = 0;
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
pes  -> es_ctCount  = 1;
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
pes  -> es_ctAmmount  = 1;
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
pes  -> es_fValue  = GetHealth  ();
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 425 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 426 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 427 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(dmtType  == DMT_BURNING ){return ;}
#line 433 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bTemplate )
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 436 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 437 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fNewDamage  = fDamageAmmount ;
#line 446 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fNewDamage  == 0)
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetHealth  (1000.0f);
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fKickDamage  = fNewDamage ;
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if((dmtType  == DMT_EXPLOSION ) || (dmtType  == DMT_IMPACT ))
#line 456 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fKickDamage  *= 1.5;
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(dmtType  == DMT_DROWNING  || dmtType  == DMT_CLOSERANGE  || dmtType  == DMT_CHAINSAW )
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fKickDamage  /= 10;
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(dmtType  == DMT_BURNING )
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 465 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fKickDamage  /= 100000;
#line 466 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UBYTE  ubR  , ubG  , ubB  , ubA ;
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fColorFactor  = fNewDamage  / m_fMaxHealth  * 255.0f;
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ColorToRGBA  (m_colBurning  , ubR  , ubG  , ubB  , ubA );
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ubR  = ClampDn  (ubR  - fColorFactor  , 32.0f);
#line 470 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_colBurning  = RGBAToColor  (ubR  , ubR  , ubR  , ubA );
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(dmtType  == DMT_NONE )
#line 473 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fKickDamage  /= 100000;
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 478 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
TIME  tmNow  = _pTimer  -> CurrentTick  ();
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
TIME  tmDelta  = tmNow  - m_tmLastDamage ;
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmLastDamage  = tmNow ;
#line 483 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(tmDelta  >= _pTimer  -> TickQuantum  * 3)
#line 484 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDamage  = FLOAT3D (0 , 0 , 0);
#line 486 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 488 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vDirectionFixed ;
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(vDirection  . ManhattanNorm  () > 0.5f)
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vDirectionFixed  = vDirection ;
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 495 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vDirectionFixed  = - en_vGravityDir ;
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 497 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vDamageOld  = m_vDamage ;
#line 503 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 504 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDamage  += (vDirectionFixed  - en_vGravityDir  / 2) * fKickDamage ;
#line 505 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fOldLen  = vDamageOld  . Length  ();
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fNewLen  = m_vDamage  . Length  ();
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fOldRootLen  = Sqrt  (fOldLen );
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fNewRootLen  = Sqrt  (fNewLen );
#line 512 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fMassFactor  = 300.0f / ((EntityInfo  *) GetEntityInfo  ()) -> fMass ;
#line 514 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! (en_ulFlags  & ENF_ALIVE ))
#line 515 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fMassFactor  /= 3;
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fOldLen  != 0.0f)
#line 520 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GiveImpulseTranslationAbsolute  (- vDamageOld  / fOldRootLen  * fMassFactor );
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 528 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GiveImpulseTranslationAbsolute  (m_vDamage  / fNewRootLen  * fMassFactor );
#line 530 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fMaxDamageAmmount  < fDamageAmmount )
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMaxDamageAmmount  = fDamageAmmount ;
#line 533 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if((m_tmSpraySpawned  <= _pTimer  -> CurrentTick  () - _pTimer  -> TickQuantum  * 8 || 
#line 537 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSprayDamage  + fNewDamage  > 50.0f) 
#line 538 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
&& m_fSpiritStartTime  == 0 && 
#line 539 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
dmtType  != DMT_CHAINSAW  && 
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
! (dmtType  == DMT_BURNING  && GetHealth  () < 0))
#line 541 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 543 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPlacement3D plSpray  = CPlacement3D (vHitPoint  , ANGLE3D (0 , 0 , 0));
#line 544 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 545 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_sptType  != SPT_ELECTRICITY_SPARKS )
#line 546 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 547 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penSpray  -> SetParent  (this );
#line 548 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 550 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ESpawnSpray  eSpawnSpray ;
#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fMaxDamageAmmount  > 10.0f)
#line 554 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 555 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 3.0f;
#line 556 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 557 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(m_fSprayDamage  + fNewDamage  > 50.0f)
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 559 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 560 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 561 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 562 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 563 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 564 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 566 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . sptType  = m_sptType ;
#line 567 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 570 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vHitPointRelative  = vHitPoint  - GetPlacement  () . pl_PositionVector ;
#line 571 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vReflectingNormal ;
#line 572 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetNormalComponent  (vHitPointRelative  , en_vGravityDir  , vReflectingNormal );
#line 573 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vReflectingNormal  . SafeNormalize  ();
#line 575 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vReflectingNormal  (1) /= 5.0f;
#line 577 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vProjectedComponent  = vReflectingNormal  * (vDirection  % vReflectingNormal );
#line 578 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vSpilDirection  = vDirection  - vProjectedComponent  * 2.0f - en_vGravityDir  * 0.5f;
#line 580 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . vDirection  = vSpilDirection ;
#line 581 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . eidOwner  = this ;
#line 584 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penSpray  -> Initialize  (eSpawnSpray  , FALSE );
#line 585 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmSpraySpawned  = _pTimer  -> CurrentTick  ();
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSprayDamage  = 0.0f;
#line 587 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMaxDamageAmmount  = 0.0f;
#line 588 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 589 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSprayDamage  += fNewDamage ;
#line 591 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CMovableModelEntity  :: ReceiveDamage  (penInflictor  , 
#line 592 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
dmtType  , fNewDamage  , vHitPoint  , vDirection );
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 600 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 601 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 602 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
colAmbient  = AddColors  (colAmbient  , m_colColor );
#line 603 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bFadeOut )
#line 604 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 605 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fTimeRemain  = m_fFadeStartTime  + m_fFadeTime  - _pTimer  -> CurrentTick  ();
#line 606 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fTimeRemain  < 0.0f){fTimeRemain  = 0.0f;}
#line 607 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
COLOR colAlpha ;
#line 608 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL )
#line 609 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 610 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
colAlpha  = GetModelInstance  () -> GetModelColor  ();
#line 611 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
colAlpha  = (colAlpha  & 0xFFFFFF00) + (COLOR (fTimeRemain  / m_fFadeTime  * 0xFF) & 0xFF);
#line 612 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> SetModelColor  (colAlpha );
#line 613 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 614 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 615 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 616 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
colAlpha  = GetModelObject  () -> mo_colBlendColor ;
#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
colAlpha  = (colAlpha  & 0xFFFFFF00) + (COLOR (fTimeRemain  / m_fFadeTime  * 0xFF) & 0xFF);
#line 618 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetModelObject  () -> mo_colBlendColor  = colAlpha ;
#line 619 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 620 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 669 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_colBurning  != COLOR (C_WHITE  | CT_OPAQUE ))
#line 670 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 671 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
colAmbient  = MulColors  (colAmbient  , m_colBurning );
#line 672 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
colLight  = MulColors  (colLight  , m_colBurning );
#line 673 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 675 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 676 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 680 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::AddToFuss(void) 
#line 681 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 683 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  == NULL )
#line 684 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 688 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  == NULL )
#line 689 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 691 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmLastFussTime  = _pTimer  -> CurrentTick  ();
#line 693 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 694 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 696 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . Add  (this );
#line 698 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bBoss ){
#line 699 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_penBoss  = this ;
#line 700 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 702 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmLastFussTime  = _pTimer  -> CurrentTick  ();
#line 705 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 706 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 707 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 709 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ASSERT  (((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . IsMember  (this ));
#line 711 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmLastFussTime  = _pTimer  -> CurrentTick  ();
#line 712 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 713 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 714 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::RemoveFromFuss(void) 
#line 715 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 717 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penMainMusicHolder  == NULL )
#line 718 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 720 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 721 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 723 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
((CMusicHolder  &) * m_penMainMusicHolder ) . m_cenFussMakers  . Remove  (this );
#line 724 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penMainMusicHolder  = NULL ;
#line 725 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 729 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::ShouldCeaseAttack(void) 
#line 730 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 732 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL  || 
#line 733 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
! (m_penEnemy  -> GetFlags  () & ENF_ALIVE ) || 
#line 734 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
(m_penEnemy  -> GetFlags  () & ENF_DELETED ))
#line 735 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 737 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 738 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 740 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 741 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::SizeModel(void) 
#line 745 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 746 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vStretch  = GetModelStretch  ();
#line 749 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vStretch  *= m_fStretchMultiplier ;
#line 752 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bApplyRandomStretch )
#line 753 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 755 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bApplyRandomStretch  = FALSE ;
#line 757 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fRandomStretchMultiplier  = (FRnd  () - 0.5f) * m_fRandomStretchFactor  + 1.0f;
#line 758 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 761 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vStretch  *= m_fRandomStretchMultiplier ;
#line 763 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bResizeAttachments )
#line 764 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 765 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StretchModel  (vStretch );
#line 766 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 767 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(TRUE )
#line 768 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 769 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StretchSingleModel  (vStretch );
#line 770 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 771 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ModelChangeNotify  ();
#line 772 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 775 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::SetTargetNone(void) 
#line 776 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 777 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_NONE ;
#line 778 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 779 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penEnemy  = NULL ;
#line 780 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 783 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetTargetSoft(CEntity * penPlayer) 
#line 784 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 786 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! IsValidForEnemy  (penPlayer ))
#line 787 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 789 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 790 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 792 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_ttTarget  != TT_NONE )
#line 793 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 795 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 796 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 798 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntity  * penOld  = m_penEnemy ;
#line 799 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_SOFT ;
#line 800 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 801 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penEnemy  = penPlayer ;
#line 802 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return penOld  != penPlayer ;
#line 803 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 806 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetTargetHard(CEntity * penPlayer) 
#line 807 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 809 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! IsValidForEnemy  (penPlayer ))
#line 810 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 812 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 813 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 815 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_ttTarget  == TT_HARD )
#line 816 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 818 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 819 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 821 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntity  * penOld  = m_penEnemy ;
#line 822 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_HARD ;
#line 823 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 824 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penEnemy  = penPlayer ;
#line 825 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return penOld  != penPlayer ;
#line 826 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 829 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetTargetHardForce(CEntity * penPlayer) 
#line 830 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 833 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! IsValidForEnemy  (penPlayer ))
#line 834 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 835 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! (penPlayer  -> IsCharacter  ()))
#line 836 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 838 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 839 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 840 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 842 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntity  * penOld  = m_penEnemy ;
#line 843 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_ttTarget  = TT_HARD ;
#line 844 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 845 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penEnemy  = penPlayer ;
#line 846 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return penOld  != penPlayer ;
#line 847 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 849 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetTargetEntity(CEntity * penPlayer) 
#line 850 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 851 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penEnemy  = penPlayer ;
#line 853 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 854 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 856 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SetKillTargetEntity(CEntity * penKill) 
#line 857 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 858 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penKillEnemy  = penKill ;
#line 860 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 861 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 863 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::SetNoTargetEntity(void) 
#line 864 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 865 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penEnemy  = NULL ;
#line 866 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  FLOAT CEnemyBase::GetAttackMoveFrequency(FLOAT fEnemyDistance) 
#line 875 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 876 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fEnemyDistance  > GetProp  (m_fCloseDistance ))
#line 877 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 878 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return 0.5f;
#line 879 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 880 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 881 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 882 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return 0.25f;
#line 883 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 884 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::SetSpeedsToDesiredPosition(
#line 888 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
const FLOAT3D & vPosDelta,
#line 889 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fPosDist,
#line 890 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL bGoingToPlayer) 
#line 891 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 893 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fCloseDistance  = GetProp  (m_fCloseDistance );
#line 894 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fStopDistance  = GetProp  (m_fStopDistance );
#line 896 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fCos  = GetPlaneFrustumAngle  (vPosDelta );
#line 899 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fCos  > CosFast  (45.0f) && 
#line 901 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fPosDist  > fStopDistance )
#line 902 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 904 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fPosDist  < fCloseDistance )
#line 905 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 906 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fCloseRunSpeed );
#line 907 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aCloseRotateSpeed );
#line 908 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 909 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 910 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 911 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fAttackRunSpeed );
#line 912 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aAttackRotateSpeed );
#line 913 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 914 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 916 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(fCos  < CosFast  (15.0f))
#line 917 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 919 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = 0;
#line 920 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(fPosDist  < fCloseDistance )
#line 921 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 922 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aCloseRotateSpeed );
#line 923 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 924 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 925 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 926 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aAttackRotateSpeed );
#line 927 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 928 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 931 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 932 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 934 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(bGoingToPlayer )
#line 935 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 937 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = 0;
#line 938 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = 0;
#line 941 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 942 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 943 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 944 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = GetProp  (m_fCloseRunSpeed );
#line 945 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = GetProp  (m_aCloseRotateSpeed );
#line 946 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 947 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 948 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 954 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::CanAttackEnemy(CEntity * penTarget,FLOAT fCosAngle) {
#line 955 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsInPlaneFrustum  (penTarget  , fCosAngle ))
#line 956 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 957 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> m_bSingleMode )
#line 958 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 959 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return IsVisibleCheckAll  (penTarget );
#line 960 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 961 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 962 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 963 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 964 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 965 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 966 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 967 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::CanHitEnemy(CEntity * penTarget,FLOAT fCosAngle) {
#line 971 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsInFrustum  (penTarget  , fCosAngle ))
#line 972 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 973 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> m_bSingleMode )
#line 974 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 975 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return IsVisibleCheckAll  (penTarget );
#line 976 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 977 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 978 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 979 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 980 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 981 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 982 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 983 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 986 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SeeEntity(CEntity * pen,FLOAT fCosAngle) {
#line 987 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsInFrustum  (pen  , fCosAngle )){
#line 988 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return IsVisible  (pen );
#line 989 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 990 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 991 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 994 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::SeeEntityInPlane(CEntity * pen,FLOAT fCosAngle) {
#line 995 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CalcPlaneDist  (pen );
#line 996 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsInPlaneFrustum  (pen  , fCosAngle )){
#line 997 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return IsVisible  (pen );
#line 998 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 999 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1000 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1002 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::WouldNotLeaveAttackRadius(void) 
#line 1003 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1004 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fAttackRadius  <= 0)
#line 1005 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1006 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1007 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1009 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL bInsideNow  = (m_vStartPosition  - GetPlacement  () . pl_PositionVector ) . Length  () < m_fAttackRadius ;
#line 1011 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL bEnemyTowardsCenter  = 
#line 1012 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
(m_vStartPosition  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ) . Length  () < 
#line 1013 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
(GetPlacement  () . pl_PositionVector  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ) . Length  ();
#line 1014 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return bInsideNow  || bEnemyTowardsCenter ;
#line 1015 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::MayMoveToAttack(void) 
#line 1019 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1021 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CMovableEntity  * pen  = (CMovableEntity  *) & * m_penEnemy ;
#line 1022 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CContentType  & ctUp  = pen  -> en_pwoWorld  -> wo_actContentTypes  [ pen  -> en_iUpContent  ];
#line 1023 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL bEnemyDiving  = ! (ctUp  . ct_ulFlags  & CTF_BREATHABLE_LUNGS );
#line 1025 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return WouldNotLeaveAttackRadius  () && ! bEnemyDiving ;
#line 1026 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  BOOL CEnemyBase::ShouldBlowUp(void) 
#line 1035 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1037 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return 
#line 1038 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
! (GetSP  () -> sp_bCooperative  && ! GetSP  () -> sp_bSinglePlayer ) && 
#line 1039 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
gam_bGibs  && 
#line 1040 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetHealth  () <= 0 && 
#line 1041 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDamage  . Length  () > m_fBlowUpAmount  && 
#line 1042 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSpiritStartTime  == 0;
#line 1043 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1047 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::BlowUpBase(void) 
#line 1048 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1053 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::BlowUp(void) 
#line 1058 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1060 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BlowUpNotify  ();
#line 1061 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> IsServer  ())
#line 1062 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1063 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPlacement3D plSpeed ;
#line 1064 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
plSpeed  . pl_PositionVector  = en_vCurrentTranslationAbsolute ;
#line 1065 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
plSpeed  . pl_OrientationAngle  = en_aCurrentRotationAbsolute ;
#line 1066 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AdjustDeadReckoning  (en_plPlacement  , plSpeed  , _pTimer  -> CurrentTick  ());
#line 1067 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1069 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vNormalizedDamage  = m_vDamage  - m_vDamage  * (m_fBlowUpAmount  / m_vDamage  . Length  ());
#line 1070 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vNormalizedDamage  /= Sqrt  (vNormalizedDamage  . Length  ());
#line 1071 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vNormalizedDamage  *= 0.75f;
#line 1072 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vBodySpeed  = en_vCurrentTranslationAbsolute  - en_vGravityDir  * (en_vGravityDir  % en_vCurrentTranslationAbsolute );
#line 1075 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! (GetSP  () -> sp_bCooperative  && ! GetSP  () -> sp_bSinglePlayer ) && gam_bGibs  && ! m_bRobotBlowup )
#line 1076 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1078 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
gam_iBlood  = Clamp  (gam_iBlood  , (INDEX) 0 , (INDEX) 3);
#line 1080 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ULONG  ulFleshTexture  = TEXTURE_FLESH_GREEN ;
#line 1081 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ULONG  ulFleshModel  = MODEL_FLESH ;
#line 1082 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(gam_iBlood  == 2){ulFleshTexture  = TEXTURE_FLESH_RED ;}
#line 1084 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Debris_Begin  (EIBT_FLESH  , DPT_BLOODTRAIL  , BET_BLOODSTAIN  , m_fBlowUpSize  , vNormalizedDamage  , vBodySpeed  , 1.0f , 0.0f);
#line 1085 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
for(INDEX iDebris  = 0;iDebris  < m_fBodyParts ;iDebris  ++)
#line 1086 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1088 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(gam_iBlood  == 3)
#line 1089 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1090 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
switch(IRnd  () % 5)
#line 1091 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1092 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
case 1: {ulFleshModel  = MODEL_FLESH_APPLE ;ulFleshTexture  = TEXTURE_FLESH_APPLE ;break ;}
#line 1093 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
case 2: {ulFleshModel  = MODEL_FLESH_BANANA ;ulFleshTexture  = TEXTURE_FLESH_BANANA ;break ;}
#line 1094 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
case 3: {ulFleshModel  = MODEL_FLESH_BURGER ;ulFleshTexture  = TEXTURE_FLESH_BURGER ;break ;}
#line 1095 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
case 4: {ulFleshModel  = MODEL_FLESH_LOLLY ;ulFleshTexture  = TEXTURE_FLESH_LOLLY ;break ;}
#line 1096 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
default  :{ulFleshModel  = MODEL_FLESH_ORANGE ;ulFleshTexture  = TEXTURE_FLESH_ORANGE ;break ;}
#line 1097 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1098 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1099 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Debris_Spawn  (this  , this  , ulFleshModel  , ulFleshTexture  , 0 , 0 , 0 , IRnd  () % 4 , 0.5f , 
#line 1100 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D (FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f));
#line 1101 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1104 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1107 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! (GetSP  () -> sp_bCooperative  && ! GetSP  () -> sp_bSinglePlayer ) && gam_bGibs  && m_bRobotBlowup )
#line 1108 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1110 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Debris_Begin  (EIBT_ROBOT  , DPR_SMOKETRAIL  , BET_EXPLOSIONSTAIN  , m_fBlowUpSize  , vNormalizedDamage  , vBodySpeed  , 1.0f , 0.0f);
#line 1111 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
for(INDEX iDebris  = 0;iDebris  < m_fBodyParts ;iDebris  ++)
#line 1112 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1113 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Debris_Spawn  (this  , this  , MODEL_MACHINE  , TEXTURE_MACHINE  , 0 , 0 , 0 , IRnd  () % 4 , 0.2f , 
#line 1114 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D (FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f , FRnd  () * 0.6f + 0.2f));
#line 1115 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1117 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPlacement3D plExplosion  = GetPlacement  ();
#line 1118 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntityPointer penExplosion  = CreateEntity  (plExplosion  , CLASS_BASIC_EFFECT  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 1119 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ESpawnEffect  eSpawnEffect ;
#line 1120 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnEffect  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1121 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnEffect  . betType  = BET_BOMB ;
#line 1122 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fSize  = m_fBlowUpSize  * 0.3f;
#line 1123 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnEffect  . vStretch  = FLOAT3D (fSize  , fSize  , fSize );
#line 1124 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
penExplosion  -> Initialize  (eSpawnEffect  , FALSE );
#line 1125 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1128 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SwitchToEditorModel  ();
#line 1129 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 1130 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 1131 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::LeaveStain(BOOL bGrow) 
#line 1140 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1141 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ESpawnEffect  ese ;
#line 1142 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vPoint ;
#line 1143 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOATplane3D vPlaneNormal ;
#line 1144 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fDistanceToEdge ;
#line 1146 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOATaabbox3D box ;
#line 1147 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetBoundingBox  (box );
#line 1150 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(GetNearestPolygon  (vPoint  , vPlaneNormal  , fDistanceToEdge ))
#line 1151 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1153 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if((vPoint  - GetPlacement  () . pl_PositionVector ) . Length  () < 0.5f 
#line 1154 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
&& (m_vLastStain  - vPoint ) . Length  () > 1.0f)
#line 1155 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1156 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vLastStain  = vPoint ;
#line 1157 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fStretch  = box  . Size  () . Length  ();
#line 1158 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 1160 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(bGrow )
#line 1161 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1162 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . betType  = BET_BLOODSTAINGROW ;
#line 1163 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . vStretch  = FLOAT3D (fStretch  * 1.5f , fStretch  * 1.5f , 1.0f);
#line 1164 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1165 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1166 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1167 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . betType  = BET_BLOODSTAIN ;
#line 1168 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . vStretch  = FLOAT3D (fStretch  * 0.75f , fStretch  * 0.75f , 1.0f);
#line 1169 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1170 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . vNormal  = FLOAT3D (vPlaneNormal );
#line 1171 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . vDirection  = FLOAT3D (0 , 0 , 0);
#line 1172 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vPos  = vPoint  + ese  . vNormal  / 50.0f * (FRnd  () + 0.5f);
#line 1173 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntityPointer penEffect  = CreateEntity  (CPlacement3D (vPos  , ANGLE3D (0 , 0 , 0)) , CLASS_BASIC_EFFECT  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 1174 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
penEffect  -> Initialize  (ese  , FALSE );
#line 1175 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1176 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1177 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::AdjustDifficulty(void) 
#line 1181 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1182 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fMoveSpeed  = GetSP  () -> sp_fEnemyMovementSpeed ;
#line 1183 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fAttackSpeed  = GetSP  () -> sp_fEnemyMovementSpeed ;
#line 1186 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fAttackRunSpeed  *= fMoveSpeed ;
#line 1187 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aAttackRotateSpeed  *= fMoveSpeed ;
#line 1188 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fCloseRunSpeed  *= fMoveSpeed ;
#line 1189 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aCloseRotateSpeed  *= fMoveSpeed ;
#line 1190 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fAttackFireTime  *= 1 / fAttackSpeed ;
#line 1191 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fCloseFireTime  *= 1 / fAttackSpeed ;
#line 1192 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1200 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::WoundedNotify(const EEnemyBaseDamage & eEBDamage) 
#line 1201 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1203 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL )
#line 1204 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1206 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 1207 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1210 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(eEBDamage  . dmtType  != DMT_CLOSERANGE  && eEBDamage  . dmtType  != DMT_CHAINSAW )
#line 1211 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1213 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ESound  eSound ;
#line 1214 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSound  . EsndtSound  = SNDT_YELL ;
#line 1215 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSound  . penTarget  = m_penEnemy ;
#line 1216 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEventInRange  (eSound  , FLOATaabbox3D (GetPlacement  () . pl_PositionVector  , 25.0f));
#line 1217 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1218 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1221 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::SeeNotify() 
#line 1222 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1224 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penEnemy  == NULL )
#line 1225 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1227 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 1228 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1230 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ESound  eSound ;
#line 1231 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSound  . EsndtSound  = SNDT_SHOUT ;
#line 1232 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSound  . penTarget  = m_penEnemy ;
#line 1233 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEventInRange  (eSound  , FLOATaabbox3D (GetPlacement  () . pl_PositionVector  , 50.0f));
#line 1234 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::ChargeAnim(void) {}
  INDEX CEnemyBase::AnimForDamage(FLOAT fDamage) {return 0;}
  void CEnemyBase::BlowUpNotify(void) {}
  INDEX CEnemyBase::AnimForDeath(void) {return 0;}
  FLOAT CEnemyBase::WaitForDust(FLOAT3D & vStretch) {return - 1;}
  void CEnemyBase::DeathNotify(void) {}
  void CEnemyBase::IdleSound(void) {}
  void CEnemyBase::SightSound(void) {}
  void CEnemyBase::WoundSound(void) {}
  void CEnemyBase::DeathSound(void) {}
  FLOAT CEnemyBase::GetLockRotationSpeed(void) {return 2000.0f;}
  void CEnemyBase::IdleLoop(void) {}
  
#line 1253 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::RenderParticles(void) 
#line 1254 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1256 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(GetRenderType  () != CEntity  :: RT_MODEL  && GetRenderType  () != CEntity  :: RT_SKAMODEL )
#line 1257 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1258 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 1259 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1261 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fSpiritStartTime  != 0.0f)
#line 1262 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1264 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
const FLOAT tmNow  = _pTimer  -> CurrentTick  ();
#line 1266 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Particles_Death  (this  , m_fSpiritStartTime );
#line 1267 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1268 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::EnemyPostInit(void) {}
  
#line 1275 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::HandleEvent(const CEntityEvent & ee) 
#line 1276 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1277 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(ee  . ee_slEvent  == EVENTCODE_ETouch )
#line 1278 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1279 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(GetCrushHealth  () != 0.0f)
#line 1280 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1281 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ETouch  eTouch  = ((ETouch  &) ee );
#line 1282 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsOfClass  (eTouch  . penOther  , & CModelHolder2_DLLClass ) 
#line 1283 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
|| IsOfClass  (eTouch  . penOther  , & CModelHolder3_DLLClass ) 
#line 1284 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
|| IsOfClass  (eTouch  . penOther  , & CMovingBrush_DLLClass ) 
#line 1285 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
|| IsOfClass  (eTouch  . penOther  , & CDestroyableArchitecture_DLLClass ))
#line 1286 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1287 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
InflictDirectDamage  (eTouch  . penOther  , this  , DMT_EXPLOSION  , GetCrushHealth  () , 
#line 1288 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eTouch  . penOther  -> GetPlacement  () . pl_PositionVector  , - (FLOAT3D &) eTouch  . plCollision );
#line 1289 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1290 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1291 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1293 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(ee  . ee_slEvent  == EVENTCODE_EEnemyBaseDamage )
#line 1294 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1295 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> IsServer  ())
#line 1296 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1297 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
en_fHealth  = ((const EEnemyBaseDamage  &) ee ) . fHealth ;
#line 1299 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1300 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1301 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(ee  . ee_slEvent  == EVENTCODE_EEnemyBaseDeath )
#line 1302 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1303 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! CMovableModelEntity  :: HandleEvent  (ee ))
#line 1304 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1305 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_ulFlags  & ENF_ALIVE )
#line 1306 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1307 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPrintF  (" Warning: enemy death event not handled! Entity ID: %ld\n" , en_ulID );
#line 1308 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> IsServer  ())
#line 1309 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1310 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Destroy  (FALSE );
#line 1311 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 1312 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1313 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1314 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1315 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE ;
#line 1316 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1317 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return CMovableModelEntity  :: HandleEvent  (ee );
#line 1318 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1321 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::GetAnimLength(int iAnim) 
#line 1322 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1323 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL ){
#line 1324 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return GetModelInstance  () -> GetAnimLength  (iAnim );
#line 1325 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else {
#line 1326 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> GetAnimLength  (iAnim );
#line 1327 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1328 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1331 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT CEnemyBase::GetCurrentAnimLength() 
#line 1332 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1333 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 1334 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return 0.5f;
#line 1335 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else {
#line 1336 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> GetCurrentAnimLength  ();
#line 1337 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1338 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1341 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BOOL CEnemyBase::IsAnimFinished() 
#line 1342 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1343 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL ){
#line 1344 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE ;
#line 1345 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else {
#line 1346 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> IsAnimFinished  ();
#line 1347 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1348 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1350 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D & CEnemyBase::GetModelStretch() 
#line 1351 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1352 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL )
#line 1353 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1354 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return GetModelInstance  () -> mi_vStretch ;
#line 1355 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1356 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1357 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1358 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return GetModelObject  () -> mo_Stretch ;
#line 1359 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1360 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1363 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::StretchModel(FLOAT3D vStretch) 
#line 1364 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1365 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL ){
#line 1366 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> StretchModel  (vStretch );
#line 1367 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else {
#line 1368 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetModelObject  () -> StretchModel  (vStretch );
#line 1369 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1370 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1373 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::StretchSingleModel(FLOAT3D vStretch) 
#line 1374 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1375 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_RenderType  == RT_SKAMODEL  || en_RenderType  == RT_SKAEDITORMODEL ){
#line 1376 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetModelInstance  () -> StretchSingleModel  (vStretch );
#line 1377 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else {
#line 1378 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetModelObject  () -> StretchSingleModel  (vStretch );
#line 1379 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1380 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1384 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SLONG CEnemyBase::GetUsedMemory(void) 
#line 1385 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1387 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SLONG  slUsedMemory  = sizeof  (CEnemyBase ) - sizeof  (CMovableModelEntity ) + CMovableModelEntity  :: GetUsedMemory  ();
#line 1389 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
slUsedMemory  += m_strDescription  . Length  ();
#line 1390 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
slUsedMemory  += m_strName  . Length  ();
#line 1391 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
slUsedMemory  += 1 * sizeof  (CSoundObject);
#line 1392 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return slUsedMemory ;
#line 1393 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1395 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::SpawnBlood_client(EEnemyBaseDamage eEBDamage) 
#line 1396 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1397 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fNewDamage  = eEBDamage  . fAmount ;
#line 1398 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
DamageType  dmtType  = eEBDamage  . dmtType ;
#line 1399 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vHitPoint  = eEBDamage  . vHitPoint ;
#line 1400 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vDirection  = eEBDamage  . vDirection ;
#line 1403 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if((m_tmSpraySpawned  <= _pTimer  -> CurrentTick  () - _pTimer  -> TickQuantum  * 8 || 
#line 1404 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSprayDamage  + fNewDamage  > 50.0f) 
#line 1405 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
&& m_fSpiritStartTime  == 0 && 
#line 1406 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
dmtType  != DMT_CHAINSAW  && 
#line 1407 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
! (dmtType  == DMT_BURNING  && GetHealth  () < 0))
#line 1408 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1411 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPlacement3D plSpray  = CPlacement3D (vHitPoint  , ANGLE3D (0 , 0 , 0));
#line 1412 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penSpray  = CreateEntity  (plSpray  , CLASS_BLOOD_SPRAY  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 1413 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_sptType  != SPT_ELECTRICITY_SPARKS )
#line 1414 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1415 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penSpray  -> SetParent  (this );
#line 1416 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1418 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ESpawnSpray  eSpawnSpray ;
#line 1419 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . colBurnColor  = C_WHITE  | CT_OPAQUE ;
#line 1421 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fMaxDamageAmmount  > 10.0f)
#line 1422 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1423 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 3.0f;
#line 1424 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1425 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(m_fSprayDamage  + fNewDamage  > 50.0f)
#line 1426 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1427 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 2.0f;
#line 1428 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1429 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1430 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1431 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fDamagePower  = 1.0f;
#line 1432 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1434 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . sptType  = m_sptType ;
#line 1435 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . fSizeMultiplier  = 1.0f;
#line 1438 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vHitPointRelative  = vHitPoint  - GetPlacement  () . pl_PositionVector ;
#line 1439 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vReflectingNormal ;
#line 1440 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetNormalComponent  (vHitPointRelative  , en_vGravityDir  , vReflectingNormal );
#line 1441 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vReflectingNormal  . SafeNormalize  ();
#line 1443 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vReflectingNormal  (1) /= 5.0f;
#line 1445 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vProjectedComponent  = vReflectingNormal  * (vDirection  % vReflectingNormal );
#line 1446 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vSpilDirection  = vDirection  - vProjectedComponent  * 2.0f - en_vGravityDir  * 0.5f;
#line 1448 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . vDirection  = vSpilDirection ;
#line 1450 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eSpawnSpray  . eidOwner  = this ;
#line 1453 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penSpray  -> Initialize  (eSpawnSpray  , FALSE );
#line 1454 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmSpraySpawned  = _pTimer  -> CurrentTick  ();
#line 1455 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSprayDamage  = 0.0f;
#line 1456 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMaxDamageAmmount  = 0.0f;
#line 1457 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1458 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSprayDamage  += fNewDamage ;
#line 1459 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1462 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::DeathNow() 
#line 1463 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1464 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bStop  = FALSE ;
#line 1465 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = FALSE ;
#line 1466 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = FALSE ;
#line 1467 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(GetFlags  () & ENF_ALIVE )
#line 1468 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1469 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EDeath  ());
#line 1470 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1471 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1473 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::MoveNow() 
#line 1474 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1475 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bStop  = FALSE ;
#line 1476 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = FALSE ;
#line 1477 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = TRUE ;
#line 1478 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 1479 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1480 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::AttackNow() 
#line 1481 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1484 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> m_bSingleMode )
#line 1485 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1486 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return ;
#line 1487 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1489 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bStop  = FALSE ;
#line 1490 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = TRUE ;
#line 1491 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = FALSE ;
#line 1492 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bSkilling  = FALSE ;
#line 1494 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_nAttackCnt  ++;
#line 1496 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 1497 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1499 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::StopNow() 
#line 1500 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1501 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bStop  = TRUE ;
#line 1502 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = FALSE ;
#line 1503 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = FALSE ;
#line 1504 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bSkilling  = FALSE ;
#line 1506 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 1507 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1509 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::SkillNow() 
#line 1510 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1511 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bStop  = FALSE ;
#line 1512 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = FALSE ;
#line 1513 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = FALSE ;
#line 1514 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bSkilling  = TRUE ;
#line 1516 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 1517 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  
#line 1519 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
void CEnemyBase::StopandTeleport() 
#line 1520 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1521 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vDeltaPlane  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 1522 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(vDeltaPlane  . Length  () > 0.5f)
#line 1523 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1524 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vDeltaPlane  (2) = 0;
#line 1525 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vWhere  = m_vDesiredPosition ;
#line 1526 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vWhere  (2) += 2.0f;
#line 1527 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
vDeltaPlane  . Normalize  ();
#line 1528 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPlacement3D plWhere  = CPlacement3D (vWhere  , ANGLE3D (vDeltaPlane  (1) , 0 , 0));
#line 1529 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
this  -> Teleport  (plWhere  , FALSE );
#line 1530 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1531 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1532 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1534 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1536 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = GetPlacement  () . pl_PositionVector ;
#line 1537 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopNow  ();
#line 1538 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 1539 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
  void CEnemyBase::DropDeathItem() {}
BOOL CEnemyBase::
#line 1553 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
NewEnemySpotted(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_NewEnemySpotted
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::NewEnemySpotted expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1556 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT tmReflex  = Lerp  (m_tmReflexMin  , m_tmReflexMax  , FRnd  ());
#line 1557 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
tmReflex  = ClampDn  (tmReflex  , 0.0f);
#line 1560 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(!(tmReflex  >= _pTimer  -> TickQuantum )){ Jump(STATE_CURRENT,0x01360008, FALSE, EInternal());return TRUE;}
#line 1563 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 1564 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 1567 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(tmReflex );
Jump(STATE_CURRENT, 0x01360006, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360006_NewEnemySpotted_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360006
switch(__eeInput.ee_slEvent)
#line 1568 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360007, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EDamage):{const EDamage&e= (EDamage&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):{const EEnemyBaseDamage&e= (EEnemyBaseDamage&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDeath):{const EEnemyBaseDeath&e= (EEnemyBaseDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;default:{return TRUE;}ASSERT(FALSE);break;
#line 1580 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360007_NewEnemySpotted_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360007
Jump(STATE_CURRENT,0x01360008, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360008_NewEnemySpotted_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360008

#line 1584 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SightSound  ();
#line 1587 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1587 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1591 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_StopAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::StopAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1593 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 1594 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1596 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStart  ());
#line 1597 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1599 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTargetNone  ();
#line 1600 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = 0.0f;
#line 1602 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 1604 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1604 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1608 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
InitializeAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_InitializeAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::InitializeAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1611 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bBlind  = FALSE ;
#line 1612 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bDeaf  = FALSE ;
#line 1614 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SeeNotify  ();
#line 1615 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 1616 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1617 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStop  ());
#line 1618 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1620 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AddToFuss  ();
#line 1622 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 1625 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(CalcDist  (m_penEnemy ) < GetProp  (m_fCloseDistance ))
#line 1626 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1627 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fShootTime  = 0.0f;
#line 1628 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1629 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1630 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1631 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + FRnd  ();
#line 1632 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1633 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 1635 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1635 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1640 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AttackEnemy(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_AttackEnemy
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::AttackEnemy expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1643 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_InitializeAttack, TRUE;
Jump(STATE_CURRENT, 0x0136000c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136000c_AttackEnemy_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_InitializeAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136000d, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136000d_AttackEnemy_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000d
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1647 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360010, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360010_AttackEnemy_05(const CEntityEvent &__eeInput)
#line 1648 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360010
if(!(m_penEnemy  != NULL )){ Jump(STATE_CURRENT,0x01360011, FALSE, EInternal());return TRUE;}
#line 1650 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_PerformAttack, TRUE;
Jump(STATE_CURRENT, 0x0136000e, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136000e_AttackEnemy_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_PerformAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136000f, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136000f_AttackEnemy_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136000f
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01360010, FALSE, EInternal());return TRUE;
#line 1651 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360011_AttackEnemy_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360011

#line 1655 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_StopAttack, TRUE;
Jump(STATE_CURRENT, 0x01360012, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360012_AttackEnemy_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360012
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_StopAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01360013, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360013_AttackEnemy_08(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360013
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1658 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EBegin  ());
#line 1658 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1663 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PerformAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_PerformAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::PerformAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1666 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fRangeLast  = 1E9f;
#line 1669 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 1670 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 1673 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360017, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360017_PerformAttack_03(const CEntityEvent &__eeInput)
#line 1674 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360017
if(!(TRUE )){ Jump(STATE_CURRENT,0x01360018, FALSE, EInternal());return TRUE;}
#line 1676 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(ShouldCeaseAttack  ())
#line 1677 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1679 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTargetNone  ();
#line 1680 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1680 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 1681 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1684 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fEnemyDistance  = CalcDist  (m_penEnemy );
#line 1686 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fRangeLast  > GetProp  (m_fCloseDistance ) && fEnemyDistance  <= GetProp  (m_fCloseDistance ))
#line 1687 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1689 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fShootTime  = 0.0f;
#line 1690 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1691 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fRangeLast  = fEnemyDistance ;
#line 1694 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveFrequency  = GetAttackMoveFrequency  (fEnemyDistance );
#line 1697 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(m_fMoveFrequency );
Jump(STATE_CURRENT, 0x01360015, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360015_PerformAttack_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360015
switch(__eeInput.ee_slEvent)
#line 1698 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_ETimer):
#line 1700 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const ETimer&e= (ETimer&)__eeInput;

#line 1701 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360016, FALSE, EInternal());return TRUE;
#line 1702 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EBegin):
#line 1705 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1707 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pTimer  -> CurrentTick  () > m_fShootTime )
#line 1708 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1710 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _cmiComm  . IsNetworkOn  ())
#line 1711 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1712 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 1713 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1715 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntity  * penNewEnemy  = GetWatcher  () -> CheckCloserPlayer  (m_penEnemy  , GetThreatDistance  ());
#line 1716 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(penNewEnemy  != NULL )
#line 1717 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1719 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTargetHardForce  (penNewEnemy );
#line 1721 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 1722 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360016, FALSE, EInternal());return TRUE;
#line 1723 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1724 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1725 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1728 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsVisible  (m_penEnemy ))
#line 1729 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1731 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 1733 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERSPOTTED  || m_dtDestination  == DT_PATHTEMPORARY ){
#line 1735 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 1736 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1739 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1740 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1741 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1743 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERCURRENT )
#line 1744 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1746 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERSPOTTED ;
#line 1747 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1748 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1750 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! IsSkillAttack  ())
#line 1751 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1753 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_FireOrHit, TRUE, EVoid());return TRUE;
#line 1754 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1757 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1758 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1759 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1761 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if((m_dtDestination  == DT_PLAYERSPOTTED  || m_dtDestination  == DT_PATHTEMPORARY ) 
#line 1762 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
&& IsVisible  (m_penEnemy )){
#line 1764 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 1766 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vPlayerSpotted  = PlayerDestinationPos  ();
#line 1767 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1768 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1771 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fAllowedError  = m_fMoveSpeed  * m_fMoveFrequency  * 2.0f;
#line 1772 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PATHPERSISTENT  || m_dtDestination  == DT_PATHTEMPORARY ){
#line 1773 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fAllowedError  = ((CNavigationMarker  &) * m_penPathMarker ) . m_fMarkerRange ;
#line 1774 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1775 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_dtDestination  != DT_PLAYERCURRENT  && 
#line 1776 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
(CalcDistanceInPlaneToDestination  () < fAllowedError  || fAllowedError  < 0.1f)){
#line 1778 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERSPOTTED ){
#line 1780 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsVisible  (m_penEnemy )){
#line 1782 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_dtDestination  = DT_PLAYERCURRENT ;
#line 1784 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1786 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1787 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1790 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_dtDestination  == DT_PLAYERCURRENT ){
#line 1792 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = PlayerDestinationPos  ();
#line 1795 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else if(m_dtDestination  == DT_PLAYERSPOTTED ){
#line 1797 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = m_vPlayerSpotted ;
#line 1798 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1800 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsMovable  ())
#line 1801 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1803 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vPosDelta  = m_vDesiredPosition  - GetPlacement  () . pl_PositionVector ;
#line 1804 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fPosDistance  = vPosDelta  . Length  ();
#line 1806 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetSpeedsToDesiredPosition  (vPosDelta  , fPosDistance  , m_dtDestination  == DT_PLAYERCURRENT );
#line 1809 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ULONG  ulFlags  = SetDesiredMovementEx  ();
#line 1810 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
MovementAnimation  (ulFlags );
#line 1811 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1812 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 1813 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&eTouch= (ETouch&)__eeInput;

#line 1816 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IfTargetCrushed  (eTouch  . penOther  , (FLOAT3D &) eTouch  . plCollision ))
#line 1817 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1818 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 1819 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1820 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 1821 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1823 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE;
#line 1824 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1825 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EWouldFall):
#line 1828 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EWouldFall&eWouldFall= (EWouldFall&)__eeInput;

#line 1830 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE;
#line 1831 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):{const EDeath&e= (EDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDeath):{const EEnemyBaseDeath&e= (EEnemyBaseDeath&)__eeInput;
return FALSE;}ASSERT(FALSE);break;case(EVENTCODE_ESound):{const ESound&e= (ESound&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EWatch):{const EWatch&e= (EWatch&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EReturn):{const EReturn&e= (EReturn&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360016, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1840 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360016_PerformAttack_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360016
Jump(STATE_CURRENT,0x01360017, FALSE, EInternal());return TRUE;
#line 1841 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360018_PerformAttack_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360018
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1845 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FireOrHit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_FireOrHit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::FireOrHit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1848 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(!(CalcDist  (m_penEnemy ) < GetProp  (m_fCloseDistance ) && CanHitEnemy  (m_penEnemy  , Cos  (AngleDeg  (45.0f))))){ Jump(STATE_CURRENT,0x01360021, FALSE, EInternal());return TRUE;}
#line 1851 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AddToFuss  ();
#line 1853 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 1855 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + GetProp  (m_fCloseFireTime ) * (1.0f + FRnd  () / 3.0f);
#line 1857 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_Hit, TRUE;
Jump(STATE_CURRENT, 0x0136001a, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136001a_FireOrHit_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_Hit, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136001b, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136001b_FireOrHit_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001b
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01360020, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360021_FireOrHit_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360021
if(!(CalcDist  (m_penEnemy ) < GetProp  (m_fAttackDistance ) && CanAttackEnemy  (m_penEnemy  , Cos  (AngleDeg  (45.0f))))){ Jump(STATE_CURRENT,0x0136001f, FALSE, EInternal());return TRUE;}
#line 1864 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AddToFuss  ();
#line 1866 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 1868 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(CalcDist  (m_penEnemy ) < GetProp  (m_fCloseDistance )){
#line 1869 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + GetProp  (m_fCloseFireTime ) * (1.0f + FRnd  () / 3.0f);
#line 1870 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else {
#line 1871 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + GetProp  (m_fAttackFireTime ) * (1.0f + FRnd  () / 3.0f);
#line 1872 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1874 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_Hit, TRUE;
Jump(STATE_CURRENT, 0x0136001c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136001c_FireOrHit_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_Hit, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136001d, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136001d_FireOrHit_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001d
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x0136001e, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136001f_FireOrHit_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001f

#line 1879 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1881 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fShootTime  = _pTimer  -> CurrentTick  () + 0.25f;
#line 1882 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}Jump(STATE_CURRENT,0x0136001e, FALSE, EInternal());return TRUE;}
BOOL CEnemyBase::H0x0136001e_FireOrHit_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136001e
Jump(STATE_CURRENT,0x01360020, FALSE, EInternal());return TRUE;}
BOOL CEnemyBase::H0x01360020_FireOrHit_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360020

#line 1885 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1885 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1893 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1895 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1895 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1899 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1901 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1901 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1913 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BeWounded(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_BeWounded
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EEnemyBaseDamage, "CEnemyBase::BeWounded expects 'EEnemyBaseDamage' as input!");  const EEnemyBaseDamage &eEBDamage = (const EEnemyBaseDamage &)__eeInput;
#line 1915 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 1917 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
INDEX iDamageAnim  = AnimForDamage  (eEBDamage  . fAmount );
#line 1918 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(!(iDamageAnim  != - 1)){ Jump(STATE_CURRENT,0x01360027, FALSE, EInternal());return TRUE;}
#line 1919 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(GetAnimLength  (iDamageAnim ));
Jump(STATE_CURRENT, 0x01360025, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360025_BeWounded_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360025
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360026, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360026_BeWounded_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360026
;Jump(STATE_CURRENT,0x01360027, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360027_BeWounded_03(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360027

#line 1921 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 1922 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 1922 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 1926 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Die(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Die
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EEnemyBaseDeath, "CEnemyBase::Die expects 'EEnemyBaseDeath' as input!");  const EEnemyBaseDeath &eEBDeath = (const EEnemyBaseDeath &)__eeInput;
#line 1929 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
_pNetwork  -> ResetMobStatus  (en_ulID );
#line 1932 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 1935 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlagOff  (ENF_ALIVE );
#line 1937 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 1940 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntityPointer penKiller  = (CEntity  *) eEBDeath  . eidInflictor ;
#line 1941 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(penKiller  == NULL ){
#line 1942 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
penKiller  = m_penEnemy ;
#line 1943 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1945 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(penKiller  == NULL ){
#line 1946 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
penKiller  = FixupCausedToPlayer  (this  , penKiller  , FALSE );
#line 1947 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1950 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
KillType  ekt  = KT_OTHER ;
#line 1951 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(penKiller  == NULL ){
#line 1952 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ekt  = KT_OTHER ;
#line 1953 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else if(IsOfClass  (eEBDeath  . eidInflictor  , & CPlayer_DLLClass )){
#line 1954 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ekt  = KT_PLAYER ;
#line 1955 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}else if(IsDerivedFromClass  ((CEntity  *) eEBDeath  . eidInflictor  , & CEnemyBase_DLLClass )){
#line 1956 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ekt  = KT_ENEMY ;
#line 1957 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1959 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
MarkEnemyDead  (this );
#line 1962 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> m_bSingleMode )
#line 1963 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1964 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 1965 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1967 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStop  ());
#line 1968 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EEnd  ());
#line 1969 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1970 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1973 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendToTarget  (m_penDeathTarget  , m_eetDeathType  , penKiller );
#line 1976 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penSpawnerTarget ){
#line 1977 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendToTarget  (m_penSpawnerTarget  , EET_TRIGGER  , this );
#line 1978 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1981 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360029, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360029_Die_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360029
switch(__eeInput.ee_slEvent)
#line 1982 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_EBegin):
#line 1985 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1987 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(ShouldBlowUp  ())
#line 1988 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1990 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EBlowUp  eBlow ;
#line 1991 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eBlow  . vDamage  = m_vDamage ;
#line 1992 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eBlow  . vTranslation  = en_vCurrentTranslationAbsolute ;
#line 1993 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eBlow  , TRUE );
#line 1994 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 1995 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 1996 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BlowUpBase  ();
#line 1997 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 1999 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2001 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2002 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2003 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2005 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_DeathSequence, TRUE, EVoid());return TRUE;
#line 2006 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2007 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):
#line 2010 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EDamage&eDamage= (EDamage&)__eeInput;

#line 2011 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2012 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2013 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EEnemyBaseDamage  eEBDamage ;
#line 2014 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . eidInflictor  = (CEntity  *) eDamage  . penInflictor ;
#line 2015 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vDirection  = eDamage  . vDirection ;
#line 2016 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vHitPoint  = eDamage  . vHitPoint ;
#line 2017 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fAmount  = eDamage  . fAmount ;
#line 2018 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . dmtType  = eDamage  . dmtType ;
#line 2019 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fHealth  = en_fHealth ;
#line 2020 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eEBDamage  , TRUE );
#line 2021 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2022 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2023 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 2026 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 2028 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(ShouldBlowUp  ())
#line 2029 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2030 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EBlowUp  eBlow ;
#line 2031 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eBlow  . vDamage  = m_vDamage ;
#line 2032 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eBlow  . vTranslation  = en_vCurrentTranslationAbsolute ;
#line 2033 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eBlow  , TRUE );
#line 2034 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ()){
#line 2035 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BlowUpBase  ();
#line 2037 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x0136002a, FALSE, EInternal());return TRUE;
#line 2038 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2039 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2040 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2042 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2043 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EBlowUp):{const EBlowUp&eBlow= (EBlowUp&)__eeInput;

#line 2046 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> IsServer  ()){
#line 2047 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDamage  = eBlow  . vDamage ;
#line 2048 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
en_vCurrentTranslationAbsolute  = eBlow  . vTranslation ;
#line 2049 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BlowUpBase  ();
#line 2050 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_DeathSequence, TRUE, EVoid());return TRUE;
#line 2051 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2052 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x0136002a, FALSE, EInternal());return TRUE;
#line 2053 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnd):{const EEnd&e= (EEnd&)__eeInput;

#line 2057 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x0136002a, FALSE, EInternal());return TRUE;
#line 2058 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2059 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x0136002a_Die_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002a

#line 2062 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
RemoveFromFuss  ();
#line 2065 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
_pNetwork  -> DelMobTarget  (en_ulID );
#line 2070 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 2070 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2073 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Death(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Death
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Death expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2075 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2076 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
DeathSound  ();
#line 2077 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
LeaveStain  (FALSE );
#line 2080 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetPhysicsFlags  (EPF_MODEL_CORPSE );
#line 2081 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetCollisionFlags  (ECF_CORPSE );
#line 2082 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlags  (GetFlags  () | ENF_SEETHROUGH );
#line 2085 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
RemoveFromFuss  ();
#line 2088 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
DeathNotify  ();
#line 2091 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
INDEX iAnim  = AnimForDeath  ();
#line 2094 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vTacticsStartPosition  = FLOAT3D (1 , 1 , 1);
#line 2095 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fTacticVar4  = WaitForDust  (m_vTacticsStartPosition );
#line 2097 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fTacticVar5  = _pTimer  -> CurrentTick  ();
#line 2099 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fTacticVar3  = - 1;
#line 2102 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(0.5f);
Jump(STATE_CURRENT, 0x0136002c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136002c_Death_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0136002d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136002d_Death_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002d
;
#line 2103 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
DropDeathItem  ();
#line 2106 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(!(m_fTacticVar4  < 0)){ Jump(STATE_CURRENT,0x01360034, FALSE, EInternal());return TRUE;}Jump(STATE_CURRENT,0x01360033, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360034_Death_09(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360034
if(!(TRUE )){ Jump(STATE_CURRENT,0x01360032, FALSE, EInternal());return TRUE;}
#line 2113 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360030, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360030_Death_05(const CEntityEvent &__eeInput)
#line 2114 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360030
if(!(_pTimer  -> CurrentTick  () < m_fTacticVar5  + GetCurrentAnimLength  ())){ Jump(STATE_CURRENT,0x01360031, FALSE, EInternal());return TRUE;}
#line 2115 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x0136002e, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136002e_Death_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0136002f, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136002f_Death_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136002f
;
#line 2116 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(en_penReference  != NULL  && _pTimer  -> CurrentTick  () >= m_fTacticVar5  + m_fTacticVar4  && m_fTacticVar3  < 0)
#line 2117 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2119 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPlacement3D plFX  = GetPlacement  ();
#line 2120 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ESpawnEffect  ese ;
#line 2121 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 2122 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . vStretch  = m_vTacticsStartPosition ;
#line 2123 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . vNormal  = FLOAT3D (0 , 1 , 0);
#line 2124 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ese  . betType  = BET_DUST_FALL ;
#line 2125 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CPlacement3D plSmoke  = plFX ;
#line 2126 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
plSmoke  . pl_PositionVector  += FLOAT3D (0 , 0.35f * m_vTacticsStartPosition  (2) , 0);
#line 2127 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntityPointer penFX  = CreateEntity  (plSmoke  , CLASS_BASIC_EFFECT );
#line 2128 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
penFX  -> Initialize  (ese );
#line 2129 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
penFX  -> SetParent  (this );
#line 2131 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fTacticVar3  = 1;
#line 2132 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}Jump(STATE_CURRENT,0x01360030, FALSE, EInternal());return TRUE;
#line 2133 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360031_Death_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360031
Jump(STATE_CURRENT,0x01360032, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360032_Death_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360032
Jump(STATE_CURRENT,0x01360033, FALSE, EInternal());return TRUE;}
BOOL CEnemyBase::H0x01360033_Death_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360033

#line 2136 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EEnd  ());
#line 2136 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2139 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
DeathSequence(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_DeathSequence
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::DeathSequence expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2142 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlagOff  (ENF_ALIVE );
#line 2144 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 2147 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_Death, TRUE;
Jump(STATE_CURRENT, 0x01360036, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360036_DeathSequence_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360036
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_Death, TRUE, EVoid());return TRUE;case EVENTCODE_EEnd: Jump(STATE_CURRENT,0x01360037, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360037_DeathSequence_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360037
const EEnd&__e= (EEnd&)__eeInput;
;
#line 2153 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntityPointer penFlame  = GetChildOfClass  ("Flame");
#line 2154 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(penFlame  != NULL )
#line 2155 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2157 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EStopFlaming  esf ;
#line 2158 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
esf  . m_bNow  = FALSE ;
#line 2159 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
penFlame  -> SendEvent  (esf );
#line 2160 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2162 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fWaitTime  = 2.0f;
#line 2163 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsFirstExtraFlagOn  (ENF_EX1_PRODUCTION ))
#line 2164 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2165 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fWaitTime  = 0.1f;
#line 2166 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2167 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(fWaitTime );
Jump(STATE_CURRENT, 0x01360038, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360038_DeathSequence_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360038
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01360039, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x01360039_DeathSequence_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360039
;
#line 2170 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fSpiritStartTime  = _pTimer  -> CurrentTick  ();
#line 2171 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fFadeStartTime  = _pTimer  -> CurrentTick  ();
#line 2172 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fFadeTime  = 4.0f , 
#line 2173 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bFadeOut  = TRUE ;
#line 2175 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetCollisionFlags  (ECF_CORPSE  & ~ ((ECBI_PROJECTILE_MAGIC  | ECBI_PROJECTILE_SOLID ) << ECB_TEST ));
#line 2177 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsFirstExtraFlagOn  (ENF_EX1_PRODUCTION ))
#line 2178 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2179 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fFadeTime  = 0.1f;
#line 2180 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2183 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(m_fFadeTime );
Jump(STATE_CURRENT, 0x0136003a, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136003a_DeathSequence_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0136003b, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136003b_DeathSequence_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003b
;
#line 2185 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT fEffectWait  = 6.0f;
#line 2186 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(IsFirstExtraFlagOn  (ENF_EX1_PRODUCTION ))
#line 2187 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2188 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
fEffectWait  = 0.1f;
#line 2189 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2191 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(fEffectWait );
Jump(STATE_CURRENT, 0x0136003c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136003c_DeathSequence_07(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0136003d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136003d_DeathSequence_08(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003d
;
#line 2193 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EEnd  ());
#line 2193 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2202 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Active(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Active
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Active expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2204 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = 0.0f;
#line 2207 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x0136003f, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136003f_Active_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136003f
switch(__eeInput.ee_slEvent)
#line 2208 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_EBegin):
#line 2211 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 2213 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2214 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2215 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReconsiderBehavior):
#line 2219 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EReconsiderBehavior&e= (EReconsiderBehavior&)__eeInput;

#line 2220 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL )
#line 2221 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2225 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bSkilling )
#line 2226 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2227 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bSkilling  = FALSE ;
#line 2228 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_SkillingTarget, TRUE, EVoid());return TRUE;
#line 2229 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2230 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(m_bAttack )
#line 2231 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2232 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = FALSE ;
#line 2233 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_AttackTarget, TRUE, EVoid());return TRUE;
#line 2234 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2235 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2236 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2237 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetNoTargetEntity  ();
#line 2238 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2239 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2240 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(m_penEnemy  == NULL )
#line 2241 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2242 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bStop )
#line 2243 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2244 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_StopMovement, TRUE, EVoid());return TRUE;
#line 2245 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2246 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else if(m_bMoving )
#line 2247 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2248 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_MovetoPoint, TRUE, EVoid());return TRUE;
#line 2249 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2250 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2251 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2252 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):
#line 2255 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EReturn&e= (EReturn&)__eeInput;

#line 2257 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2258 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2259 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):
#line 2262 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EDamage&eDamage= (EDamage&)__eeInput;

#line 2263 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2264 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2265 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EEnemyBaseDamage  eEBDamage ;
#line 2266 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . eidInflictor  = (CEntity  *) eDamage  . penInflictor ;
#line 2267 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vDirection  = eDamage  . vDirection ;
#line 2268 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vHitPoint  = eDamage  . vHitPoint ;
#line 2269 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fAmount  = eDamage  . fAmount ;
#line 2270 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . dmtType  = eDamage  . dmtType ;
#line 2271 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fHealth  = en_fHealth ;
#line 2272 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eEBDamage  , TRUE );
#line 2273 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2274 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2275 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 2278 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 2281 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 2282 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fDamageConfused  < 0.001f)
#line 2283 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2284 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 2288 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
WoundSound  ();
#line 2290 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! m_bAttack  && ! m_bMoving )
#line 2291 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2292 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, eEBDamage );return TRUE;
#line 2293 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2294 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2295 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2297 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
INDEX animSet  , animIdx ;
#line 2298 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
INDEX animId  = ska_StringToID  ("mldam");
#line 2299 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(this  -> en_pmiModelInstance  
#line 2300 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 2301 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2303 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
this  -> en_pmiModelInstance  -> AddAnimation  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 2304 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2306 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2307 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2308 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2309 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EForceWound):
#line 2312 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EForceWound&e= (EForceWound&)__eeInput;

#line 2313 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, EEnemyBaseDamage  ());return TRUE;
#line 2314 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2315 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):{const ETouch&eTouch= (ETouch&)__eeInput;

#line 2319 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE;
#line 2320 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2321 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360040_Active_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360040
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2325 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SingleActive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_SingleActive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::SingleActive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2327 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = 0.0f;
#line 2329 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360042, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360042_SingleActive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360042
switch(__eeInput.ee_slEvent)
#line 2330 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_EBegin):
#line 2333 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 2335 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2336 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2337 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReconsiderBehavior):
#line 2341 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EReconsiderBehavior&e= (EReconsiderBehavior&)__eeInput;

#line 2342 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL  && m_penEnemy  -> IsFlagOn  (ENF_ALIVE ))
#line 2343 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2347 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bSkilling )
#line 2348 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2349 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bSkilling  = FALSE ;
#line 2350 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_SkillingTarget, TRUE, EVoid());return TRUE;
#line 2351 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2352 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2353 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2355 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlagOn  (ENF_ALIVE );
#line 2356 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_AttackEnemy, TRUE, EVoid());return TRUE;
#line 2357 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2358 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2359 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2360 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):
#line 2363 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EReturn&e= (EReturn&)__eeInput;

#line 2365 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (EReconsiderBehavior  ());
#line 2366 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2367 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EWatch):
#line 2370 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EWatch&eWatch= (EWatch&)__eeInput;

#line 2372 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(SetTargetSoft  ((CEntity  *) eWatch  . eidSeen ))
#line 2373 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2375 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_NewEnemySpotted, TRUE, EVoid());return TRUE;
#line 2376 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2377 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2378 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):
#line 2382 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EDamage&eDamage= (EDamage&)__eeInput;

#line 2383 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2384 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2385 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EEnemyBaseDamage  eEBDamage ;
#line 2386 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . eidInflictor  = (CEntity  *) eDamage  . penInflictor ;
#line 2387 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vDirection  = eDamage  . vDirection ;
#line 2388 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vHitPoint  = eDamage  . vHitPoint ;
#line 2389 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fAmount  = eDamage  . fAmount ;
#line 2390 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . dmtType  = eDamage  . dmtType ;
#line 2391 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fHealth  = en_fHealth ;
#line 2392 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eEBDamage  , TRUE );
#line 2393 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2394 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2395 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 2398 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 2401 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 2402 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fDamageConfused  < 0.001f)
#line 2403 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2404 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 2408 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
WoundSound  ();
#line 2410 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! m_bAttack  && ! m_bMoving  && ! IsBossMob  ())
#line 2411 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2412 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, eEBDamage );return TRUE;
#line 2413 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2414 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2415 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2416 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EForceWound):
#line 2419 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EForceWound&e= (EForceWound&)__eeInput;

#line 2420 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, EEnemyBaseDamage  ());return TRUE;
#line 2421 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2422 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETouch):
#line 2425 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const ETouch&eTouch= (ETouch&)__eeInput;

#line 2426 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return FALSE;
#line 2427 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStartAttack):
#line 2431 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EStartAttack&e= (EStartAttack&)__eeInput;

#line 2433 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2434 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStopAttack):
#line 2436 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EStopAttack&e= (EStopAttack&)__eeInput;

#line 2438 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2439 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2440 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360043_SingleActive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360043
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2446 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Inactive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Inactive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Inactive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2449 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2450 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2453 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360045, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360045_Inactive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360045
switch(__eeInput.ee_slEvent)
#line 2454 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_EBegin):
#line 2456 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 2457 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bNpc )
#line 2458 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2459 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_IdleLoop, TRUE, EVoid());return TRUE;
#line 2461 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2462 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2463 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2464 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 2465 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2467 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStart):
#line 2472 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EStart&e= (EStart&)__eeInput;

#line 2474 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 2475 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):
#line 2480 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EReturn&e= (EReturn&)__eeInput;

#line 2482 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 2483 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):
#line 2486 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 2487 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntity  * penCaused  = FixupCausedToPlayer  (this  , eTrigger  . penCaused );
#line 2489 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(SetTargetSoft  (penCaused ))
#line 2490 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2492 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 2493 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2494 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):
#line 2497 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EDamage&eDamage= (EDamage&)__eeInput;

#line 2498 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2499 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2500 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EEnemyBaseDamage  eEBDamage ;
#line 2501 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . eidInflictor  = (CEntity  *) eDamage  . penInflictor ;
#line 2502 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vDirection  = eDamage  . vDirection ;
#line 2503 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vHitPoint  = eDamage  . vHitPoint ;
#line 2504 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fAmount  = eDamage  . fAmount ;
#line 2505 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . dmtType  = eDamage  . dmtType ;
#line 2506 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fHealth  = en_fHealth ;
#line 2507 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eEBDamage  , TRUE );
#line 2508 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2509 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2510 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 2513 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 2515 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(SetTargetHard  ((CEntity  *) eEBDamage  . eidInflictor ))
#line 2516 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2518 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
WoundedNotify  (eEBDamage );
#line 2520 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
WoundSound  ();
#line 2522 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, eEBDamage );return TRUE;
#line 2523 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2524 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2525 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2526 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360046_Inactive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360046
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2529 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SingleInActive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_SingleInActive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::SingleInActive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2532 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2533 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2536 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2537 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2539 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (EStart  ());
#line 2540 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2542 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360048, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360048_SingleInActive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360048
switch(__eeInput.ee_slEvent)
#line 2543 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EStart):
#line 2549 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EStart&e= (EStart&)__eeInput;

#line 2550 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_SingleActive, TRUE, EVoid());return TRUE;
#line 2551 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EReturn):
#line 2556 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EReturn&e= (EReturn&)__eeInput;

#line 2557 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_SingleActive, TRUE, EVoid());return TRUE;
#line 2558 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):
#line 2562 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const ETrigger&eTrigger= (ETrigger&)__eeInput;

#line 2563 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
CEntity  * penCaused  = FixupCausedToPlayer  (this  , eTrigger  . penCaused );
#line 2565 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(SetTargetSoft  (penCaused ))
#line 2566 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2567 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_SingleActive, TRUE, EVoid());return TRUE;
#line 2568 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2569 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDamage):
#line 2573 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EDamage&eDamage= (EDamage&)__eeInput;

#line 2574 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2575 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2576 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EEnemyBaseDamage  eEBDamage ;
#line 2577 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . eidInflictor  = (CEntity  *) eDamage  . penInflictor ;
#line 2578 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vDirection  = eDamage  . vDirection ;
#line 2579 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . vHitPoint  = eDamage  . vHitPoint ;
#line 2580 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fAmount  = eDamage  . fAmount ;
#line 2581 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . dmtType  = eDamage  . dmtType ;
#line 2582 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDamage  . fHealth  = en_fHealth ;
#line 2583 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eEBDamage  , TRUE );
#line 2584 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2585 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2586 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 2589 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 2591 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(SetTargetHard  ((CEntity  *) eEBDamage  . eidInflictor ))
#line 2592 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2594 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
WoundedNotify  (eEBDamage );
#line 2596 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
WoundSound  ();
#line 2598 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_BeWounded, TRUE, eEBDamage );return TRUE;
#line 2599 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2600 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2601 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2602 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360049_SingleInActive_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360049
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2606 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
PreMainLoop(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_PreMainLoop
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::PreMainLoop expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2608 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2608 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2611 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
MainLoop_internal(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_MainLoop_internal
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::MainLoop_internal expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2613 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bWasKilled )
#line 2614 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2615 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Destroy  (FALSE );
#line 2616 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 2616 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2617 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2624 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_tmReflexMin  < 0){
#line 2625 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmReflexMin  = 0.0f;
#line 2626 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2627 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_tmReflexMin  > m_tmReflexMax ){
#line 2628 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_tmReflexMax  = m_tmReflexMin ;
#line 2629 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2632 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_fStepHeight  == - 1)
#line 2633 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2634 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fStepHeight  = 2.0f;
#line 2635 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2638 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bTemplate )
#line 2639 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2641 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 2641 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2642 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2651 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 2652 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x0136004c, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136004c_MainLoop_internal_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0136004d, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136004d_MainLoop_internal_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004d
;
#line 2653 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetFlagOff  (ENF_CLIENTHANDLING );
#line 2655 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> m_bSingleMode )
#line 2656 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2657 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2658 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2660 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_penWatcher  = CreateEntity  (GetPlacement  () , CLASS_WATCHER  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 2661 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EWatcherInit  eInitWatcher ;
#line 2663 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eInitWatcher  . eidOwner  = this ;
#line 2664 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetWatcher  () -> Initialize  (eInitWatcher  , FALSE );
#line 2665 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2666 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2668 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vStartPosition  = GetPlacement  () . pl_PositionVector ;
#line 2671 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_soSound  . Set3DParameters  (100.0f , 10.0f , 1.0f , 1.0f);
#line 2674 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
en_fStepUpHeight  = m_fStepHeight  + 0.01f;
#line 2675 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
en_fStepDnHeight  = m_fFallHeight  + 0.01f;
#line 2679 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EnemyPostInit  ();
#line 2687 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ASSERT  (m_fStopDistance  >= 0);
#line 2688 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ASSERT  (m_fCloseDistance  >= 0);
#line 2690 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ASSERT  (m_fIgnoreRange  > m_fAttackDistance );
#line 2691 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_PreMainLoop, TRUE;
Jump(STATE_CURRENT, 0x0136004e, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136004e_MainLoop_internal_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_PreMainLoop, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136004f, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136004f_MainLoop_internal_04(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136004f
const EReturn&__e= (EReturn&)__eeInput;
;
#line 2693 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_StandardBehavior, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2697 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
MainLoop(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_MainLoop
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::MainLoop expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2699 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2700 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2701 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_MainLoop_internal, TRUE, EVoid());return TRUE;
#line 2702 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
} ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2707 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandardBehavior(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_StandardBehavior
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::StandardBehavior expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2710 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01360052, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360052_StandardBehavior_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360052
switch(__eeInput.ee_slEvent)
#line 2711 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{case(EVENTCODE_EBegin):
#line 2714 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 2718 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_penEnemy  != NULL )
#line 2719 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2720 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> m_bSingleMode )
#line 2721 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2722 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_Active, TRUE, EVoid());return TRUE;
#line 2723 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2724 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2725 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2726 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_SingleActive, TRUE, EVoid());return TRUE;
#line 2727 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2728 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2730 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2731 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2733 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> m_bSingleMode )
#line 2734 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2735 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_Inactive, TRUE, EVoid());return TRUE;
#line 2736 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2737 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
else 
#line 2738 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2739 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_SingleInActive, TRUE, EVoid());return TRUE;
#line 2740 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2741 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2742 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 2746 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 2748 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(ShouldBlowUp  ())
#line 2749 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2751 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EBlowUp  eBlow ;
#line 2752 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eBlow  . vDamage  = m_vDamage ;
#line 2753 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eBlow  . vTranslation  = en_vCurrentTranslationAbsolute ;
#line 2754 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eBlow  , TRUE );
#line 2755 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2756 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2757 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BlowUpBase  ();
#line 2759 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360053, FALSE, EInternal());return TRUE;
#line 2760 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2761 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2762 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2764 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2765 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeath):
#line 2769 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EDeath&eDeath= (EDeath&)__eeInput;

#line 2770 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EEnemyBaseDeath  eEBDeath ;
#line 2771 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
eEBDeath  . eidInflictor  = (CEntity  *) eDeath  . eLastDamage  . penInflictor ;
#line 2772 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SendEvent  (eEBDeath  , TRUE );
#line 2773 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2774 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDeath):
#line 2776 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EEnemyBaseDeath&eEBDeath= (EEnemyBaseDeath&)__eeInput;

#line 2777 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bWasKilled  = TRUE ;
#line 2779 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT, STATE_CEnemyBase_Die, TRUE, eEBDeath );return TRUE;
#line 2780 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETeleport):
#line 2784 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const ETeleport&et= (ETeleport&)__eeInput;

#line 2786 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> IsServer  ())
#line 2787 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2789 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(_pNetwork  -> m_bSingleMode )
#line 2790 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2791 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(GetWatcher  () != NULL )
#line 2792 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2793 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
GetWatcher  () -> SendEvent  (et );
#line 2794 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2795 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2797 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2798 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2799 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStopBlindness):
#line 2802 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EStopBlindness&e= (EStopBlindness&)__eeInput;

#line 2804 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bBlind  = FALSE ;
#line 2805 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2806 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStopDeafness):
#line 2809 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EStopDeafness&e= (EStopDeafness&)__eeInput;

#line 2811 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bDeaf  = FALSE ;
#line 2812 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2813 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EAddHostile):
#line 2815 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EAddHostile&e= (EAddHostile&)__eeInput;

#line 2816 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
en_pwoWorld  -> m_vectorTargetNPC  . push_back  (this );
#line 2817 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
_pNetwork  -> AddRescueNPC  (this );
#line 2818 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2819 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_EBlowUp):
#line 2823 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{const EBlowUp&eBlow= (EBlowUp&)__eeInput;

#line 2824 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(! _pNetwork  -> IsServer  ())
#line 2825 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2826 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDamage  = eBlow  . vDamage ;
#line 2827 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
en_vCurrentTranslationAbsolute  = eBlow  . vTranslation ;
#line 2828 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
BlowUpBase  ();
#line 2829 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Call(STATE_CURRENT, STATE_CEnemyBase_DeathSequence, TRUE, EVoid());return TRUE;
#line 2830 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2831 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360053, FALSE, EInternal());return TRUE;
#line 2832 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 2833 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360053_StandardBehavior_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360053
 ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2837 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2839 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EVoid());
#line 2839 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2844 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
AttackTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_AttackTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::AttackTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2846 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2846 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2849 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SkillingTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_SkillingTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::SkillingTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2851 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2851 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2855 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMovement(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_StopMovement
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::StopMovement expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2857 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = FALSE ;
#line 2858 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = FALSE ;
#line 2859 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bStop  = FALSE ;
#line 2861 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetNoTargetEntity  ();
#line 2862 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2863 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2865 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2865 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2869 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
MovetoPoint(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_MovetoPoint
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::MovetoPoint expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2871 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetNoTargetEntity  ();
#line 2872 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_aRotateSpeed  = AngleDeg  (1800.0f);
#line 2873 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveFrequency  = 0.25f;
#line 2875 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
FLOAT3D vDelta  = GetPlacement  () . pl_PositionVector  - m_vDesiredPosition ;
#line 2879 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x0136005a, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x0136005a_MovetoPoint_03(const CEntityEvent &__eeInput)
#line 2880 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005a
if(!(CalcDistanceInPlaneToDestination  () > 0.0f)){ Jump(STATE_CURRENT,0x0136005b, FALSE, EInternal());return TRUE;}
#line 2881 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
SetTimerAfter(m_fMoveFrequency );
Jump(STATE_CURRENT, 0x01360058, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x01360058_MovetoPoint_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360058
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 2884 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(m_bAttack )
#line 2885 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
#line 2886 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = FALSE ;
#line 2887 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
EReturn  ();
#line 2888 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2891 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 2892 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
MovementAnimation  (ulFlags );
#line 2894 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
if(ulFlags  == 0){
#line 2895 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
UnsetTimer();Jump(STATE_CURRENT,0x01360059, FALSE, EInternal());return TRUE;
#line 2896 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}
#line 2897 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE;
#line 2898 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01360059, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 2900 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}return TRUE;}BOOL CEnemyBase::H0x01360059_MovetoPoint_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360059
Jump(STATE_CURRENT,0x0136005a, FALSE, EInternal());return TRUE;
#line 2901 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x0136005b_MovetoPoint_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005b

#line 2903 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bAttack  = FALSE ;
#line 2904 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bMoving  = FALSE ;
#line 2905 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_bStop  = FALSE ;
#line 2907 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_fMoveSpeed  = 0.0f;
#line 2908 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
m_vDesiredPosition  = GetPlacement  () . pl_PositionVector ;
#line 2909 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StopMoving  ();
#line 2910 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
StandingAnim  ();
#line 2913 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2913 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2916 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
IdleAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_IdleAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::IdleAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2918 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Return(STATE_CURRENT,EReturn  ());
#line 2918 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemyBase::
#line 2921 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
IdleLoop(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemyBase_IdleLoop
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemyBase::IdleLoop expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2923 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
Jump(STATE_CURRENT,0x01360060, FALSE, EInternal());return TRUE;}BOOL CEnemyBase::H0x01360060_IdleLoop_03(const CEntityEvent &__eeInput)
#line 2924 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360060
if(!(TRUE )){ Jump(STATE_CURRENT,0x01360061, FALSE, EInternal());return TRUE;}
#line 2925 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
STATE_CEnemyBase_IdleAnimation, TRUE;
Jump(STATE_CURRENT, 0x0136005e, FALSE, EBegin());return TRUE;}BOOL CEnemyBase::H0x0136005e_IdleLoop_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemyBase_IdleAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0136005f, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemyBase::H0x0136005f_IdleLoop_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0136005f
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01360060, FALSE, EInternal());return TRUE;
#line 2926 "E:/질산/Korea/Client_USA/EntitiesMP/EnemyBase.es"
}BOOL CEnemyBase::H0x01360061_IdleLoop_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01360061
 ASSERT(FALSE); return TRUE;};