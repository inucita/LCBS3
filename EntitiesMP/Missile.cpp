/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 4 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"

#include "stdH.h"
#include <Engine/Math/Quaternion.h>
#include <Engine/Effect/CTag.h>
#include <Engine/Effect/CRefCountPtr.h>
#include <Engine/Effect/CEntityTag.h>
#include <Engine/Effect/CTagManager.h>
#include <Engine/Math/AdditionalFunction.h>
#include <Engine/Effect/CEffectGroup.h>

#include "EntitiesMP/Player.h"
#include "EntitiesMP/EnemyBase.h"
#include "EntitiesMP/CharacterBase.h"
#include <Engine/Entities/InternalClasses.h>
#include <Engine/Interface/UIManager.h>
#include <Engine/Effect/CSampleSpline.h>
#include <Engine/Effect/CMdlEffect.h>
#include <Engine/Entities/Skill.h>
#include <Engine/World/WorldRayCasting.h>
#include <Engine/Network/MessageDefine.h>
#include <Engine/Object/ActorMgr.h>
#include <EntitiesMP/Common/CharacterDefinition.h>
#include <Engine/Info/MyInfo.h>

typedef CSampleSpline< FLOAT3D, CCubicSplineInterpolate<FLOAT3D> > cubic_spline;
#define GetSpline() (*((cubic_spline*)m_pssPath))

// NOTE : 심하게 밀리는 싱글던젼...
#define	EXTREAM_SINGLEDUNGEON		(10)


#include <Missile.h>
#include <Missile_tables.h>
#line 51 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"

#include <Engine/Effect/CTag.h>
#include <Engine/Effect/CTagManager.h>
#include <Engine/Ska/ModelInstance.h>

void DamagedTargetsInRange(CEntity* pEntity, CSelectedEntities& dcEntities, enum DamageType dmtType, FLOAT fDamageAmmount, FLOAT3D vCenter, BOOL bSkill);

void ShotMissile(CEntity *penShoter, const char *szShotPosTagName
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szArrowEffectName
				 , bool bCritical
				 , FLOAT fHorizonalOffset = 0.0f, FLOAT fVerticalOffset = 0.0f	//-1.0f ~ 1.0f
				 , INDEX iArrowType = 0, const char *szMissileModel = NULL, CSelectedEntities* dcEntities = NULL)		// iArrowType=0 : normal arrow, iArrowType=1 : magic arrow, iArrowType=etc : ??
{
	//입력 조건 검사.
	ASSERT(penShoter != NULL && penShoter->en_pmiModelInstance != NULL);
	ASSERT(penTarget != NULL && penTarget->en_pmiModelInstance != NULL && fMoveSpeed > 0.0f);
	ASSERT(szShotPosTagName != NULL && szHitEffectName != NULL && szArrowEffectName != NULL);
	ASSERT(fHorizonalOffset <= 1.0f && fHorizonalOffset >= -1.0f);
	ASSERT(fVerticalOffset <= 1.0f && fVerticalOffset >= -1.0f);
	if(!(penShoter != NULL && penShoter->en_pmiModelInstance != NULL)) return;
	if(!(penTarget != NULL && penTarget->en_pmiModelInstance != NULL && fMoveSpeed > 0.0f)) return;
	if(!(szShotPosTagName != NULL && szHitEffectName != NULL && szArrowEffectName != NULL)) return;

	//missile 생성.
	CTag *pTag = penShoter->en_pmiModelInstance->m_tmSkaTagManager.Find(szShotPosTagName);
	//if(pTag == NULL) pTag = penShoter->m_ptmTagManager->Find(szShotPosTagName);
	ASSERT(pTag != NULL);
	if(pTag == NULL) return;
	CPlacement3D plMissile;
	plMissile.pl_PositionVector = pTag->CurrentTagInfo().m_vPos;
	plMissile.pl_OrientationAngle = GetEulerAngleFromDir(penTarget->en_plPlacement.pl_PositionVector - penShoter->en_plPlacement.pl_PositionVector);
	CMissile *penMissile = (CMissile *)penShoter->en_pwoWorld->CreateEntity_t(plMissile, "classes\\missile.ecl");

	//missile 정보 세팅.
	penMissile->m_epSource = penShoter;
	penMissile->m_epTarget = penTarget;	//target entity
	penMissile->m_fMoveSpeed = fMoveSpeed;
	penMissile->m_fHorizonalOffset = fHorizonalOffset;
	penMissile->m_fVerticalOffset = fVerticalOffset;
	penMissile->m_strHitEffect = szHitEffectName;
	if(iArrowType == 0)
	{
		penMissile->m_eMissileType = MLT_NORMALARROW;
		penMissile->m_fnModel = CTFileName("data\\effect\\ska\\ArrowNormal.smc");	//Hardcoding
	}
	else if(iArrowType == 1 )
	{
		penMissile->m_eMissileType = MLT_SOMETHING;
		penMissile->m_fAfterDelay = 0.0f;
		penMissile->m_fnModel = CTFileName("data\\effect\\ska\\magic_arr.smc");	//Hardcoding
	}
	else if (iArrowType == 2)
	{
		penMissile->m_eMissileType = MLT_SOMETHING;
		penMissile->m_fAfterDelay = 0.0f;
		penMissile->m_fnModel = CTFileName("data\\effect\\ska\\invisible.smc");	//Hardcoding
	}
	else
	{
		penMissile->m_eMissileType = MLT_SOMETHING;
		penMissile->m_fAfterDelay = 0.0f;
		penMissile->m_fnModel = szMissileModel;
	}

	if (dcEntities != NULL)
	{
		for (int i=0 ; i<dcEntities->Count(); ++i)
		{
			penMissile->m_dcEnemies.Add(dcEntities->vectorSelectedEntities[i]);
		}
	}

	penMissile->m_bNoPeak = FALSE;
	penMissile->Initialize();
	
	penMissile->m_bNormalHit = TRUE;
	penMissile->m_bCritical = bCritical;
	penMissile->m_ulTargetID = penMissile->en_ulID;

	//Tag 및 Effect 관련 세팅
	if(penMissile->en_pmiModelInstance != NULL)
	{
		penMissile->en_pmiModelInstance->RefreshTagManager();
		penMissile->en_pmiModelInstance->m_tmSkaTagManager.SetOwner(penMissile);
		penMissile->m_pMyEffectGroup = StartEffectGroup(szArrowEffectName
			, &penMissile->en_pmiModelInstance->m_tmSkaTagManager, _pTimer->GetLerpedCurrentTick());
	}
}

//orbit type
//-1 : nothing
//0 : Default(invisible)
//1 : Cutter
void ShotMagicContinued(CEntity *penShoter, FLOAT3D vStartPos, FLOATquat3D qStartRot
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szMagicEffectName
				 , bool bCritical, INDEX iOrbitType, BOOL bDirectTag = FALSE)
{
	//입력 조건 검사.
	ASSERT(penShoter != NULL && penShoter->en_pmiModelInstance != NULL);
	ASSERT(penTarget != NULL && penTarget->en_pmiModelInstance != NULL && fMoveSpeed > 0.0f);
	if(!(penShoter != NULL && penShoter->en_pmiModelInstance != NULL)) return;
	if(!(penTarget != NULL && penTarget->en_pmiModelInstance != NULL && fMoveSpeed > 0.0f)) return;
	if(!(szHitEffectName != NULL && szMagicEffectName != NULL)) return;

	//missile 생성.
	CPlacement3D plMissile;
	plMissile.pl_PositionVector = vStartPos;
	plMissile.pl_OrientationAngle = GetEulerAngleFromQuaternion(qStartRot);
	//plMissile.pl_OrientationAngle = GetEulerAngleFromDir(penTarget->en_plPlacement.pl_PositionVector - penShoter->en_plPlacement.pl_PositionVector);
	CMissile *penMissile = (CMissile *)penShoter->en_pwoWorld->CreateEntity_t(plMissile, "classes\\missile.ecl");

	//missile 정보 세팅.
	penMissile->m_epSource = penShoter;
	penMissile->m_epTarget = penTarget;	//target entity
	penMissile->m_fMoveSpeed = fMoveSpeed;
	penMissile->m_strHitEffect = szHitEffectName;
	penMissile->m_eMissileType = MLT_SOMETHING;
	penMissile->m_bDirectTag = bDirectTag;
	penMissile->m_iFireObjectType = iOrbitType; // 스킬 오브젝트 타입
	if(iOrbitType == CSkill::MT_MAGECUTTER)
	{
		static FLOAT angleSpeed = 90.0f;
		penMissile->m_aAngleSpeed = angleSpeed;
		penMissile->m_fnModel = CTFileName("data\\effect\\ska\\mCutter.smc");	//Hardcoding
		penMissile->m_fAfterDelay = 0.0f;
	}
	else	//Default
	{
		penMissile->m_fnModel = CTFileName("data\\effect\\ska\\invisible.smc");	//Hardcoding
		penMissile->m_fAfterDelay = 0.0f;
	}

	penMissile->m_bNormalHit = FALSE;
	penMissile->m_fHorizonalOffset = 0;
	penMissile->m_fVerticalOffset = 0.15f;
	penMissile->m_bNoPeak = TRUE;

	penMissile->Initialize();

	if(iOrbitType == CSkill::MT_MAGECUTTER && penMissile->en_pmiModelInstance)
	{
		static FLOAT3D qRot(0,0,0);
		penMissile->en_pmiModelInstance->mi_qvOffset.qRot.FromEuler(qRot);
		penMissile->en_pmiModelInstance->mi_vStretch *= 0.35f; 
		penMissile->en_pmiModelInstance->mi_colModelColor = 0x828282FF;
		penMissile->en_pmiModelInstance->AddAnimation(
			penMissile->en_pmiModelInstance->FindFirstAnimationID(), AN_LOOPING|AN_CLEAR, 1, 0);
	}

	penMissile->m_ulTargetID = penMissile->en_ulID;
	penMissile->m_bCritical = bCritical;

	//Tag 및 Effect 관련 세팅
	if(penMissile->en_pmiModelInstance != NULL)
	{
		penMissile->en_pmiModelInstance->RefreshTagManager();
		penMissile->en_pmiModelInstance->m_tmSkaTagManager.SetOwner(penMissile);
		penMissile->m_pMyEffectGroup = StartEffectGroup(szMagicEffectName
			, &penMissile->en_pmiModelInstance->m_tmSkaTagManager, _pTimer->GetLerpedCurrentTick());
	}
}

void ShotFallDown(FLOAT3D vStartPos, FLOAT3D vToTargetDir, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szFallObjEffectName
				 , bool bCritical)
{
	ASSERT(szHitEffectName != NULL && szFallObjEffectName != NULL);
	ASSERT(vToTargetDir.Length() > 0.99f && vToTargetDir.Length() < 1.01f);

	//Target 위치 계산 by ray cast
	FLOAT3D vTargetPos;
	FLOAT fMaxY = -9999999.0f;
	BOOL bFloorHitted = FALSE;
	FLOAT3D vSource = vStartPos;
	FLOAT3D vTarget = vStartPos - vToTargetDir * 100.0f;
	CCastRay crRay(NULL, vSource, vTarget);
	crRay.cr_ttHitModels = CCastRay::TT_NONE; // CCastRay::TT_FULLSEETHROUGH;
	crRay.cr_bHitTranslucentPortals = TRUE;
	crRay.cr_bPhysical = TRUE;
	CEntity *pen = CEntity::GetPlayerEntity(0);
	pen->GetWorld()->CastRay(crRay);
	if( (crRay.cr_penHit != NULL) && (crRay.cr_vHit(2) > fMaxY)) 
	{
		bFloorHitted = TRUE;
	}
	if(bFloorHitted)
	{
		vTargetPos = crRay.cr_vHit;
	}
	else
	{
		return;
	}
	
	//missile 생성.
	CPlacement3D plMissile;
	plMissile.pl_PositionVector = vStartPos;
	plMissile.pl_OrientationAngle = GetEulerAngleFromDir(vTargetPos - vStartPos);
	CMissile *penMissile = (CMissile *)pen->en_pwoWorld->CreateEntity_t(plMissile, "classes\\missile.ecl");

	//missile 정보 세팅.
	penMissile->m_fnModel = CTFileName("data\\effect\\ska\\invisible.smc");	//Hardcoding
	penMissile->m_bEntityTarget = FALSE;
	penMissile->m_vTargetPos = vTargetPos;
	penMissile->m_fMoveSpeed = fMoveSpeed;
	penMissile->m_strHitEffect = szHitEffectName;
	penMissile->m_eMissileType = MLT_FALLDOWN;
	penMissile->m_bNormalHit = FALSE;
	penMissile->m_fHorizonalOffset = 0;
	penMissile->m_fVerticalOffset = 0.15f;
	penMissile->m_bNoPeak = TRUE;
	penMissile->Initialize();

	penMissile->m_bCritical = bCritical;
	penMissile->m_ulTargetID = penMissile->en_ulID;

	//Tag 및 Effect 관련 세팅
	if(penMissile->en_pmiModelInstance != NULL)
	{
		penMissile->en_pmiModelInstance->RefreshTagManager();
		penMissile->en_pmiModelInstance->m_tmSkaTagManager.SetOwner(penMissile);
		penMissile->m_pMyEffectGroup = StartEffectGroup(szFallObjEffectName
			, &penMissile->en_pmiModelInstance->m_tmSkaTagManager, _pTimer->GetLerpedCurrentTick());
	}
}

void ShotGoWaitBack(CEntity *penShoter, FLOAT3D vStartPos, FLOATquat3D qStartRot
				 , CEntity *penTarget, FLOAT fMoveSpeed, FLOAT fWaitTime
				 , const char *szHitEffectName, const char *szMoveEffectName
				 , bool bCritical
				 , FLOAT fHorizonalOffset = 0.0f, FLOAT fVerticalOffset = 0.0f	//-1.0f ~ 1.0f
				 )
{
	//입력 조건 검사.
	ASSERT(penShoter != NULL && penShoter->en_pmiModelInstance != NULL);
	ASSERT(penTarget != NULL && penTarget->en_pmiModelInstance != NULL && fMoveSpeed > 0.0f);
	ASSERT(szHitEffectName != NULL && szMoveEffectName != NULL);
	ASSERT(fHorizonalOffset <= 1.0f && fHorizonalOffset >= -1.0f);
	ASSERT(fVerticalOffset <= 1.0f && fVerticalOffset >= -1.0f);
	if(!(penShoter != NULL && penShoter->en_pmiModelInstance != NULL)) return;
	if(!(penTarget != NULL && penTarget->en_pmiModelInstance != NULL && fMoveSpeed > 0.0f)) return;
	if(!(szHitEffectName != NULL && szMoveEffectName != NULL)) return;

	//missile 생성.
	CPlacement3D plMissile;
	plMissile.pl_PositionVector = vStartPos;
	plMissile.pl_OrientationAngle = GetEulerAngleFromQuaternion(qStartRot);
	CMissile *penMissile = (CMissile *)penShoter->en_pwoWorld->CreateEntity_t(plMissile, "classes\\missile.ecl");

	//missile 정보 세팅.
	penMissile->m_epSource = penShoter;
	penMissile->m_epTarget = penTarget;	//target entity
	penMissile->m_fMoveSpeed = fMoveSpeed;
	penMissile->m_fHorizonalOffset = fHorizonalOffset;
	penMissile->m_fVerticalOffset = fVerticalOffset;
	penMissile->m_strHitEffect = szHitEffectName;
	penMissile->m_fAfterDelay = fWaitTime;
	penMissile->m_eMissileType = MLT_GOWAITBACK;
	penMissile->m_strMoveEffect = szMoveEffectName;

	penMissile->m_bNoPeak = FALSE;
	penMissile->Initialize();
	
	penMissile->m_bNormalHit = TRUE;
	penMissile->m_bCritical = bCritical;
	penMissile->m_ulTargetID = penMissile->en_ulID;

	//Tag 및 Effect 관련 세팅
	if(penMissile->en_pmiModelInstance != NULL)
	{
		penMissile->en_pmiModelInstance->RefreshTagManager();
		penMissile->en_pmiModelInstance->m_tmSkaTagManager.SetOwner(penMissile);
		penMissile->m_pMyEffectGroup = StartEffectGroup(szMoveEffectName
			, &penMissile->en_pmiModelInstance->m_tmSkaTagManager, _pTimer->GetLerpedCurrentTick());
	}
}

void ShotConnect(CEntity *penShoter, CEntity *penTarget, FLOAT fWaitTime
				 , const char *szHitEffectName, const char *szConnectEffectName)
{
	//입력 조건 검사.
	ASSERT(penShoter != NULL && penShoter->en_pmiModelInstance != NULL);
	ASSERT(penTarget != NULL && penTarget->en_pmiModelInstance != NULL);
	ASSERT(szHitEffectName != NULL && szConnectEffectName != NULL);
	if(!(penShoter != NULL && penShoter->en_pmiModelInstance != NULL)) return;
	if(!(penTarget != NULL && penTarget->en_pmiModelInstance != NULL)) return;
	if(!(szHitEffectName != NULL && szConnectEffectName != NULL)) return;

	//missile 생성.
	CPlacement3D plNew;
	FLOAT3D vSourcePos = penShoter->GetPlacement().pl_PositionVector;
	plNew.pl_PositionVector = (vSourcePos + penTarget->GetPlacement().pl_PositionVector) * 0.5f;
	FLOAT3D vDir = vSourcePos - plNew.pl_PositionVector;
	FLOAT fLen = vDir.Length();
	vDir /= fLen;
	fLen *= 2;
	plNew.pl_OrientationAngle = GetEulerAngleFromDir(vDir);
	plNew.pl_PositionVector(2) += 1.0f;//이걸 안하면 바닥에 붙어서 이펙트가 나옴.

	CMissile *penMissile = (CMissile *)penShoter->en_pwoWorld->CreateEntity_t(plNew, "classes\\missile.ecl");

	//missile 정보 세팅.
	penMissile->m_epSource = penShoter;
	penMissile->m_epTarget = penTarget;	//target entity
	penMissile->m_strHitEffect = szHitEffectName;
	penMissile->m_fAfterDelay = fWaitTime;
	penMissile->m_eMissileType = MLT_CONNECT;
	penMissile->m_pMyEffectGroup = NULL;

	penMissile->Initialize();
	penMissile->m_pMyEffectGroup = NULL;

	penMissile->m_ulTargetID = penMissile->en_ulID;

	//Tag 및 Effect 관련 세팅
	if(penMissile->en_pmiModelInstance != NULL)
	{
		penMissile->en_pmiModelInstance->RefreshTagManager();
		penMissile->en_pmiModelInstance->m_tmSkaTagManager.SetOwner(penMissile);
		penMissile->m_pMyEffectGroup = StartEffectGroup(szConnectEffectName
			, &penMissile->en_pmiModelInstance->m_tmSkaTagManager, _pTimer->GetLerpedCurrentTick());

		if(penMissile->m_pMyEffectGroup)
		{
			for(INDEX i=0; i<penMissile->m_pMyEffectGroup->GetEffectKeyVector().size(); ++i)
			{
				CEffect *pEffect = penMissile->m_pMyEffectGroup->GetEffectKeyVector()[i].m_pCreatedEffect;
				if(pEffect != NULL && pEffect->GetType() == ET_MDL)
				{
					FLOAT3D vNewStretch = ((CMdlEffect*)pEffect)->GetStretch();
					vNewStretch(2) = fLen;
					((CMdlEffect*)pEffect)->SetStretch(vNewStretch);
				}
			}
		}
	}
}


void CMissile::SetDefaultProperties(void) {
	m_bInit = FALSE ;
	m_eMissileType = MLT_NORMALARROW ;
	m_bEntityTarget = TRUE ;
	m_epTarget = NULL;
	m_epSource = NULL;
	m_vTargetPos = FLOAT3D(0 , 0 , 0);
	m_fMoveSpeed = 1.0f;
	m_fBeforeDelay = 0.0f;
	m_fAfterDelay = 3.5f;
	m_strHitEffect = "";
	m_strMoveEffect = "";
	m_fnModel = CTFILENAME("");
	m_fHorizonalOffset = 0.0f;
	m_fVerticalOffset = 0.0f;
	m_soSound.SetOwner(this);
	m_soSound.Stop(FALSE);
	m_bCritical = FALSE ;
	m_aAngleSpeed = 0.0f;
	m_bDirectTag = TRUE ;
	m_iFireObjectType = 0;
	CRationalEntity::SetDefaultProperties();
}

#line 452 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
void CMissile::RemakeSplinePath() 
#line 453 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 454 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(! m_bEntityTarget ){return ;}
#line 455 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bNoPeak )
#line 456 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 457 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . RemoveSample  (1);
#line 458 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 459 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 460 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 461 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . RemoveSample  (2);
#line 462 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 469 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vTargetPos  = m_epTarget  -> en_plPlacement  . pl_PositionVector ;
#line 470 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vTargetPos  (2) += m_vTargetCenterPos  (2);
#line 471 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . AddSample  (1.0f , vTargetPos );
#line 472 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . Prepare  ();
#line 473 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}

#line 475 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
void CMissile::InflictDirectDamage(CEntity * penToDamage,CEntity * penInflictor,enum DamageType dmtType,
#line 476 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 477 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 478 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
int  nHitType  = 0;
#line 480 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epSource  -> GetNetworkID  () == _pNetwork  -> MyCharacterInfo  . index )
#line 481 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 482 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
nHitType  = _pNetwork  -> MyCharacterInfo  . iHitEffectType ;
#line 483 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 485 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(nHitType  > 0)
#line 486 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 488 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
StartEffectGroup  (DEF_CAM_SHAKE  , _pTimer  -> CurrentTick  () , this  -> en_plPlacement  . pl_PositionVector  , FLOAT3D (0 , 0 , 0));
#line 489 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bCritical  = FALSE ;
#line 490 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 492 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bCritical )
#line 493 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 494 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
PlaySound  (m_soSound  , SOUND_BOW_CRITICAL  , SOF_3D  | SOF_VOLUMETRIC );
#line 495 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bCritical  = FALSE ;
#line 496 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 497 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 498 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 499 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
PlaySound  (m_soSound  , SOUND_BOW_BLOW  , SOF_3D  | SOF_VOLUMETRIC );
#line 500 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 502 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
fDamageAmmount  = 0;
#line 503 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(penToDamage )
#line 504 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 505 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(! (penToDamage  -> GetFlags  () & ENF_ALIVE )){return ;}
#line 506 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SE_Get_UIManagerPtr  () -> ShowDamage  (penToDamage  -> en_ulID );
#line 507 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
INDEX preHealth  , curHealth ;
#line 508 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
preHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 509 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
curHealth  = ((CUnit  *) penToDamage ) -> m_nCurrentHealth ;
#line 511 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(preHealth  != - 1 && curHealth  > preHealth )
#line 512 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 513 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
fDamageAmmount  = 1;
#line 514 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) penToDamage ) -> m_nCurrentHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 515 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 516 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 517 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 518 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
fDamageAmmount  = 0;
#line 519 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 521 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(penToDamage  == INFO  () -> GetTargetEntity  (eTARGET ))
#line 522 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 523 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(penToDamage  -> IsCharacter  ())
#line 524 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 525 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> UpdateTargetInfo  (((CUnit  *) penToDamage ) -> m_nMaxiHealth  , ((CUnit  *) penToDamage ) -> m_nCurrentHealth  , ((CCharacter  *) penToDamage ) -> m_nPkMode  , ((CCharacter  *) penToDamage ) -> m_nPkState  , ((CCharacter  *) penToDamage ) -> m_nLegit );
#line 526 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 527 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 528 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 529 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> UpdateTargetInfo  (((CUnit  *) penToDamage ) -> m_nMaxiHealth  , ((CUnit  *) penToDamage ) -> m_nCurrentHealth );
#line 530 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 531 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 533 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(penToDamage  -> IsEnemy  () && preHealth  >= 0)
#line 534 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 535 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
const INDEX iMobIndex  = ((CEnemy  *) penToDamage ) -> m_nMobDBIndex ;
#line 537 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(iMobIndex  == LORD_SYMBOL_INDEX )
#line 538 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 539 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CMobData  * MD  = CMobData  :: getData  (iMobIndex );
#line 540 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fMaxHealth  = ((CUnit  *) penToDamage ) -> m_nMaxiHealth ;
#line 542 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if((curHealth  <= fMaxHealth  * 0.25f))
#line 543 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 544 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(((CUnit  *) penToDamage ) -> m_nPlayActionNum  != 0)
#line 545 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 546 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword04.smc");
#line 547 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 548 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> GetModelInstance  () -> StretchModel  (FLOAT3D (MD  -> GetScale  () , MD  -> GetScale  () , MD  -> GetScale  ()));
#line 549 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) penToDamage ) -> m_nPlayActionNum  = 0;
#line 550 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 551 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 552 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else if((curHealth  <= fMaxHealth  * 0.50f))
#line 553 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 554 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(((CUnit  *) penToDamage ) -> m_nPlayActionNum  != 1)
#line 555 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 556 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword03.smc");
#line 557 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 558 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> GetModelInstance  () -> StretchModel  (FLOAT3D (MD  -> GetScale  () , MD  -> GetScale  () , MD  -> GetScale  ()));
#line 559 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) penToDamage ) -> m_nPlayActionNum  = 1;
#line 560 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 561 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 562 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else if((curHealth  <= fMaxHealth  * 0.75f))
#line 563 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 564 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(((CUnit  *) penToDamage ) -> m_nPlayActionNum  != 2)
#line 565 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 566 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword02.smc");
#line 567 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 568 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
penToDamage  -> GetModelInstance  () -> StretchModel  (FLOAT3D (MD  -> GetScale  () , MD  -> GetScale  () , MD  -> GetScale  ()));
#line 569 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) penToDamage ) -> m_nPlayActionNum  = 2;
#line 570 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 571 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 572 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 573 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 574 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 579 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(_pNetwork  -> m_bSingleMode )
#line 580 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 583 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(g_slZone  == EXTREAM_SINGLEDUNGEON  && ! ((CEnemy  *) penToDamage ) -> m_bBoss )
#line 584 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 585 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CEntity  :: InflictDirectDamage  (penToDamage  , penInflictor  , DMT_EXPLOSION  , 30.0f , vHitPoint  , vDirection );
#line 586 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 587 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 588 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 589 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CEntity  :: InflictDirectDamage  (penToDamage  , penInflictor  , DMT_EXPLOSION  , fDamageAmmount  , vHitPoint  , vDirection );
#line 590 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 591 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 592 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 593 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 594 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CEntity  :: InflictDirectDamage  (penToDamage  , penInflictor  , dmtType  , fDamageAmmount  , vHitPoint  , vDirection );
#line 595 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 597 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(penToDamage  -> IsEnemy  ())
#line 598 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 599 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(((CUnit  *) ((CEntity  *) penToDamage )) -> m_nCurrentHealth  <= 0)
#line 600 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 601 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CMobData  * MD  = CMobData  :: getData  (((CEnemy  *) (CEntity  *) penToDamage ) -> m_nMobDBIndex );
#line 602 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(! MD  -> IsCastleTower  ())
#line 603 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 604 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) ((CEntity  *) penToDamage )) -> DeathNow  ();
#line 605 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 606 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 607 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 610 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(MD  -> GetMobIndex  () >= 352 && MD  -> GetMobIndex  () <= 399)
#line 611 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 612 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) ((CEntity  *) penToDamage )) -> DeathNow  ();
#line 613 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 614 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 615 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 616 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) ((CEntity  *) penToDamage )) -> SetFlagOff  (ENF_ALIVE );
#line 617 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 618 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 619 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 620 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 621 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else if(penToDamage )
#line 622 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 623 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(((CUnit  *) ((CEntity  *) penToDamage )) -> m_nCurrentHealth  <= 0)
#line 624 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 625 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CUnit  *) ((CEntity  *) penToDamage )) -> DeathNow  ();
#line 626 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 627 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 628 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}

#line 630 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
void CMissile::HitTarget() 
#line 631 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 632 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_iFireObjectType  == CSkill  :: MT_DASH )
#line 633 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 634 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epSource  -> GetNetworkType  () == MSG_CHAR_PC  && 
#line 635 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epSource  -> GetNetworkID  () == _pNetwork  -> MyCharacterInfo  . index  && ! m_bMoveFail )
#line 636 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 637 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CPlacement3D plSource  = GetPlacement  ();
#line 639 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epSource  -> SetPlacement  (plSource );
#line 641 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
_pNetwork  -> SendSkillMessage  (401 , m_epTarget  , m_epTarget  -> GetNetworkID  () , TRUE  , 1);
#line 643 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 645 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bMoveFail )
#line 646 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 647 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epSource  -> SetPlacement  (GetPlacement  ());
#line 648 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 650 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATmatrix3D matrix ;
#line 651 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
MakeRotationMatrixFast  (matrix  , this  -> en_plPlacement  . pl_OrientationAngle );
#line 652 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vDir  (0 , 1 , 0);
#line 653 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
RotateVector  (vDir  , matrix );
#line 654 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 655 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT angle  = acos  (vDir  % vAxisY );
#line 656 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D axis  = vAxisY  * vDir ;
#line 657 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
axis  . Normalize  ();
#line 658 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATquat3D quat ;
#line 659 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
quat  . FromAxisAngle  (axis  , angle );
#line 660 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
StartEffectGroup  (m_strHitEffect  , _pTimer  -> GetLerpedCurrentTick  () , this  -> en_plPlacement  . pl_PositionVector  , quat );
#line 661 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 662 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else if((CEntity  *) m_epTarget  != NULL )
#line 663 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 664 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATmatrix3D matrix ;
#line 665 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
MakeRotationMatrixFast  (matrix  , this  -> en_plPlacement  . pl_OrientationAngle );
#line 666 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vDir  (0 , 1 , 0);
#line 667 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
RotateVector  (vDir  , matrix );
#line 668 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_dcEnemies  . Count  () > 0)
#line 669 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 670 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , FLOAT3D (0 , 0 , 0) , TRUE );
#line 671 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 672 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 673 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 674 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
this  -> InflictDirectDamage  (m_epTarget  , this  , DMT_NONE  , 1 , this  -> en_plPlacement  . pl_PositionVector  , vDir );
#line 675 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 677 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 678 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT angle  = acos  (vDir  % vAxisY );
#line 679 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D axis  = vAxisY  * vDir ;
#line 680 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
axis  . Normalize  ();
#line 681 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATquat3D quat ;
#line 682 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
quat  . FromAxisAngle  (axis  , angle );
#line 683 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
StartEffectGroup  (m_strHitEffect  , _pTimer  -> GetLerpedCurrentTick  () , this  -> en_plPlacement  . pl_PositionVector  , quat );
#line 684 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 685 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 686 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 687 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 688 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vDir  = (m_vInitPos  - m_vTargetPos ) . SafeNormalize  ();
#line 689 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT angle  = acos  (vDir  % vAxisY );
#line 690 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D axis  = vAxisY  * vDir ;
#line 691 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATquat3D quat ;
#line 693 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_dcEnemies  . Count  () > 0)
#line 694 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 695 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , FLOAT3D (0 , 0 , 0) , TRUE );
#line 696 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 698 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
quat  . FromAxisAngle  (axis  , angle );
#line 699 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
StartEffectGroup  (m_strHitEffect  , _pTimer  -> GetLerpedCurrentTick  () , this  -> en_plPlacement  . pl_PositionVector  , quat );
#line 700 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 701 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}

#line 702 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D CMissile::GetBoundingSphereInfo(CEntity * pen) 
#line 703 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 704 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pen  == NULL ){return FLOAT3D (1 , 0 , 1);}
#line 706 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pen  -> GetRenderType  () == RT_SKAMODEL  || pen  -> GetRenderType  () == RT_SKAEDITORMODEL )
#line 707 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 708 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pen  -> en_pmiModelInstance  != NULL )
#line 709 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 710 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATaabbox3D bbox ;
#line 711 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pen  -> en_pmiModelInstance  -> GetCurrentColisionBox  (bbox );
#line 712 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pen  -> en_pmiModelInstance  -> mi_vStretch ;
#line 713 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vLength  = bbox  . Max  () - bbox  . Min  ();
#line 714 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vLength  (2) = 0;
#line 715 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fStretchXY  = Max  (pen  -> en_pmiModelInstance  -> mi_vStretch  (1) , pen  -> en_pmiModelInstance  -> mi_vStretch  (3));
#line 716 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return FLOAT3D (vLength  . Length  () * 0.40f * fStretchXY  
#line 717 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, bbox  . Min  () (2) * pen  -> en_pmiModelInstance  -> mi_vStretch  (2) 
#line 718 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, bbox  . Max  () (2) * pen  -> en_pmiModelInstance  -> mi_vStretch  (2));
#line 719 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 720 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 721 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else if(pen  -> GetRenderType  () == RT_MODEL  || pen  -> GetRenderType  () == RT_EDITORMODEL )
#line 722 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 723 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pen  -> en_pmoModelObject  != NULL )
#line 724 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 725 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATaabbox3D bbox ;
#line 726 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pen  -> en_pmoModelObject  -> GetCurrentFrameBBox  (bbox );
#line 727 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vLength  = bbox  . Max  () - bbox  . Min  ();
#line 728 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vLength  (2) = 0;
#line 729 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return FLOAT3D (vLength  . Length  () * 0.40f , bbox  . Min  () (2) , bbox  . Max  () (2));
#line 730 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fStretchXY  = Max  (pen  -> en_pmoModelObject  -> mo_Stretch  (1) , pen  -> en_pmoModelObject  -> mo_Stretch  (3));
#line 731 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return FLOAT3D (vLength  . Length  () * 0.40f * fStretchXY  
#line 732 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, bbox  . Min  () (2) * pen  -> en_pmoModelObject  -> mo_Stretch  (2) 
#line 733 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, bbox  . Max  () (2) * pen  -> en_pmoModelObject  -> mo_Stretch  (2));
#line 734 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 735 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 736 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return FLOAT3D (1.0f , 0.0f , 1.0f);
#line 737 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}

#line 738 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
void CMissile::CalcPalacementOnPath(FLOAT curRatio,FLOAT oldRatio,FLOAT processedTime,CPlacement3D & newPlace) 
#line 739 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 740 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vCurrentPos  = GetSpline  () . Value  (curRatio );
#line 741 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vCurrentDir  = vCurrentPos  - GetSpline  () . Value  (oldRatio );
#line 743 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_iFireObjectType  == CSkill  :: MT_DASH )
#line 744 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 745 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fLeftDistance  += vCurrentDir  . Length  ();
#line 747 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vSource  = GetSpline  () . Value  (oldRatio );
#line 748 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vTarget  = vCurrentPos ;
#line 749 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CCastRay  crRay  (this  , vSource  , vTarget );
#line 750 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
crRay  . cr_ttHitModels  = CCastRay  :: TT_NONE ;
#line 751 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
crRay  . cr_bHitTranslucentPortals  = TRUE ;
#line 752 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
crRay  . cr_bPhysical  = TRUE ;
#line 753 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetWorld  () -> CastRay  (crRay );
#line 754 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(crRay  . cr_penHit  != NULL )
#line 755 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 756 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bMoveFail  = TRUE ;
#line 757 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 758 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 760 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
ANGLE3D aCurrentRot ;
#line 761 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_aAngleSpeed  != 0.0f)
#line 762 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 763 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATquat3D quatCurrent ;
#line 765 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
quatCurrent  . FromAxisAngle  (vCurrentDir  , RadAngle  (m_aAngleSpeed  * processedTime ));
#line 767 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
aCurrentRot  = GetEulerAngleFromQuaternion  (quatCurrent );
#line 768 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 769 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 770 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 771 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
aCurrentRot  = GetEulerAngleFromDir  (vCurrentDir );
#line 772 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 774 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
newPlace  . pl_OrientationAngle  = aCurrentRot ;
#line 775 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
newPlace  . pl_PositionVector  = vCurrentPos ;
#line 776 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}

#line 777 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
BOOL CMissile::PathMove(FLOAT fDeltaTime) 
#line 778 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 780 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
RemakeSplinePath  ();
#line 782 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CPlacement3D plNew ;
#line 783 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fOldRatio  = m_fRatio ;
#line 784 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fRatio  += m_fTimeRatio  * fDeltaTime ;
#line 785 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fTimeFromStart  += fDeltaTime ;
#line 786 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CalcPalacementOnPath  (m_fRatio  , fOldRatio  - m_fTimeRatio  * 0.001f , m_fTimeFromStart  , plNew );
#line 788 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_iFireObjectType  == CSkill  :: MT_DASH )
#line 789 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 798 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bMoveFail )
#line 799 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 800 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE ;
#line 801 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 804 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_fRatio  >= 0.8f)
#line 805 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 806 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetPlacement  (plNew );
#line 807 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE ;
#line 808 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 809 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 811 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetPlacement  (plNew );
#line 814 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_fRatio  >= 1.0f){return TRUE ;}
#line 815 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else {return FALSE ;}
#line 816 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
BOOL CMissile::
#line 818 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMissile_Main
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMissile::Main expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 820 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bEntityTarget  && m_epTarget  . ep_pen  == NULL )
#line 821 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 822 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
InitAsVoid  ();
#line 823 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetFlagOff  (ENF_ALIVE );
#line 824 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 825 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Destroy  (FALSE );
#line 826 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Return(STATE_CURRENT,EVoid());
#line 826 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE;
#line 827 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 828 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
InitAsSkaModel  ();
#line 829 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_soSound  . Set3DParameters  (30.0f , 5.0f , 1.0f , 1.0f);
#line 832 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
try {
#line 833 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_fnModel  . GetName  () != ""){SetSkaModel_t  (m_fnModel );}
#line 834 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 835 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 836 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fnModel  = CTFileName ("data\\effect\\ska\\invisible.smc");
#line 837 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetSkaModel_t  (m_fnModel );
#line 838 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 839 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_eMissileType  == MLT_NORMALARROW )
#line 840 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 841 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
en_pmiModelInstance  -> mi_qvOffset  . vPos  = FLOAT3D (0 , 0 , 0);
#line 842 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
en_pmiModelInstance  -> mi_qvOffset  . qRot  = FLOATquat3D (1 , 0 , 0 , 0);
#line 843 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 845 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 846 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
catch  (char  *)
#line 847 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 848 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
ASSERTALWAYS  ("Loading Fail.");
#line 849 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 852 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
ModelChangeNotify  ();
#line 853 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 854 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 856 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetFlags  (GetFlags  () & ~ ENF_CLUSTERSHADOWS );
#line 857 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(en_pmiModelInstance ){en_pmiModelInstance  -> SetCurrentColisionBoxIndex  (0);}
#line 859 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_eMissileType  == MLT_CONNECT )
#line 860 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 862 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epSource  . ep_pen  == NULL )
#line 863 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 864 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetFlagOff  (ENF_ALIVE );
#line 865 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 866 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Destroy  (FALSE );
#line 867 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Return(STATE_CURRENT,EVoid());
#line 867 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE;
#line 868 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 869 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fTimeFromStart  = 0.0f;
#line 871 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(GetModelInstance  ())
#line 872 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 873 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CSkaTag  tag ;
#line 874 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
tag  . SetName  ("__ROOT");
#line 875 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 876 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 878 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT, STATE_CMissile_Connect, TRUE, EVoid());return TRUE;
#line 879 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 880 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 881 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 884 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_iFireObjectType  == CSkill  :: MT_DASH )
#line 885 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 886 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epSource  -> IsFlagOff  (ENF_INVISIBLE ))
#line 887 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 888 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epSource  -> SetFlagOn  (ENF_INVISIBLE );
#line 889 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 890 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 892 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bReached  = FALSE ;
#line 893 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bReached2  = FALSE ;
#line 894 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fRatio  = 0.0f;
#line 895 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fTimeFromStart  = 0.0f;
#line 896 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fLeftDistance  = 0.0f;
#line 897 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bMoveFail  = FALSE ;
#line 899 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(GetModelInstance  ())
#line 900 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 901 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CSkaTag  tag ;
#line 902 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
tag  . SetName  ("__ROOT");
#line 903 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 904 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 907 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fHorizonalOffset  = Clamp  (m_fHorizonalOffset  , - 1.0f , 1.0f);
#line 908 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fVerticalOffset  = Clamp  (m_fVerticalOffset  , - 1.0f , 1.0f);
#line 909 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_vInitPos  = en_plPlacement  . pl_PositionVector ;
#line 910 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bEntityTarget )
#line 911 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 912 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CTag  * pTag  = m_epTarget  -> GetModelInstance  () -> m_tmSkaTagManager  . Find  ("CENTER");
#line 913 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pTag )
#line 914 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 915 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_vTargetCenterPos  = pTag  -> GetOffsetPos  ();
#line 916 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
RotateVector  (m_vTargetCenterPos  , pTag  -> GetOffsetRot  ());
#line 917 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 918 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 919 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 920 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_vTargetCenterPos  = m_epTarget  -> en_plPlacement  . pl_PositionVector ;
#line 921 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 922 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 925 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vDist ;
#line 926 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bEntityTarget )
#line 927 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 928 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vDist  = m_epTarget  -> en_plPlacement  . pl_PositionVector  - this  -> en_plPlacement  . pl_PositionVector ;
#line 929 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 930 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 931 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 932 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vDist  = m_vTargetPos  - this  -> en_plPlacement  . pl_PositionVector ;
#line 933 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 934 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fDist  = vDist  . Length  ();
#line 935 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fTimeRatio  = m_fMoveSpeed  / fDist ;
#line 936 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
static FLOAT fNoPeakLimit  = 3.0f;
#line 937 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(! m_bNoPeak ){m_bNoPeak  = fDist  < fNoPeakLimit ;}
#line 938 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_pssPath  = new  cubic_spline ;
#line 939 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . AddSample  (0.0f , m_vInitPos );
#line 940 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(! m_bNoPeak )
#line 941 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 942 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vDist  *= 0.3f;
#line 943 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
static FLOAT fDistRatio  = 0.10f;
#line 944 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vDist  (2) += fDist  * fDistRatio  * (m_fVerticalOffset  * 0.5f + 0.5f);
#line 945 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_fHorizonalOffset  != 0.0f)
#line 946 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 947 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATquat3D qRot ;
#line 948 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
static FLOAT fAngle  = 15.0f;
#line 949 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
qRot  . FromEuler  (ANGLE3D (fAngle  * m_fHorizonalOffset  , 0 , 0));
#line 950 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vDist  = VectorRotate  (vDist  , qRot );
#line 951 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 952 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . AddSample  (0.4f , vDist  + this  -> en_plPlacement  . pl_PositionVector );
#line 953 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 954 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bEntityTarget )
#line 955 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 956 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
RemakeSplinePath  ();
#line 957 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 958 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 959 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 960 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . AddSample  (1.0f , m_vTargetPos );
#line 961 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . Prepare  ();
#line 962 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 964 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CPlacement3D plNew ;
#line 965 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fRatio  += m_fTimeRatio  * 0.001f;
#line 966 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CalcPalacementOnPath  (m_fRatio  , 0 , 0.001f , plNew );
#line 967 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetPlacement  (plNew );
#line 969 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT, STATE_CMissile_PreBehavior, TRUE, EVoid());return TRUE;
#line 970 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 972 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
delete  m_pssPath ;
#line 973 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_pssPath  = NULL ;
#line 974 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Destroy  (FALSE );
#line 975 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Return(STATE_CURRENT,EVoid());
#line 975 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CMissile::
#line 978 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
PreBehavior(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMissile_PreBehavior
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMissile::PreBehavior expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 980 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(0.01f);
Jump(STATE_CURRENT, 0x03ed0001, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed0001_PreBehavior_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0001
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed0002, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed0002_PreBehavior_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0002
;
#line 981 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(! m_bInit )
#line 982 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 983 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fLastTime  = _pTimer  -> GetHighPrecisionTimer  () . GetSeconds  ();
#line 984 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bInit  = TRUE ;
#line 985 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 987 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_fBeforeDelay  <= _pTimer  -> TickQuantum ){m_fBeforeDelay  = _pTimer  -> TickQuantum  * 0.01f;}
#line 988 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(m_fBeforeDelay );
Jump(STATE_CURRENT, 0x03ed0003, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed0003_PreBehavior_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed0004, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed0004_PreBehavior_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0004
;
#line 990 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT, STATE_CMissile_DoBehavior, TRUE, EVoid());return TRUE;
#line 992 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Return(STATE_CURRENT,EVoid());
#line 992 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CMissile::
#line 994 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
PostBehavior(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMissile_PostBehavior
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMissile::PostBehavior expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 996 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(0.001f);
Jump(STATE_CURRENT, 0x03ed0006, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed0006_PostBehavior_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0006
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed0007, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed0007_PostBehavior_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0007
;
#line 999 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_pMyEffectGroup  != NULL  && CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pMyEffectGroup ))
#line 1000 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1001 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_pMyEffectGroup  -> Stop  (0);
#line 1002 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1003 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else m_pMyEffectGroup  = NULL ;
#line 1006 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epTarget  . ep_pen  != NULL  && m_epTarget  -> en_pmiModelInstance  != NULL )
#line 1007 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1008 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_eMissileType  == MLT_NORMALARROW  
#line 1009 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
&& ((CEnemy  *) (CEntity  *) m_epTarget ) -> m_nMobDBIndex  != 82)
#line 1010 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1012 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CSkaTag  * pSkaTag  = NULL ;
#line 1013 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
INDEX temp  = m_epTarget  -> en_pmiModelInstance  -> m_tmSkaTagManager  . GetTempValue  ();
#line 1014 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
for(m_iIndex  = 0;m_iIndex  < 31;++ m_iIndex ){if(! (temp  & (0x00000001 << m_iIndex ))){break ;}}
#line 1015 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_iIndex  != 31)
#line 1016 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1017 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_strHitTag  . PrintF  ("TEMP%x" , 0x00000001 << m_iIndex );
#line 1018 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epTarget  -> en_pmiModelInstance  -> m_tmSkaTagManager  . SetTempValue  (temp  | (0x00000001 << m_iIndex ));
#line 1019 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pSkaTag  = (CSkaTag  *) m_epTarget  -> en_pmiModelInstance  -> m_tmSkaTagManager  . Find  (m_strHitTag  . str_String );
#line 1020 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pSkaTag  == NULL )
#line 1021 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1028 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vTarget  = m_epTarget  -> en_plPlacement  . pl_PositionVector ;
#line 1029 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vTarget  (2) += m_vTargetCenterPos  (2);
#line 1030 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vDist  = vTarget  - m_vInitPos ;
#line 1031 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT dist  = vDist  . Length  ();
#line 1032 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
INDEX iBoneID ;
#line 1033 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
MeshLOD  * pmlod  = NULL ;
#line 1034 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pSkaTag  = new  CSkaTag ;
#line 1035 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fDist  = RM_TestRayCastHit  (
#line 1036 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
* m_epTarget  -> en_pmiModelInstance  
#line 1037 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, m_epTarget  -> en_mRotation  
#line 1038 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, m_epTarget  -> en_plPlacement  . pl_PositionVector  
#line 1039 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, m_vInitPos  
#line 1040 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, vTarget  
#line 1041 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, dist  
#line 1042 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, & iBoneID  
#line 1043 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, pSkaTag );
#line 1044 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(fDist  == 1e6)
#line 1045 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1046 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
delete  pSkaTag ;
#line 1047 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pSkaTag  = NULL ;
#line 1048 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1049 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else 
#line 1050 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1051 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pSkaTag  -> SetName  (m_strHitTag  . str_String );
#line 1052 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOATquat3D quatDir  , quatEn  , quatEnMi ;
#line 1053 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
quatEn  . FromEuler  (m_epTarget  -> en_plPlacement  . pl_OrientationAngle );
#line 1054 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
quatEnMi  = quatEn  . Inv  () * m_epTarget  -> en_pmiModelInstance  -> mi_qvOffset  . qRot  . Inv  ();
#line 1055 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
quatDir  . FromEuler  (GetEulerAngleFromDir  (vDist  . SafeNormalize  ()));
#line 1057 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pSkaTag  -> SetOffsetRot  (quatEnMi  * quatDir );
#line 1059 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D pos  = pSkaTag  -> GetOffsetPos  () - m_epTarget  -> en_plPlacement  . pl_PositionVector  - m_epTarget  -> en_pmiModelInstance  -> mi_qvOffset  . vPos ;
#line 1060 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pos  = VectorRotate  (pos  , quatEnMi );
#line 1061 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
pSkaTag  -> SetOffsetPos  (pos );
#line 1063 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epTarget  -> en_pmiModelInstance  -> m_tmSkaTagManager  . RegisterNoCopy  (pSkaTag );
#line 1064 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1065 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1066 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1067 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pSkaTag  != NULL )
#line 1068 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1069 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CEffectGroup  * pEG  = StartEffectGroup  (
#line 1070 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
"Normal Arrow" 
#line 1071 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, _pTimer  -> GetLerpedCurrentTick  () 
#line 1072 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
, ptr_tag  ((CTag  *) pSkaTag ));
#line 1073 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pEG ){pEG  -> Stop  (m_fAfterDelay );}
#line 1074 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
this  -> SetFlagOn  (ENF_HIDDEN );
#line 1075 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1076 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1077 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
else if(m_eMissileType  == MLT_GOWAITBACK )
#line 1078 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1079 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1080 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1082 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_fAfterDelay  <= _pTimer  -> TickQuantum ){m_fAfterDelay  = _pTimer  -> TickQuantum  * 0.01f;}
#line 1083 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(m_fAfterDelay );
Jump(STATE_CURRENT, 0x03ed0008, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed0008_PostBehavior_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0008
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed0009, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed0009_PostBehavior_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0009
;
#line 1085 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_eMissileType  == MLT_GOWAITBACK  && m_epSource  != NULL  && m_epSource  -> en_pmiModelInstance  != NULL )
#line 1086 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1087 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bReached  = FALSE ;
#line 1088 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bReached2  = FALSE ;
#line 1089 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fRatio  = 0.0f;
#line 1090 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fTimeFromStart  = 0.0f;
#line 1091 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bNoPeak  = TRUE ;
#line 1092 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_eMissileType  = MLT_SOMETHING ;
#line 1093 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fAfterDelay  = 0.0f;
#line 1094 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_strHitEffect  += "\'";
#line 1096 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_vInitPos  = m_epTarget  -> GetPlacement  () . pl_PositionVector ;
#line 1097 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vDist  = m_vInitPos  - m_epSource  -> GetPlacement  () . pl_PositionVector ;
#line 1098 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fDist  = vDist  . Length  ();
#line 1099 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fTimeRatio  = m_fMoveSpeed  / fDist ;
#line 1100 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . Clear  ();
#line 1101 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . AddSample  (0.0f , m_vInitPos );
#line 1102 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . AddSample  (1.0f , m_epSource  -> GetPlacement  () . pl_PositionVector );
#line 1103 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epTarget  = m_epSource ;
#line 1104 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
GetSpline  () . Prepare  ();
#line 1105 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
RemakeSplinePath  ();
#line 1106 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CPlacement3D plNew ;
#line 1107 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fRatio  += m_fTimeRatio  * 0.001f;
#line 1108 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CalcPalacementOnPath  (m_fRatio  , 0 , 0.001f , plNew );
#line 1109 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetPlacement  (plNew );
#line 1110 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_strMoveEffect  += "\'";
#line 1111 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_pMyEffectGroup  = StartEffectGroup  (m_strMoveEffect  , & GetModelInstance  () -> m_tmSkaTagManager  , _pTimer  -> GetLerpedCurrentTick  ());
#line 1112 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bInit  = FALSE ;
#line 1113 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT, STATE_CMissile_PreBehavior, TRUE, EVoid());return TRUE;
#line 1114 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1116 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
this  -> SetFlagOn  (ENF_HIDDEN );
#line 1117 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_strHitTag  != "" && m_epTarget  -> en_RenderType  != RT_NONE  && m_epTarget  -> en_pmiModelInstance )
#line 1118 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1119 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epTarget  -> en_pmiModelInstance  -> m_tmSkaTagManager  . Unregister  (m_strHitTag  . str_String );
#line 1120 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epTarget  -> en_pmiModelInstance  -> m_tmSkaTagManager  . SetTempValue  (
#line 1121 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epTarget  -> en_pmiModelInstance  -> m_tmSkaTagManager  . GetTempValue  () & 
#line 1122 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
(~ (0x00000001 << m_iIndex )));
#line 1123 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1125 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epSource  != NULL )
#line 1126 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1127 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epSource  -> GetNetworkID  () == _pNetwork  -> MyCharacterInfo  . index )
#line 1128 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1129 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_epSource  -> IsFlagOn  (ENF_INVISIBLE ))
#line 1130 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1131 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_epSource  -> SetFlagOff  (ENF_INVISIBLE );
#line 1132 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1133 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1134 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1136 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bInit  = FALSE ;
#line 1137 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetFlagOff  (ENF_ALIVE );
#line 1138 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetFlagOn  (ENF_CLIENTHANDLING );
#line 1139 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
delete  m_pssPath ;
#line 1140 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_pssPath  = NULL ;
#line 1141 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Destroy  (FALSE );
#line 1143 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Return(STATE_CURRENT,EVoid());
#line 1143 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CMissile::
#line 1145 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
DoBehavior(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMissile_DoBehavior
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMissile::DoBehavior expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 1147 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT,0x03ed000d, FALSE, EInternal());return TRUE;}BOOL CMissile::H0x03ed000d_DoBehavior_03(const CEntityEvent &__eeInput)
#line 1148 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed000d
if(!(! m_bReached )){ Jump(STATE_CURRENT,0x03ed000e, FALSE, EInternal());return TRUE;}
#line 1149 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(0.01f);
Jump(STATE_CURRENT, 0x03ed000b, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed000b_DoBehavior_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed000b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed000c, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed000c_DoBehavior_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed000c
;
#line 1150 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_bEntityTarget  && m_epTarget  . ep_pen  == NULL )
#line 1151 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1152 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT, STATE_CMissile_PostBehavior, TRUE, EVoid());return TRUE;
#line 1153 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1155 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fCurrent  = _pTimer  -> GetHighPrecisionTimer  () . GetSeconds  ();
#line 1156 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fDeltaTime  = fCurrent  - m_fLastTime ;
#line 1157 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fLastTime  = fCurrent ;
#line 1159 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(! m_bReached )
#line 1160 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1161 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_bReached  = PathMove  (m_fDeltaTime );
#line 1162 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}Jump(STATE_CURRENT,0x03ed000d, FALSE, EInternal());return TRUE;
#line 1167 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}BOOL CMissile::H0x03ed000e_DoBehavior_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed000e

#line 1169 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
HitTarget  ();
#line 1171 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT, STATE_CMissile_PostBehavior, TRUE, EVoid());return TRUE;
#line 1173 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Return(STATE_CURRENT,EVoid());
#line 1173 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CMissile::
#line 1175 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Connect(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CMissile_Connect
	ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CMissile::Connect expects 'EVoid' as input!");	const EVoid &e = (const EVoid &)__eeInput;
#line 1177 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x03ed0010, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed0010_Connect_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0010
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed0011, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed0011_Connect_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0011
;
#line 1179 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
m_fLastTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 1180 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
StartEffectGroup  (m_strHitEffect  , & m_epTarget  -> GetModelInstance  () -> m_tmSkaTagManager  , m_fLastTime );
#line 1182 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x03ed0012, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed0012_Connect_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0012
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed0013, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed0013_Connect_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0013
;
#line 1183 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Jump(STATE_CURRENT,0x03ed0016, FALSE, EInternal());return TRUE;}BOOL CMissile::H0x03ed0016_Connect_07(const CEntityEvent &__eeInput)
#line 1184 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0016
if(!(_pTimer  -> GetLerpedCurrentTick  () - m_fLastTime  < m_fAfterDelay )){ Jump(STATE_CURRENT,0x03ed0017, FALSE, EInternal());return TRUE;}
#line 1185 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CPlacement3D plNew ;
#line 1186 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vSourcePos  = m_epSource  -> GetPlacement  () . pl_PositionVector ;
#line 1187 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
plNew  . pl_PositionVector  = (vSourcePos  + m_epTarget  -> GetPlacement  () . pl_PositionVector ) * 0.5f;
#line 1188 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vDir  = vSourcePos  - plNew  . pl_PositionVector ;
#line 1189 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT fLen  = vDir  . Length  ();
#line 1190 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vDir  /= fLen ;
#line 1191 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
fLen  *= 2;
#line 1192 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
plNew  . pl_OrientationAngle  = GetEulerAngleFromDir  (vDir );
#line 1193 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
plNew  . pl_PositionVector  (2) += 1.0f;
#line 1194 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetPlacement  (plNew );
#line 1196 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_pMyEffectGroup )
#line 1197 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1198 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
for(INDEX i  = 0;i  < m_pMyEffectGroup  -> GetEffectKeyVector  () . size  ();++ i )
#line 1199 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1200 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
CEffect  * pEffect  = m_pMyEffectGroup  -> GetEffectKeyVector  () [ i  ] . m_pCreatedEffect ;
#line 1201 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(pEffect  != NULL  && pEffect  -> GetType  () == ET_MDL )
#line 1202 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1203 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
FLOAT3D vNewStretch  = ((CMdlEffect  *) pEffect ) -> GetStretch  ();
#line 1204 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
vNewStretch  (2) = fLen ;
#line 1205 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
((CMdlEffect  *) pEffect ) -> SetStretch  (vNewStretch );
#line 1206 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1207 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1208 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1210 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x03ed0014, FALSE, EBegin());return TRUE;}BOOL CMissile::H0x03ed0014_Connect_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0014
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x03ed0015, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CMissile::H0x03ed0015_Connect_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0015
;Jump(STATE_CURRENT,0x03ed0016, FALSE, EInternal());return TRUE;
#line 1211 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}BOOL CMissile::H0x03ed0017_Connect_08(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x03ed0017

#line 1213 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
if(m_pMyEffectGroup )
#line 1214 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
{
#line 1215 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
StopEffectGroupIfValid  (m_pMyEffectGroup  , 0.1f);
#line 1216 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
}
#line 1217 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Destroy  (FALSE );
#line 1218 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
Return(STATE_CURRENT,EVoid());
#line 1218 "C:/Users/pwesty/Desktop/SD-Source/nov-source/Reco_Csrc/EntitiesMP/Missile.es"
return TRUE; ASSERT(FALSE); return TRUE;};