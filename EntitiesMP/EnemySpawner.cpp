/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"

#include "StdH.h"
#include "EntitiesMP/TacticsHolder.h"
#include <Engine/GlobalDefinition.h>
#include <Engine/Network/MessageDefine.h>

#include <EntitiesMP/EnemySpawner.h>
#include <EntitiesMP/EnemySpawner_tables.h>
CEntityEvent *ENetSpawnEntity::MakeCopy(void) { CEntityEvent *peeCopy = new ENetSpawnEntity(*this); return peeCopy;}
SLONG ENetSpawnEntity::GetSizeOf(void) { return sizeof(*this);}
ENetSpawnEntity::ENetSpawnEntity() : CEntityEvent(EVENTCODE_ENetSpawnEntity) {;
 ClearToDefault(ulEntityID);
 ClearToDefault(bCopy);
 ClearToDefault(vPosition);
 ClearToDefault(vOrientation);
};
BOOL ENetSpawnEntity::CheckIDs(void) { return TRUE ; }
void CEnemySpawner::SetDefaultProperties(void) {
  m_penTarget = NULL;
  m_strDescription = "";
  m_strName = "Enemy spawner";
  m_fInnerCircle = 0.0f;
  m_fOuterCircle = 0.0f;
  m_tmDelay = 0.0f;
  m_tmSingleWait = 0.1f;
  m_tmGroupWait = 0.1f;
  m_ctGroupSize = 1;
  m_ctTotal = 1;
  m_penPatrol = NULL;
  m_estType = EST_SIMPLE ;
  m_bTelefrag = FALSE ;
  m_bSpawnEffect = TRUE ;
  m_bDoubleInSerious = FALSE ;
  m_penSeriousTarget = NULL;
  m_bFirstPass = TRUE ;
  m_soSpawn.SetOwner(this);
m_soSpawn.Stop(FALSE);
  m_iInGroup = 0;
  m_iEnemiesTriggered = 0;
  m_penTacticsHolder = NULL;
  m_bTacticsAutostart = TRUE ;
  m_iMobType = 0;
  m_bAngleFix = FALSE ;
  m_bShowSpawnEffect = FALSE ;
  CRationalEntity::SetDefaultProperties();
}
  
#line 80 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
void CEnemySpawner::Precache(void) 
#line 81 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 82 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
PrecacheClass  (CLASS_BASIC_EFFECT  , BET_TELEPORT );
#line 83 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 86 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
const CTString & CEnemySpawner::GetDescription(void)const 
#line 87 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 88 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
((CTString &) m_strDescription ) . PrintF  ("-><none>");
#line 89 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penTarget  != NULL )
#line 90 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 91 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
((CTString &) m_strDescription ) . PrintF  ("->%s" , m_penTarget  -> GetName  ());
#line 92 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penSeriousTarget  != NULL )
#line 93 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 94 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
((CTString &) m_strDescription ) . PrintF  ("->%s, %s" , 
#line 95 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penTarget  -> GetName  () , m_penSeriousTarget  -> GetName  ());
#line 96 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 97 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 98 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
((CTString &) m_strDescription ) = EnemySpawnerType_enum  . NameForValue  (INDEX (m_estType )) 
#line 99 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
+ m_strDescription ;
#line 100 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return m_strDescription ;
#line 101 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 105 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
BOOL CEnemySpawner::CheckTemplateValid(CEntity * pen) 
#line 106 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 107 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(pen  == NULL  || ! IsDerivedFromClass  (pen  , & CEnemyBase_DLLClass )){
#line 108 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return FALSE ;
#line 109 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 110 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_TELEPORTER ){
#line 111 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return ! (((CEnemyBase  &) * pen ) . m_bTemplate );
#line 112 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}else {
#line 113 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return ((CEnemyBase  &) * pen ) . m_bTemplate ;
#line 114 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 115 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 117 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
BOOL CEnemySpawner::IsTargetValid(SLONG slPropertyOffset,CEntity * penTarget) 
#line 118 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 119 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(slPropertyOffset  == offsetof  (CEnemySpawner  , m_penTarget ))
#line 120 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 121 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return CheckTemplateValid  (penTarget );
#line 122 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 123 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else if(slPropertyOffset  == offsetof  (CEnemySpawner  , m_penPatrol ))
#line 124 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 125 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return (penTarget  != NULL  && IsDerivedFromClass  (penTarget  , & CEnemyMarker_DLLClass ));
#line 126 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 127 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else if(slPropertyOffset  == offsetof  (CEnemySpawner  , m_penSeriousTarget ))
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 129 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return CheckTemplateValid  (penTarget );
#line 130 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else if(slPropertyOffset  == offsetof  (CEnemySpawner  , m_penTacticsHolder ))
#line 132 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return IsOfClass  (penTarget  , & CTacticsHolder_DLLClass );
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 135 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return CEntity  :: IsTargetValid  (slPropertyOffset  , penTarget );
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
BOOL CEnemySpawner::FillEntityStatistics(EntityStats * pes) 
#line 141 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 142 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penTarget  == NULL ){return FALSE ;}
#line 143 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penTarget  -> FillEntityStatistics  (pes );
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pes  -> es_ctCount  = m_ctTotal ;
#line 145 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pes  -> es_strName  += " (spawned)";
#line 146 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penSeriousTarget  != NULL ){
#line 147 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pes  -> es_strName  += " (has serious)";
#line 148 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 149 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE ;
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  BOOL CEnemySpawner::IsEnemySpawner(void)const 
#line 153 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE ;
#line 155 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
void CEnemySpawner::SpawnEntity(BOOL bCopy) 
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 162 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! _pNetwork  -> IsServer  ())
#line 163 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 164 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return ;
#line 165 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 168 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(_pNetwork  -> m_bSingleMode  && m_iMobType  != 0 && _cmiComm  . IsNetworkOn  ())
#line 169 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 170 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fOuterCircle  = ClampDn  (m_fOuterCircle  , 0.0f);
#line 171 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fInnerCircle  = ClampUp  (m_fInnerCircle  , fOuterCircle );
#line 175 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fR  = fInnerCircle  + FRnd  () * (fOuterCircle  - fInnerCircle );
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fA  = FRnd  () * 360.0f;
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CPlacement3D pl  (FLOAT3D (CosFast  (fA ) * fR  , 0.05f , SinFast  (fA ) * fR ) , ANGLE3D (0 , 0 , 0));
#line 178 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pl  . RelativeToAbsolute  (GetPlacement  ());
#line 179 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CPlacement3D plSpawner  = GetPlacement  ();
#line 184 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntity  * penEntity  = NULL ;
#line 186 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEntity  = _pNetwork  -> ga_World  . CreateEntity_t  (pl  , CLASS_ENEMY  , - 1 , TRUE );
#line 187 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEntity  -> InitAsSkaModel  ();
#line 191 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
INDEX iEntityID  = penEntity  -> en_ulID ;
#line 193 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEnemyBase  * peb  = ((CEnemyBase  *) penEntity );
#line 194 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
AddEnemyKillData  (peb  , this );
#line 195 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
MarkSpawnerSpawned  (this );
#line 197 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_RESPAWNER  || m_estType  == EST_MAINTAINGROUP  || m_estType  == EST_RESPAWNGROUP )
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_penSpawnerTarget  = this ;
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 203 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(_cmiComm  . IsNetworkOn  ())
#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CNetworkMessage  nmMobSpawn  (MSG_NPC_REGEN );
#line 206 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
INDEX iIndex  = - 1;
#line 207 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
INDEX iYLayer  = 0;
#line 208 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
INDEX iMobType  = m_iMobType ;
#line 209 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << iIndex ;
#line 210 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << iMobType ;
#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << pl  . pl_PositionVector  (1);
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << pl  . pl_PositionVector  (3);
#line 213 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << pl  . pl_PositionVector  (2);
#line 214 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_bAngleFix )
#line 215 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << plSpawner  . pl_OrientationAngle  (1);
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 218 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else 
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << pl  . pl_OrientationAngle  (1);
#line 221 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << iYLayer ;
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
nmMobSpawn  << iEntityID ;
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
_pNetwork  -> SendToServerNew  (nmMobSpawn );
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_bShowSpawnEffect )
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ESpawnEffect  ese ;
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . betType  = BET_TELEPORT ;
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . vNormal  = FLOAT3D (0 , 1 , 0);
#line 233 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fEntitySize  = 3.0f;
#line 234 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . vStretch  = FLOAT3D (fEntitySize  , fEntitySize  , fEntitySize );
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntityPointer penEffect  = CreateEntity  (pl  , CLASS_BASIC_EFFECT  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEffect  -> Initialize  (ese  , FALSE );
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 238 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else 
#line 242 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
extern  BOOL _bWorldEditorApp ;
#line 244 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_iMobType  != 0 && _bWorldEditorApp )
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 246 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntity  * penEntity ;
#line 247 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (m_iMobType );
#line 249 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fOuterCircle  = ClampDn  (m_fOuterCircle  , 0.0f);
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fInnerCircle  = ClampUp  (m_fInnerCircle  , fOuterCircle );
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fR  = fInnerCircle  + FRnd  () * (fOuterCircle  - fInnerCircle );
#line 255 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fA  = FRnd  () * 360.0f;
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CPlacement3D pl  (FLOAT3D (CosFast  (fA ) * fR  , 0.05f , SinFast  (fA ) * fR ) , ANGLE3D (0 , 0 , 0));
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pl  . RelativeToAbsolute  (GetPlacement  ());
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEntity  = _pNetwork  -> ga_World  . CreateEntity_t  (pl  , CLASS_ENEMY  , - 1 , TRUE );
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEntity  -> InitAsSkaModel  ();
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEntity  -> SetSkaModel  (MD  . GetMobSmcFileName  ());
#line 265 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CMobData  :: SetMobDataToNPC  (penEntity  , MD  , _pNetwork  -> GetMobName  (m_iMobType ));
#line 268 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
const int  iWanderingZombie  = 35;
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
const int  iZombie  = 51;
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
const int  iDamd  = 142;
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_iMobType  == iWanderingZombie  || m_iMobType  == iZombie  || m_iMobType  == iDamd )
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntityProperty  & epPropertyStart  = * (penEntity  -> PropertyForTypeAndID  (CEntityProperty  :: EPT_INDEX  , 99));
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ENTITYPROPERTY  (& * penEntity  , epPropertyStart  . ep_slOffset  , INDEX) = ska_GetIDFromStringTable  ("m_zm_up01");
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEntity  -> Initialize  ();
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEnemyBase  * peb  = ((CEnemyBase  *) penEntity );
#line 280 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
AddEnemyKillData  (peb  , this );
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
MarkSpawnerSpawned  (this );
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_RESPAWNER  || m_estType  == EST_MAINTAINGROUP  || m_estType  == EST_RESPAWNGROUP )
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 285 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_penSpawnerTarget  = this ;
#line 286 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else 
#line 289 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(((CEntity  *) m_penTarget ) == NULL )
#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return ;
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(CheckTemplateValid  (m_penTarget ))
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntity  * pen  = NULL ;
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(bCopy )
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 303 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  = GetWorld  () -> CopyEntityInWorld  (* m_penTarget  , 
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CPlacement3D (FLOAT3D (- 32000.0f + FRnd  () * 200.0f , - 32000.0f + FRnd  () * 200.0f , 0) , ANGLE3D (0 , 0 , 0)) , TRUE  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  -> End  ();
#line 308 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEnemyBase  * peb  = ((CEnemyBase  *) pen );
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
AddEnemyKillData  (peb  , this );
#line 311 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
MarkSpawnerSpawned  (this );
#line 313 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_bTemplate  = FALSE ;
#line 314 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_RESPAWNER  
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
|| m_estType  == EST_MAINTAINGROUP  || m_estType  == EST_RESPAWNGROUP )
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_penSpawnerTarget  = this ;
#line 318 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 319 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penPatrol  != NULL )
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_penMarker  = m_penPatrol ;
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 323 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  -> Initialize  (EVoid  () , FALSE );
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else 
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 327 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  = m_penTarget ;
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penTarget  = NULL ;
#line 329 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fEntityR  = 0;
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(pen  -> en_pciCollisionInfo  != NULL )
#line 334 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 335 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
fEntityR  = pen  -> en_pciCollisionInfo  -> GetMaxFloorRadius  ();
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fOuterCircle  = ClampDn  (m_fOuterCircle  - fEntityR  , 0.0f);
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fInnerCircle  = ClampUp  (m_fInnerCircle  + fEntityR  , fOuterCircle );
#line 342 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fR  = fInnerCircle  + FRnd  () * (fOuterCircle  - fInnerCircle );
#line 343 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fA  = FRnd  () * 360.0f;
#line 344 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CPlacement3D pl  (FLOAT3D (CosFast  (fA ) * fR  , 0.05f , SinFast  (fA ) * fR ) , ANGLE3D (0 , 0 , 0));
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pl  . RelativeToAbsolute  (GetPlacement  ());
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_bAngleFix )
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 349 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CPlacement3D plSpawner  = GetPlacement  ();
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pl  . pl_OrientationAngle  (1) = plSpawner  . pl_OrientationAngle  (1);
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  -> Teleport  (pl  , m_bTelefrag );
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_bSpawnEffect )
#line 359 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ESpawnEffect  ese ;
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . betType  = BET_TELEPORT ;
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . vNormal  = FLOAT3D (0 , 1 , 0);
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOATaabbox3D box ;
#line 365 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  -> GetBoundingBox  (box );
#line 366 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fEntitySize  = box  . Size  () . MaxNorm  () * 2;
#line 367 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . vStretch  = FLOAT3D (fEntitySize  , fEntitySize  , fEntitySize );
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntityPointer penEffect  = CreateEntity  (pl  , CLASS_BASIC_EFFECT  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEffect  -> Initialize  (ese  , FALSE );
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ENetSpawnEntity  eNetSpawn ;
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
eNetSpawn  . ulEntityID  = pen  -> en_ulID ;
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
eNetSpawn  . bCopy  = bCopy ;
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
eNetSpawn  . vPosition  = pl  . pl_PositionVector ;
#line 377 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
eNetSpawn  . vOrientation  = pl  . pl_OrientationAngle ;
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SendEvent  (eNetSpawn  , TRUE );
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 382 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
void CEnemySpawner::SpawnEntity_net(ENetSpawnEntity eNetSpawn) 
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(_pNetwork  -> IsServer  ())
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return ;
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penSeriousTarget  != NULL  && 
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
GetSP  () -> sp_gdGameDifficulty  == CSessionProperties  :: GD_EXTREME  && GetSP  () -> sp_bSinglePlayer ){
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penTarget  = m_penSeriousTarget ;
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! CheckTemplateValid  (m_penTarget ))
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 398 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return ;
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntity  * pen  = NULL ;
#line 401 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CPlacement3D pl  (eNetSpawn  . vPosition  , eNetSpawn  . vOrientation );
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(eNetSpawn  . bCopy )
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 405 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  = GetWorld  () -> CopyEntityInWorld  (* m_penTarget  , pl  , TRUE  , eNetSpawn  . ulEntityID  , FALSE );
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  -> End  ();
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEnemyBase  * peb  = ((CEnemyBase  *) pen );
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_bTemplate  = FALSE ;
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_RESPAWNER  
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
|| m_estType  == EST_MAINTAINGROUP  || m_estType  == EST_RESPAWNGROUP )
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_penSpawnerTarget  = this ;
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 416 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penPatrol  != NULL ){
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
peb  -> m_penMarker  = m_penPatrol ;
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  -> Initialize  (EVoid  () , FALSE );
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else 
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  = m_penTarget ;
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penTarget  = NULL ;
#line 425 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 428 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_bSpawnEffect )
#line 429 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 430 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ESpawnEffect  ese ;
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 432 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . betType  = BET_TELEPORT ;
#line 433 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . vNormal  = FLOAT3D (0 , 1 , 0);
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOATaabbox3D box ;
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
pen  -> GetBoundingBox  (box );
#line 436 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
FLOAT fEntitySize  = box  . Size  () . MaxNorm  () * 2;
#line 437 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ese  . vStretch  = FLOAT3D (fEntitySize  , fEntitySize  , fEntitySize );
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
CEntityPointer penEffect  = CreateEntity  (pl  , CLASS_BASIC_EFFECT  , WLD_AUTO_ENTITY_ID  , FALSE );
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
penEffect  -> Initialize  (ese  , FALSE );
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 441 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 445 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
BOOL CEnemySpawner::HandleEvent(const CEntityEvent & ee) 
#line 446 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 447 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(ee  . ee_slEvent  == EVENTCODE_ETrigger )
#line 448 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 449 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ETrigger  eTrigger  = ((ETrigger  &) ee );
#line 450 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(IsDerivedFromClass  (eTrigger  . penCaused  , & CEnemyBase_DLLClass ) && 
#line 451 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
(m_estType  == EST_MAINTAINGROUP  || m_estType  == EST_RESPAWNGROUP  || 
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_estType  == EST_RESPAWNER  || m_estType  == EST_TRIGGERED ))
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_iEnemiesTriggered  ++;
#line 456 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 457 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else if(ee  . ee_slEvent  == EVENTCODE_ENetSpawnEntity )
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! _pNetwork  -> IsServer  ())
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
ENetSpawnEntity  eNetSpawn  = ((ENetSpawnEntity  &) ee );
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SpawnEntity_net  (eNetSpawn );
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 465 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 466 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return CRationalEntity  :: HandleEvent  (ee );
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
  
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SLONG CEnemySpawner::GetUsedMemory(void) 
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 474 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SLONG  slUsedMemory  = sizeof  (CEnemySpawner ) - sizeof  (CRationalEntity ) + CRationalEntity  :: GetUsedMemory  ();
#line 476 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
slUsedMemory  += m_strDescription  . Length  ();
#line 477 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
slUsedMemory  += m_strName  . Length  ();
#line 478 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
slUsedMemory  += 1 * sizeof  (CSoundObject);
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return slUsedMemory ;
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
BOOL CEnemySpawner::
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SpawnGroup(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_SpawnGroup
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::SpawnGroup expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 487 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_iInGroup  = 0;
#line 491 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Jump(STATE_CURRENT,0x01300004, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x01300004_SpawnGroup_03(const CEntityEvent &__eeInput)
#line 492 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300004
if(!(TRUE )){ Jump(STATE_CURRENT,0x01300005, FALSE, EInternal());return TRUE;}
#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SpawnEntity  (TRUE );
#line 497 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_ctTotal  --;
#line 499 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_ctTotal  <= 0)
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Return(STATE_CURRENT,EEnd  ());
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE;
#line 503 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 506 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_iInGroup  ++;
#line 508 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_iEnemiesTriggered  > 0 && m_estType  == EST_RESPAWNGROUP )
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! m_bFirstPass )
#line 511 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 512 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_iEnemiesTriggered  --;
#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 514 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 515 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else if(m_iEnemiesTriggered  > 0)
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_iEnemiesTriggered  --;
#line 518 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_iInGroup  >= m_ctGroupSize )
#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 523 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! (m_estType  == EST_MAINTAINGROUP  && m_iEnemiesTriggered  > 0))
#line 524 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 526 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Return(STATE_CURRENT,EReturn  ());
#line 526 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE;
#line 527 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 528 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(m_tmSingleWait );
Jump(STATE_CURRENT, 0x01300002, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300002_SpawnGroup_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300002
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01300003, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default:{return FALSE;}ASSERT(FALSE);break;
#line 535 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}return TRUE;}BOOL CEnemySpawner::H0x01300003_SpawnGroup_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300003
Jump(STATE_CURRENT,0x01300004, FALSE, EInternal());return TRUE;
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}BOOL CEnemySpawner::H0x01300005_SpawnGroup_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300005
 ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Simple(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_Simple
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::Simple expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 543 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01300007, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300007_Simple_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300007
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&e= (ETrigger&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01300008, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01300008, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default:{return FALSE;}ASSERT(FALSE);break;
#line 548 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}return TRUE;}BOOL CEnemySpawner::H0x01300008_Simple_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300008

#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(!(m_tmDelay  > 0)){ Jump(STATE_CURRENT,0x0130000b, FALSE, EInternal());return TRUE;}
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(m_tmDelay );
Jump(STATE_CURRENT, 0x01300009, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300009_Simple_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300009
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0130000a, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x0130000a_Simple_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130000a
;Jump(STATE_CURRENT,0x0130000b, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x0130000b_Simple_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130000b

#line 557 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Jump(STATE_CURRENT,0x01300010, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x01300010_Simple_10(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300010
if(!(TRUE )){ Jump(STATE_CURRENT,0x01300011, FALSE, EInternal());return TRUE;}
#line 559 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
STATE_CEnemySpawner_SpawnGroup, TRUE;
Jump(STATE_CURRENT, 0x0130000c, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x0130000c_Simple_06(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130000c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemySpawner_SpawnGroup, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0130000d, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x0130000d_Simple_07(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130000d
const EReturn&__e= (EReturn&)__eeInput;
;
#line 561 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(m_tmGroupWait );
Jump(STATE_CURRENT, 0x0130000e, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x0130000e_Simple_08(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130000e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0130000f, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x0130000f_Simple_09(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130000f
;Jump(STATE_CURRENT,0x01300010, FALSE, EInternal());return TRUE;
#line 562 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}BOOL CEnemySpawner::H0x01300011_Simple_11(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300011
 ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 566 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Teleporter(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_Teleporter
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::Teleporter expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 569 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01300013, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300013_Teleporter_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300013
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;
return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&e= (ETrigger&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01300014, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x01300014, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default:{return FALSE;}ASSERT(FALSE);break;
#line 574 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}return TRUE;}BOOL CEnemySpawner::H0x01300014_Teleporter_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300014

#line 577 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(!(m_tmDelay  > 0)){ Jump(STATE_CURRENT,0x01300017, FALSE, EInternal());return TRUE;}
#line 579 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(m_tmDelay );
Jump(STATE_CURRENT, 0x01300015, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300015_Teleporter_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300015
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01300016, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300016_Teleporter_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300016
;Jump(STATE_CURRENT,0x01300017, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x01300017_Teleporter_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300017

#line 583 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SpawnEntity  (FALSE );
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Return(STATE_CURRENT,EEnd  ());
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 590 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Respawner(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_Respawner
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::Respawner expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Jump(STATE_CURRENT,0x01300032, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x01300032_Respawner_26(const CEntityEvent &__eeInput)
#line 594 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300032
if(!(TRUE )){ Jump(STATE_CURRENT,0x01300033, FALSE, EInternal());return TRUE;}
#line 596 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01300019, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300019_Respawner_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300019
switch(__eeInput.ee_slEvent)
#line 597 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{case(EVENTCODE_EBegin):
#line 599 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 600 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! m_bFirstPass  && m_iEnemiesTriggered  > 0)
#line 601 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
{
#line 602 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
UnsetTimer();Jump(STATE_CURRENT,0x0130001a, FALSE, EInternal());return TRUE;
#line 603 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 604 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE;
#line 605 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETrigger):{const ETrigger&e= (ETrigger&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x0130001a, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;case(EVENTCODE_EStart):{const EStart&e= (EStart&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x0130001a, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default:{return FALSE;}ASSERT(FALSE);break;
#line 609 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}return TRUE;}BOOL CEnemySpawner::H0x0130001a_Respawner_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130001a

#line 612 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(!(m_tmDelay  > 0 && m_bFirstPass )){ Jump(STATE_CURRENT,0x0130001d, FALSE, EInternal());return TRUE;}
#line 614 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(m_tmDelay );
Jump(STATE_CURRENT, 0x0130001b, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x0130001b_Respawner_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130001b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0130001c, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x0130001c_Respawner_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130001c
;Jump(STATE_CURRENT,0x0130001d, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x0130001d_Respawner_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130001d

#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(!(m_estType  == EST_RESPAWNGROUP )){ Jump(STATE_CURRENT,0x0130002f, FALSE, EInternal());return TRUE;}
#line 618 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(!(m_bFirstPass )){ Jump(STATE_CURRENT,0x01300027, FALSE, EInternal());return TRUE;}
#line 619 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
STATE_CEnemySpawner_SpawnGroup, TRUE;
Jump(STATE_CURRENT, 0x0130001e, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x0130001e_Respawner_06(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130001e
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemySpawner_SpawnGroup, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0130001f, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x0130001f_Respawner_07(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130001f
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01300026, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x01300027_Respawner_15(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300027
if(!(m_iEnemiesTriggered  >= m_ctGroupSize )){ Jump(STATE_CURRENT,0x01300025, FALSE, EInternal());return TRUE;}
#line 621 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(!(m_tmGroupWait  > 0)){ Jump(STATE_CURRENT,0x01300022, FALSE, EInternal());return TRUE;}SetTimerAfter(m_tmGroupWait );
Jump(STATE_CURRENT, 0x01300020, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300020_Respawner_08(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300020
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01300021, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300021_Respawner_09(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300021
;Jump(STATE_CURRENT,0x01300022, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x01300022_Respawner_10(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300022

#line 622 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
STATE_CEnemySpawner_SpawnGroup, TRUE;
Jump(STATE_CURRENT, 0x01300023, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300023_Respawner_11(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300023
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemySpawner_SpawnGroup, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01300024, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300024_Respawner_12(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300024
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x01300025, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x01300025_Respawner_13(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300025
Jump(STATE_CURRENT,0x01300026, FALSE, EInternal());return TRUE;}
BOOL CEnemySpawner::H0x01300026_Respawner_14(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300026
Jump(STATE_CURRENT,0x0130002e, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x0130002f_Respawner_23(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130002f
if(!(TRUE )){ Jump(STATE_CURRENT,0x0130002d, FALSE, EInternal());return TRUE;}
#line 626 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(!(m_tmGroupWait  > 0 && ! m_bFirstPass )){ Jump(STATE_CURRENT,0x0130002a, FALSE, EInternal());return TRUE;}SetTimerAfter(m_tmGroupWait );
Jump(STATE_CURRENT, 0x01300028, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300028_Respawner_16(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300028
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01300029, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300029_Respawner_17(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300029
;Jump(STATE_CURRENT,0x0130002a, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x0130002a_Respawner_18(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130002a

#line 627 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
STATE_CEnemySpawner_SpawnGroup, TRUE;
Jump(STATE_CURRENT, 0x0130002b, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x0130002b_Respawner_19(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130002b
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemySpawner_SpawnGroup, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x0130002c, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x0130002c_Respawner_20(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130002c
const EReturn&__e= (EReturn&)__eeInput;
;Jump(STATE_CURRENT,0x0130002d, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x0130002d_Respawner_21(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130002d
Jump(STATE_CURRENT,0x0130002e, FALSE, EInternal());return TRUE;}
BOOL CEnemySpawner::H0x0130002e_Respawner_22(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130002e

#line 638 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_MAINTAINGROUP ){
#line 640 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_ctGroupSize  = 1;
#line 641 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 644 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_bFirstPass  = FALSE ;
#line 647 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x01300030, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300030_Respawner_24(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300030
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01300031, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300031_Respawner_25(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300031
;Jump(STATE_CURRENT,0x01300032, FALSE, EInternal());return TRUE;
#line 648 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}BOOL CEnemySpawner::H0x01300033_Respawner_27(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300033
 ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 651 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
DestroyableInactive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_DestroyableInactive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::DestroyableInactive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 653 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01300035, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300035_DestroyableInactive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300035
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_EActivate: Jump(STATE_CURRENT,0x01300036, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300036_DestroyableInactive_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300036
const EActivate&__e= (EActivate&)__eeInput;
;
#line 654 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Jump(STATE_CURRENT, STATE_CEnemySpawner_DestroyableActive, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 657 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
DestroyableActiveSpawning(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_DestroyableActiveSpawning
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::DestroyableActiveSpawning expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 660 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Jump(STATE_CURRENT,0x0130003c, FALSE, EInternal());return TRUE;}BOOL CEnemySpawner::H0x0130003c_DestroyableActiveSpawning_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130003c
if(!(TRUE )){ Jump(STATE_CURRENT,0x0130003d, FALSE, EInternal());return TRUE;}
#line 662 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
STATE_CEnemySpawner_SpawnGroup, TRUE;
Jump(STATE_CURRENT, 0x01300038, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300038_DestroyableActiveSpawning_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300038
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemySpawner_SpawnGroup, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x01300039, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300039_DestroyableActiveSpawning_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300039
const EReturn&__e= (EReturn&)__eeInput;
;
#line 664 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(m_tmGroupWait );
Jump(STATE_CURRENT, 0x0130003a, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x0130003a_DestroyableActiveSpawning_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130003a
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x0130003b, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x0130003b_DestroyableActiveSpawning_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130003b
;Jump(STATE_CURRENT,0x0130003c, FALSE, EInternal());return TRUE;
#line 665 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}BOOL CEnemySpawner::H0x0130003d_DestroyableActiveSpawning_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130003d
 ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 667 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
DestroyableActive(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_DestroyableActive
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::DestroyableActive expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 669 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
STATE_CEnemySpawner_DestroyableActiveSpawning, TRUE;
Jump(STATE_CURRENT, 0x0130003f, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x0130003f_DestroyableActive_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x0130003f
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemySpawner_DestroyableActiveSpawning, TRUE, EVoid());return TRUE;case EVENTCODE_EDeactivate: Jump(STATE_CURRENT,0x01300040, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300040_DestroyableActive_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300040
const EDeactivate&__e= (EDeactivate&)__eeInput;
;
#line 670 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Jump(STATE_CURRENT, STATE_CEnemySpawner_DestroyableInactive, TRUE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 674 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Destroyable(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_Destroyable
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::Destroyable expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 677 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
STATE_CEnemySpawner_DestroyableInactive, TRUE;
Jump(STATE_CURRENT, 0x01300042, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300042_Destroyable_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300042
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CEnemySpawner_DestroyableInactive, TRUE, EVoid());return TRUE;case EVENTCODE_EStop: Jump(STATE_CURRENT,0x01300043, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300043_Destroyable_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300043
const EStop&__e= (EStop&)__eeInput;
;
#line 679 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Return(STATE_CURRENT,EEnd  ());
#line 679 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CEnemySpawner::
#line 682 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CEnemySpawner_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CEnemySpawner::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 684 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
InitAsEditorModel  ();
#line 685 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 686 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 689 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetModel  (MODEL_ENEMYSPAWNER );
#line 690 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetModelMainTexture  (TEXTURE_ENEMYSPAWNER );
#line 692 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetFlagOff  (ENF_PROPSCHANGED );
#line 693 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetFlagOn  (ENF_MARKDESTROY );
#line 694 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetFlagOn  (ENF_NONETCONNECT );
#line 696 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_tmSingleWait  <= 0.0f){m_tmSingleWait  = 0.05f;}
#line 697 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_tmGroupWait  <= 0.0f){m_tmGroupWait  = 0.05f;}
#line 700 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_fInnerCircle  > m_fOuterCircle ){
#line 701 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_fInnerCircle  = m_fOuterCircle ;
#line 702 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 704 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_RESPAWNERBYONE ){
#line 705 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_estType  = EST_MAINTAINGROUP ;
#line 706 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 709 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penTarget  != NULL ){
#line 710 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! IsDerivedFromClass  (m_penTarget  , & CEnemyBase_DLLClass )){
#line 711 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
WarningMessage  ("Target '%s' is of wrong class!" , m_penTarget  -> GetName  ());
#line 712 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penTarget  = NULL ;
#line 713 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 714 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 715 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penSeriousTarget  != NULL ){
#line 716 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! IsDerivedFromClass  (m_penSeriousTarget  , & CEnemyBase_DLLClass )){
#line 717 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
WarningMessage  ("Target '%s' is of wrong class!" , m_penSeriousTarget  -> GetName  ());
#line 718 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penSeriousTarget  = NULL ;
#line 719 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 720 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 723 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAfter(_pTimer  -> TickQuantum );
Jump(STATE_CURRENT, 0x01300044, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300044_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300044
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x01300045, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CEnemySpawner::H0x01300045_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300045
;
#line 726 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(! GetSP  () -> sp_bUseExtraEnemies  && ! GetSP  () -> sp_bSinglePlayer  
#line 727 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
&& ! (GetSpawnFlags  () & SPF_SINGLEPLAYER )){
#line 728 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Destroy  ();
#line 729 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Return(STATE_CURRENT,EVoid());
#line 729 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE;
#line 730 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 732 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_bDoubleInSerious  && 
#line 733 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
GetSP  () -> sp_gdGameDifficulty  == CSessionProperties  :: GD_EXTREME  && GetSP  () -> sp_bSinglePlayer ){
#line 734 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_ctGroupSize  *= 2;
#line 735 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_ctTotal  *= 2;
#line 736 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 737 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_penSeriousTarget  != NULL  && 
#line 738 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
GetSP  () -> sp_gdGameDifficulty  == CSessionProperties  :: GD_EXTREME  && GetSP  () -> sp_bSinglePlayer ){
#line 739 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_penTarget  = m_penSeriousTarget ;
#line 740 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 742 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_MAINTAINGROUP ){
#line 743 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_iEnemiesTriggered  = m_ctGroupSize ;
#line 744 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 746 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_bFirstPass  = TRUE ;
#line 748 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x01300046, FALSE, EBegin());return TRUE;}BOOL CEnemySpawner::H0x01300046_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300046
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 750 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 751 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(m_estType  == EST_SIMPLE ){
#line 752 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Call(STATE_CURRENT, STATE_CEnemySpawner_Simple, TRUE, EVoid());return TRUE;
#line 753 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}else if(m_estType  == EST_TELEPORTER ){
#line 754 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Call(STATE_CURRENT, STATE_CEnemySpawner_Teleporter, TRUE, EVoid());return TRUE;
#line 755 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}else if(m_estType  == EST_RESPAWNER  
#line 756 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
|| m_estType  == EST_TRIGGERED  || m_estType  == EST_RESPAWNGROUP ){
#line 757 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Call(STATE_CURRENT, STATE_CEnemySpawner_Respawner, TRUE, EVoid());return TRUE;
#line 758 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}else if(m_estType  == EST_MAINTAINGROUP ){
#line 759 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
m_ctGroupSize  = 1;
#line 760 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Call(STATE_CURRENT, STATE_CEnemySpawner_Respawner, TRUE, EVoid());return TRUE;
#line 761 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 762 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
else if(m_estType  == EST_DESTROYABLE ){
#line 763 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Call(STATE_CURRENT, STATE_CEnemySpawner_Destroyable, TRUE, EVoid());return TRUE;
#line 764 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 765 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 767 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(_pNetwork  -> IsServer  ()){
#line 768 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
UnsetTimer();Jump(STATE_CURRENT,0x01300047, FALSE, EInternal());return TRUE;
#line 769 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}else {
#line 770 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE;
#line 771 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 772 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}ASSERT(FALSE);break;case(EVENTCODE_EStop):{const EStop&e= (EStop&)__eeInput;

#line 774 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(_pNetwork  -> IsServer  ()){
#line 775 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
UnsetTimer();Jump(STATE_CURRENT,0x01300047, FALSE, EInternal());return TRUE;
#line 776 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}else {
#line 777 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE;
#line 778 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 779 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnd):{const EEnd&e= (EEnd&)__eeInput;

#line 781 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
if(_pNetwork  -> IsServer  ()){
#line 782 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
UnsetTimer();Jump(STATE_CURRENT,0x01300047, FALSE, EInternal());return TRUE;
#line 783 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}else {
#line 784 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE;
#line 785 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}
#line 786 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}ASSERT(FALSE);break;default: return FALSE; break;
#line 787 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
}return TRUE;}BOOL CEnemySpawner::H0x01300047_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x01300047

#line 789 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Destroy  ();
#line 791 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
Return(STATE_CURRENT,EVoid());
#line 791 "E:/질산/Korea/Client_USA/EntitiesMP/EnemySpawner.es"
return TRUE; ASSERT(FALSE); return TRUE;};