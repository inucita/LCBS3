/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"

#include "StdH.h"
#include "EntitiesMP/Player.h"
#include <Engine/Interface/UIManager.h>
#include <Engine/Interface/UISummon.h>
#include <Engine/SlaveInfo.h>

#include <EntitiesMP/Teleport.h>
#include <EntitiesMP/Teleport_tables.h>
CEntityEvent *ETeleportActivate::MakeCopy(void) { CEntityEvent *peeCopy = new ETeleportActivate(*this); return peeCopy;}
SLONG ETeleportActivate::GetSizeOf(void) { return sizeof(*this);}
ETeleportActivate::ETeleportActivate() : CEntityEvent(EVENTCODE_ETeleportActivate) {;
};
BOOL ETeleportActivate::CheckIDs(void) { return TRUE ; }
CEntityEvent *ETeleportDeactivate::MakeCopy(void) { CEntityEvent *peeCopy = new ETeleportDeactivate(*this); return peeCopy;}
SLONG ETeleportDeactivate::GetSizeOf(void) { return sizeof(*this);}
ETeleportDeactivate::ETeleportDeactivate() : CEntityEvent(EVENTCODE_ETeleportDeactivate) {;
};
BOOL ETeleportDeactivate::CheckIDs(void) { return TRUE ; }
void CTeleport::SetDefaultProperties(void) {
  m_strName = "Teleport";
  m_strDescription = "";
  m_penTarget = NULL;
  m_fWidth = 2.0f;
  m_fHeight = 3.0f;
  m_bActive = TRUE ;
  m_bPlayersOnly = TRUE ;
  m_bForceStop = FALSE ;
  m_eTeleportType = TELEPORT_DEFAULT ;
  m_iTeleportIndex = -1;
  m_iTeleportExtIndex = 0;
  CRationalEntity::SetDefaultProperties();
}
  
#line 54 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
const CTString & CTeleport::GetDescription(void)const {
#line 55 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
((CTString &) m_strDescription ) . PrintF  ("-><none>");
#line 56 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_penTarget  != NULL ){
#line 57 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
((CTString &) m_strDescription ) . PrintF  ("->%s" , m_penTarget  -> GetName  ());
#line 58 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 59 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return m_strDescription ;
#line 60 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
  
#line 62 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
void CTeleport::TeleportEntity(CEntity * pen,const CPlacement3D & pl) 
#line 63 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 65 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pen  -> Teleport  (pl );
#line 68 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ESpawnEffect  ese ;
#line 69 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ese  . colMuliplier  = C_WHITE  | CT_OPAQUE ;
#line 70 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ese  . betType  = BET_TELEPORT ;
#line 71 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ese  . vNormal  = FLOAT3D (0 , 1 , 0);
#line 72 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
FLOATaabbox3D box ;
#line 73 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pen  -> GetBoundingBox  (box );
#line 74 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
FLOAT fEntitySize  = box  . Size  () . MaxNorm  () * 2;
#line 75 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ese  . vStretch  = FLOAT3D (fEntitySize  , fEntitySize  , fEntitySize );
#line 76 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
CEntityPointer penEffect  = CreateEntity  (pl  , CLASS_BASIC_EFFECT );
#line 77 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
penEffect  -> Initialize  (ese );
#line 80 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
for(int  i  = UI_SUMMON_START ;i  <= UI_SUMMON_END ;++ i )
#line 81 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 82 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
CUISummon  * pUISummon  = (CUISummon  *) _pUIMgr  -> GetUI  (i );
#line 83 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(pUISummon  -> GetSummonEntity  ())
#line 84 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 85 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pUISummon  -> SetCommand  (CSlaveInfo  :: COMMAND_HOLD );
#line 86 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pUISummon  -> GetSummonEntity  () -> SetPlacement  (m_penTarget  -> GetPlacement  ());
#line 87 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pUISummon  -> GetSummonEntity  () -> FallDownToFloor  ();
#line 88 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 89 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 92 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(_pNetwork  -> _PetTargetInfo  . bIsActive  && _pNetwork  -> _PetTargetInfo  . pen_pEntity )
#line 93 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 94 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
_pNetwork  -> _PetTargetInfo  . pen_pEntity  -> SetPlacement  (m_penTarget  -> GetPlacement  ());
#line 95 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
_pNetwork  -> _PetTargetInfo  . pen_pEntity  -> FallDownToFloor  ();
#line 96 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 97 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
  
#line 101 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SLONG CTeleport::GetUsedMemory(void) 
#line 102 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 104 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SLONG  slUsedMemory  = sizeof  (CTeleport ) - sizeof  (CRationalEntity ) + CRationalEntity  :: GetUsedMemory  ();
#line 106 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
slUsedMemory  += m_strName  . Length  ();
#line 107 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
slUsedMemory  += m_strDescription  . Length  ();
#line 108 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return slUsedMemory ;
#line 109 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
BOOL CTeleport::
#line 115 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CTeleport_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CTeleport::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 117 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
InitAsEditorModel  ();
#line 118 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 119 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetCollisionFlags  (ECF_TOUCHMODEL );
#line 120 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetFlagOff  (ENF_PROPSCHANGED );
#line 121 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetFlagOn  (ENF_NONETCONNECT );
#line 122 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetFlagOn  (ENF_MARKDESTROY );
#line 125 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_fHeight  < m_fWidth )
#line 126 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 127 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
m_fHeight  = m_fWidth ;
#line 128 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 131 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
GetModelObject  () -> StretchModel  (FLOAT3D (m_fWidth  , m_fHeight  , m_fWidth ));
#line 132 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetModel  (MODEL_TELEPORT );
#line 133 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ModelChangeNotify  ();
#line 134 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetModelMainTexture  (TEXTURE_TELEPORT );
#line 136 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
Jump(STATE_CURRENT,0x00db0006, FALSE, EInternal());return TRUE;}BOOL CTeleport::H0x00db0006_Main_05(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00db0006
if(!(TRUE )){ Jump(STATE_CURRENT,0x00db0007, FALSE, EInternal());return TRUE;}
#line 138 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00db0002, FALSE, EBegin());return TRUE;}BOOL CTeleport::H0x00db0002_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00db0002
switch(__eeInput.ee_slEvent){case(EVENTCODE_EPass):
#line 140 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{const EPass&ePass= (EPass&)__eeInput;

#line 141 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_eTeleportType  == TELEPORT_DEFAULT )
#line 142 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 143 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_penTarget  != NULL  && m_bActive )
#line 144 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 145 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_bPlayersOnly  && ! IsOfClass  (ePass  . penOther  , & CPlayer_DLLClass )){
#line 146 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 147 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 148 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
TeleportEntity  (ePass  . penOther  , m_penTarget  -> GetPlacement  ());
#line 149 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_bForceStop  && (ePass  . penOther  -> GetPhysicsFlags  () & EPF_MOVABLE ))
#line 150 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 151 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
((CMovableEntity  *) & * ePass  . penOther ) -> ForceFullStop  ();
#line 152 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 153 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
UnsetTimer();Jump(STATE_CURRENT,0x00db0003, FALSE, EInternal());return TRUE;
#line 154 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 155 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 156 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 157 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
else 
#line 158 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_eTeleportType  == TELEPORT_NETWORK )
#line 159 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 160 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_bActive )
#line 161 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 166 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(! IsOfClass  (ePass  . penOther  , & CPlayer_DLLClass ))
#line 167 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 168 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 169 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 170 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ASSERT  (m_iTeleportIndex  != - 1 && "Invalid Teleport Index!");
#line 172 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
CPlayer  * pPlayer  = (CPlayer  *) CEntity  :: GetPlayerEntity  (0);
#line 173 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(pPlayer )
#line 174 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 175 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pPlayer  -> m_bRcvAtMsg  = FALSE ;
#line 176 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pPlayer  -> m_bLockMove  = TRUE ;
#line 177 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pPlayer  -> m_bReserveMove  = FALSE ;
#line 178 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
pPlayer  -> StopMove  ();
#line 179 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 181 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
_pNetwork  -> SendWarpTeleport  (m_iTeleportIndex );
#line 182 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
UnsetTimer();Jump(STATE_CURRENT,0x00db0003, FALSE, EInternal());return TRUE;
#line 183 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 184 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 185 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 186 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
else 
#line 187 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 188 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(m_bActive )
#line 189 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 190 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(! IsOfClass  (ePass  . penOther  , & CPlayer_DLLClass ))
#line 191 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
{
#line 192 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 193 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 194 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
ASSERT  (m_iTeleportIndex  != - 1 && "Invalid Teleport Index!");
#line 195 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
const int  iWorldNum  = m_iTeleportIndex ;
#line 196 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
const int  iExtraNum  = m_iTeleportExtIndex ;
#line 197 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
_pNetwork  -> GoZone  (iWorldNum  , iExtraNum );
#line 198 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
UnsetTimer();Jump(STATE_CURRENT,0x00db0003, FALSE, EInternal());return TRUE;
#line 199 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 200 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 201 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 202 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}ASSERT(FALSE);break;case(EVENTCODE_EActivate):{const EActivate&e= (EActivate&)__eeInput;

#line 204 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 205 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(_pNetwork  -> IsServer  ()){
#line 206 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SendEvent  (ETeleportActivate  () , TRUE );
#line 207 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 208 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 209 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETeleportActivate):{const ETeleportActivate&e= (ETeleportActivate&)__eeInput;

#line 211 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
m_bActive  = TRUE ;
#line 212 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 213 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}ASSERT(FALSE);break;case(EVENTCODE_EDeactivate):{const EDeactivate&e= (EDeactivate&)__eeInput;

#line 215 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetFlagOn  (ENF_PROPSCHANGED );
#line 216 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
if(_pNetwork  -> IsServer  ()){
#line 217 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SendEvent  (ETeleportDeactivate  () , TRUE );
#line 218 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}
#line 219 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 220 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETeleportDeactivate):{const ETeleportDeactivate&e= (ETeleportDeactivate&)__eeInput;

#line 222 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
m_bActive  = FALSE ;
#line 223 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}ASSERT(FALSE);break;default:{
#line 226 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
return TRUE;
#line 227 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}ASSERT(FALSE);break;
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}return TRUE;}BOOL CTeleport::H0x00db0003_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00db0003
;
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00db0004, FALSE, EBegin());return TRUE;}BOOL CTeleport::H0x00db0004_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00db0004
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00db0005, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTeleport::H0x00db0005_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00db0005
;Jump(STATE_CURRENT,0x00db0006, FALSE, EInternal());return TRUE;
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/Teleport.es"
}BOOL CTeleport::H0x00db0007_Main_06(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00db0007
 ASSERT(FALSE); return TRUE;};