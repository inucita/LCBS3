/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 3 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"

#include "StdH.h"

#include <Engine/Effect/CEffectGroup.h>
#include <Engine/Effect/CEffectGroupManager.h>
#include <Engine/Effect/CSkaEffect.h>
#include <Engine/Graphics/Color.h>
#include <Engine/Entities/ItemData.h>
#include <Engine/Network/CNetwork.h>
#include <Engine/Network/ItemTarget.h>
#include <deque>
#include <Engine/Entities/Skill.h>
#include <Engine/Network/MessageDefine.h>
#include "EntitiesMP/Common/CharacterDefinition.h"
#include "EntitiesMP/PlayerWeapons.h"
// #include <Engine/SlaveInfo.h>
#include <Engine/Interface/UIManager.h>
	
#define MOB_ATTACK_MOTION_NUM		(1)

struct sSkillEffectInfo
{
	void InitForNormalAttack(CMobData &mob, INDEX aniID)
	{
		m_bSkillAttack = FALSE;
		szEffectNameCast = mob.GetFireEffect0();
		szEffectNameMissile = mob.GetFireEffect1();
		szEffectNameHit = mob.GetFireEffect2();
		iFireDelayCount = mob.GetDelayCount();
		fFireDelay[0] = mob.GetDelay(0);
		fFireDelay[1] = mob.GetDelay(1);
		fFireDelay[2] = mob.GetDelay(2);
		fFireDelay[3] = mob.GetDelay(3);
		iMissileType = mob.GetMissileType();
		fMissileSpeed = mob.GetMissileSpeed();
		iAnimatioID = aniID;
		dwValidValue = 0x00000000;
	}
	void InitForSkillAttack(CSkill &skill)
	{
		m_bSkillAttack = TRUE;
		szEffectNameCast = skill.GetFireEffect1(0);
		szEffectNameMissile = skill.GetFireEffect2(0);
		szEffectNameHit = skill.GetFireEffect3(0);
		iFireDelayCount = skill.GetDelayCount(0);
		fFireDelay[0] = skill.GetDelay(0,0);
		fFireDelay[1] = skill.GetDelay(1,0);
		fFireDelay[2] = skill.GetDelay(2,0);
		fFireDelay[3] = skill.GetDelay(3,0);
		iMissileType = skill.GetMissileType(0);
		fMissileSpeed = skill.GetMissileSpeed(0);
		iAnimatioID = skill.idPlayer_Anim_Skill[0][2];
		dwValidValue = 0x00000000;
	}
	
	BOOL		m_bSkillAttack;
	const char	*szEffectNameCast;
	const char	*szEffectNameMissile;
	const char	*szEffectNameHit;
	int			iFireDelayCount;
	FLOAT		fFireDelay[4];
	int			iMissileType;
	FLOAT		fMissileSpeed;
	INDEX		iAnimatioID;
	DWORD		dwValidValue;
};
#define SkillEffectInfo() ((sSkillEffectInfo*)m_pSkillEffectInfo)

// struct sPetWear
// {
// 	INDEX m_nPetWear[WILDPET_WEAR_TOTAL];
// 	INDEX m_nPetWearPlus[WILDPET_WEAR_TOTAL];
//};

//-----------------------------------------------------------------------------
// Purpose: 컨테이너 내의 모든 엔티티에 한번에 데미지를 줍니다.
// Input  : pEntity - 
//			sTI - 
//			vCenter - 
// Output : static void
//-----------------------------------------------------------------------------
void DamagedTargetsInRange(CEntity* pEntity, CSelectedEntities& dcEntities, enum DamageType dmtType, FLOAT fDamageAmmount, FLOAT3D vCenter, BOOL bSkill);

void ShotFallDown(FLOAT3D vStartPos, FLOAT3D vToTargetDir, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szFallObjEffectName
				 , bool bCritical);
void GetTargetDirect(CEntity *penMe, CEntity *penTarget, FLOAT3D &vTargetPos, FLOAT3D &vDirection)
{
	if(penTarget == NULL) {return;}

	if(penTarget == penMe)
	{
		vTargetPos = penMe->en_plPlacement.pl_PositionVector;
		vDirection = FLOAT3D(0,1,1);
		return;
	}
	FLOAT3D vCurrentCenter(((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[0],
	((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[1],
	((EntityInfo*)(penMe->GetEntityInfo()))->vTargetCenter[2] );
	FLOAT3D vCurrentPos = penMe->en_plPlacement.pl_PositionVector + vCurrentCenter;
	FLOAT3D vTargetCenter(0, 0, 0);
	vTargetPos = FLOAT3D(0, 0, 0);
	vDirection = FLOAT3D(0, 0, 0);
	FLOAT size = 0;
	if(penTarget != NULL && penTarget->GetFlags()&ENF_ALIVE)
	{
		if(penTarget->en_RenderType == CEntity::RT_SKAMODEL)
		{
			// Bounding Box를 이용하여 Effect를 찍을 위치를 찾는다.
			FLOATaabbox3D bbox;
			penTarget->GetModelInstance()->GetCurrentColisionBox(bbox);
			FLOAT3D vRadius = (bbox.maxvect - bbox.minvect) * 0.5f * 0.4f/*단순히 원으로 하면 너무 큼. 사이즈 조절 상수*/;
			size = vRadius.Length();
		}
		vTargetCenter = FLOAT3D(((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[0],
		((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[1],
		((EntityInfo*)(penTarget->GetEntityInfo()))->vTargetCenter[2] );
		vTargetPos = penTarget->en_plPlacement.pl_PositionVector + vTargetCenter;
		vDirection = vTargetPos - vCurrentPos;
		vDirection.Normalize();
		vTargetPos -= vDirection * size;
	}
	vDirection.Normalize(); 				
};


#include <EntitiesMP/WildPet.h>
#include <EntitiesMP/WildPet_tables.h>
CEntityEvent *EWildPetAttackDamage::MakeCopy(void) { CEntityEvent *peeCopy = new EWildPetAttackDamage(*this); return peeCopy;}
SLONG EWildPetAttackDamage::GetSizeOf(void) { return sizeof(*this);}
EWildPetAttackDamage::EWildPetAttackDamage() : CEntityEvent(EVENTCODE_EWildPetAttackDamage) {;
};
BOOL EWildPetAttackDamage::CheckIDs(void) { return TRUE ; }
#line 138 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"

// info structure
static EntityInfo eiWildPetBoss = {
	EIBT_FLESH, 200.0f,
	//0.0f, 1.75f*m_fStretch, 0.0f,     // source (eyes)
	//0.0f, 1.30f*m_fStretch, 0.0f,     // target (body)
	0.0f, 1.75f*1.0f, 0.0f,     // source (eyes)
	0.0f, 1.30f*1.0f, 0.0f,     // target (body)
};

//안태훈 수정 시작	//(Effect Add & Modify for Close Beta)(0.1)
static INDEX g_iNPCMinBrightness = 32;	//명도 0~240
void CWildPet_OnInitClass(void)
{
	_pShell->DeclareSymbol("persistent user INDEX g_iNPCMinBrightness;", &g_iNPCMinBrightness);
}
//안태훈 수정 끝	//(Effect Add & Modify for Close Beta)(0.1)

void ShotMissile(CEntity *penShoter, const char *szShotPosTagName
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szArrowEffectName
				 , bool bCritical
				 , FLOAT fHorizonalOffset = 0.0f, FLOAT fVerticalOffset = 0.0f	//-1.0f ~ 1.0f
				 , INDEX iArrowType = 0, const char *szMissileModel = NULL);
void ShotMagicContinued(CEntity *penShoter, FLOAT3D vStartPos, FLOATquat3D qStartRot
				 , CEntity *penTarget, FLOAT fMoveSpeed
				 , const char *szHitEffectName, const char *szMagicEffectName
				 , bool bCritical, INDEX iOrbitType, BOOL bDirectTag = FALSE);

void CWildPet::SetDefaultProperties(void) {
  m_fBodyAnimTime = -1.0f;
  m_fStretch = 1.0f;
  iAnimWildPet_Walk = -1;
  iAnimWildPet_Idle1 = -1;
  iAnimWildPet_Idle2 = -1;
  iAnimWildPet_Run = -1;
  iAnimWildPet_Death = -1;
  iAnimWildPet_Damage = -1;
  iAnimWildPet_Attack1 = -1;
  iAnimWildPet_Attack2 = -1;
  iAnimWildPet_NormalBox = -1;
  iAnimWildPet_Hungry = -1;
  iNetwarkID = -1;
  iOwnerIndex = -1;
  plPetPlacement = CPlacement3D(FLOAT3D (0.0f , 0.0f , 0.0f) , ANGLE3D (0.0f , 0.0f , 0.0f));
  iYLayer = -1;
  sbAttributePos = -1;
  iAttackAnim = -1;
  m_strName = "WildPet";
  m_fActionAnimTime = 0.0f;
  m_EventType = EVENT_NONE ;
  m_penEventTarget = NULL;
  m_bIsRun = FALSE ;
  m_bDie = FALSE ;
  m_nSkillChack = 0;
  CWildPetBase::SetDefaultProperties();
}
  
#line 224 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
BOOL CWildPet::AdjustShadingParameters(FLOAT3D & vLightDirection,COLOR & colLight,COLOR & colAmbient) 
#line 225 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 228 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
g_iNPCMinBrightness  = Clamp  (g_iNPCMinBrightness  , (INDEX) 0 , (INDEX) 240);
#line 229 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
BOOL bRecalcAmbient  = FALSE ;
#line 230 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
UBYTE  ubAH  , ubAS  , ubAV ;
#line 231 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ColorToHSV  (colAmbient  , ubAH  , ubAS  , ubAV );
#line 232 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(ubAV  < g_iNPCMinBrightness )
#line 233 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 234 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
UBYTE  ubAR  , ubAG  , ubAB ;
#line 235 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ColorToRGB  (colAmbient  , ubAR  , ubAG  , ubAB );
#line 236 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ubAR  = g_iNPCMinBrightness ;
#line 237 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ubAG  = g_iNPCMinBrightness ;
#line 238 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ubAB  = g_iNPCMinBrightness ;
#line 239 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ColorToHSV  (RGBToColor  (ubAR  , ubAG  , ubAB ) , ubAH  , ubAS  , ubAV );
#line 240 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
bRecalcAmbient  = TRUE ;
#line 241 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 242 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(bRecalcAmbient ){colAmbient  = HSVToColor  (ubAH  , ubAS  , ubAV );}
#line 243 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 245 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  FLOAT CWildPet::GetLockRotationSpeed(void) 
#line 248 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 249 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return AngleDeg  (1800.0f);
#line 250 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  BOOL CWildPet::IsMovable() 
#line 254 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 256 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bUseAI )
#line 257 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 259 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if((_pNetwork  -> _WildPetInfo  . bIsActive  && (_pNetwork  -> _WildPetInfo  . m_nFaith  <= 0 || _pNetwork  -> _WildPetInfo  . m_nStm  <= 0)) 
#line 260 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
|| m_bStuned  || m_bHold )
#line 261 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 262 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 263 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 264 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 265 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 266 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 269 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::GetTargetDirection(FLOAT3D & vTargetPos,FLOAT3D & vDirection) 
#line 270 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 271 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  . ep_pen  != NULL )
#line 272 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 273 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pen  = m_penEnemy ;
#line 274 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vCurrentCenter  (((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 275 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 276 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 277 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vCurrentPos  = this  -> en_plPlacement  . pl_PositionVector  + vCurrentCenter ;
#line 278 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vTargetCenter  (0 , 0 , 0);
#line 279 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetPos  = FLOAT3D (0 , 0 , 0);
#line 280 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  = FLOAT3D (0 , 0 , 0);
#line 281 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT size  = 0;
#line 282 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pen  != NULL  && pen  -> GetFlags  () & ENF_ALIVE )
#line 283 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 284 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pen  -> en_RenderType  == RT_SKAMODEL )
#line 285 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 287 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATaabbox3D bbox ;
#line 288 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pen  -> GetModelInstance  () -> GetCurrentColisionBox  (bbox );
#line 289 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vRadius  = (bbox  . maxvect  - bbox  . minvect ) * 0.5f * 0.4f;
#line 290 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
size  = vRadius  . Length  ();
#line 291 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 292 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetCenter  = FLOAT3D (((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 293 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 294 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 295 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetPos  = pen  -> en_plPlacement  . pl_PositionVector  + vTargetCenter ;
#line 296 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  = vTargetPos  - vCurrentPos ;
#line 297 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  . Normalize  ();
#line 298 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetPos  -= vDirection  * size ;
#line 299 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 300 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  . Normalize  ();
#line 301 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 302 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 304 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::OnInitialize(const CEntityEvent & eeInput) 
#line 305 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 306 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CWildPetBase  :: OnInitialize  (eeInput );
#line 307 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 309 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::OnEnd(void) 
#line 310 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 311 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CWildPetBase  :: OnEnd  ();
#line 312 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 315 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void * CWildPet::GetEntityInfo(void) 
#line 316 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 317 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return & eiWildPetBoss ;
#line 318 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 320 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::Precache(void) 
#line 321 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 322 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CWildPetBase  :: Precache  ();
#line 324 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(en_pmiModelInstance ){
#line 325 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
en_pmiModelInstance  -> m_tmSkaTagManager  . SetOwner  (this );
#line 326 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 328 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  BOOL CWildPet::IsWildPet(void)const 
#line 331 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 332 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 333 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 336 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::InflictDirectDamage(CEntity * penToDamage,CEntity * penInflictor,enum DamageType dmtType,
#line 337 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 338 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 339 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(penToDamage )
#line 340 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 341 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pUIMgr  -> ShowDamage  (penToDamage  -> en_ulID );
#line 345 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(! (penToDamage  -> GetFlags  () & ENF_ALIVE )){return ;}
#line 346 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX preHealth  , curHealth ;
#line 347 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
preHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 348 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
curHealth  = ((CUnit  *) penToDamage ) -> m_nCurrentHealth ;
#line 350 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(preHealth  != - 1)
#line 351 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 352 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
fDamageAmmount  = 1;
#line 353 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((CUnit  *) penToDamage ) -> m_nCurrentHealth  = ((CUnit  *) penToDamage ) -> m_nPreHealth ;
#line 354 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 355 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else fDamageAmmount  = 0;
#line 357 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((CUnit  *) penToDamage ) -> m_nPreHealth  = - 1;
#line 358 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 360 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(penToDamage )
#line 361 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 362 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  :: InflictDirectDamage  (penToDamage  , penInflictor  , dmtType  , 
#line 363 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
fDamageAmmount  , vHitPoint  , vDirection );
#line 364 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 368 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(penToDamage  && penToDamage  -> IsEnemy  ())
#line 369 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 370 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
const INDEX iMobIndex  = ((CEnemy  *) penToDamage ) -> m_nMobDBIndex ;
#line 372 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(iMobIndex  == LORD_SYMBOL_INDEX )
#line 373 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 374 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CMobData  & MD  = _pNetwork  -> GetMobData  (iMobIndex );
#line 375 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX iCurHealth  = ((CUnit  *) ((CEntity  *) penToDamage )) -> m_nCurrentHealth ;
#line 376 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static INDEX iType  = 0;
#line 377 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
float  fMaxHealth  = MD  . GetHealth  ();
#line 378 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(iCurHealth  <= fMaxHealth  * 0.25f)
#line 379 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 380 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(iType  != 1)
#line 381 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 382 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iType  = 1;
#line 383 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword04.smc");
#line 384 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 385 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 386 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 387 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(iCurHealth  <= fMaxHealth  * 0.50f)
#line 388 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 389 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(iType  != 2)
#line 390 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 391 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iType  = 2;
#line 392 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword03.smc");
#line 393 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 394 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 395 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 396 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(iCurHealth  <= fMaxHealth  * 0.75f)
#line 397 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 398 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(iType  != 3)
#line 399 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 400 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iType  = 3;
#line 401 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> SetSkaModel  ("data\\npc\\Gguard\\sword02.smc");
#line 402 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 403 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 404 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 405 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 406 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 407 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(iType  != 0)
#line 408 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 409 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iType  = 0;
#line 410 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> SetSkaModel  (MD  . GetMobSmcFileName  ());
#line 411 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
penToDamage  -> GetModelInstance  () -> RefreshTagManager  ();
#line 412 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 413 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 414 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 415 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 417 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(penToDamage )
#line 418 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 419 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(((CUnit  *) penToDamage ) -> m_nCurrentHealth  <= 0 && penToDamage  != this )
#line 420 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 421 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((CUnit  *) ((CEntity  *) penToDamage )) -> DeathNow  ();
#line 422 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 423 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 424 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 430 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::ReceiveDamage(CEntity * penInflictor,enum DamageType dmtType,
#line 431 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fDamageAmmount,const FLOAT3D & vHitPoint,const FLOAT3D & vDirection) 
#line 432 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 433 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(dmtType  != DMT_NONE  && fDamageAmmount  > 0)
#line 434 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 435 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 436 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT angle  = acos  (vDirection  % vAxisY );
#line 437 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D axis  = vAxisY  * vDirection ;
#line 438 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
axis  . Normalize  ();
#line 439 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATquat3D quat ;
#line 440 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
quat  . FromAxisAngle  (axis  , angle );
#line 441 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  ("Normal Hit" 
#line 442 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  () , vHitPoint  , quat );
#line 443 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 444 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pUIMgr  -> ShowDamage  (en_ulID );
#line 446 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 452 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX CWildPet::AnimForDamage(FLOAT fDamage) 
#line 453 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 454 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAnimWildPet_Damage  != - 1 && "Invalid Animation");
#line 455 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 458 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(IsAnimationPlaying  (iAnimWildPet_Idle1 ) || IsAnimationPlaying  (iAnimWildPet_Idle2 ))
#line 459 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 460 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX animSet  , animIdx ;
#line 461 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 462 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(this  -> en_pmiModelInstance  
#line 463 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 464 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 466 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> en_pmiModelInstance  -> AddAnimationChild  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 467 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 468 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return animId ;
#line 469 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 471 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
NewClearState  (CLEAR_STATE_LENGTH );
#line 472 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAnimWildPet_Damage  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 475 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return iAnimWildPet_Damage ;
#line 476 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 479 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX CWildPet::AnimForDeath(void) 
#line 480 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 481 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAnimWildPet_Death  != - 1 && "Invalid Animation");
#line 485 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 486 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
NewClearState  (CLEAR_STATE_LENGTH );
#line 487 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAnimWildPet_Death  , AN_NORESTART  , 1 , 0);
#line 489 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return iAnimWildPet_Death ;
#line 490 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 493 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT CWildPet::WaitForDust(FLOAT3D & vStretch) 
#line 494 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 496 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vStretch  = FLOAT3D (1 , 1 , 1);
#line 497 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(GetModelInstance  () -> IsAnimationPlaying  (iAnimWildPet_Death ))
#line 498 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 499 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 0.5f;
#line 500 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 501 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return - 1.0f;
#line 502 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 504 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::DeathNotify(void) 
#line 505 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 507 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
en_fDensity  = 500.0f;
#line 509 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_EventType  == EVENT_MOBDESTROY )
#line 510 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 511 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SendToTarget  (m_penEventTarget  , EET_TRIGGER  , this );
#line 512 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 513 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 516 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::ClickedEvent(void) 
#line 517 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 518 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_EventType  == EVENT_MOBCLICK )
#line 519 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 520 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SendToTarget  (m_penEventTarget  , EET_TRIGGER  , this );
#line 521 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 522 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 524 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::StandingAnim(void) 
#line 525 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 526 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
float  frandom  = FRnd  ();
#line 527 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(frandom  < 0.5f)
#line 528 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 529 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iAttackAnim  = iAnimWildPet_Idle1 ;
#line 530 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 531 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 532 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 533 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iAttackAnim  = iAnimWildPet_Idle2 ;
#line 534 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 535 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bIsRun  = FALSE ;
#line 536 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAttackAnim  != - 1 && "Invalid Animation");
#line 537 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 538 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAttackAnim  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 540 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 542 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::RunningAnim(void) 
#line 543 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 544 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bIsRun  = TRUE ;
#line 545 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAnimWildPet_Run  != - 1 && "Invalid Animation");
#line 546 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 547 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAnimWildPet_Run  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 549 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 551 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::WalkingAnim(void) 
#line 552 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 553 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bIsRun  = FALSE ;
#line 554 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAnimWildPet_Walk  != - 1 && "Invalid Animation");
#line 555 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 556 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAnimWildPet_Walk  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 558 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 567 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::HungryAnim(void) 
#line 568 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 569 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAnimWildPet_Hungry  != - 1 && "Invalid Animation");
#line 570 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 571 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAnimWildPet_Hungry  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1 , 0);
#line 572 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  BOOL CWildPet::UseSkill(int iSkillIndex) 
#line 576 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 578 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if((_pNetwork  -> _WildPetInfo  . bIsActive  && (_pNetwork  -> _WildPetInfo  . m_nFaith  <= 0 || _pNetwork  -> _WildPetInfo  . m_nStm  <= 0)) 
#line 579 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
|| m_bStuned  || m_bHold )
#line 580 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 581 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 582 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 585 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bPlayAttackAnim )
#line 586 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 587 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nSkillChack  = iSkillIndex ;
#line 588 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 589 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 592 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkill  & SkillData  = _pNetwork  -> GetSkillData  (iSkillIndex );
#line 593 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 596 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bCannotUseSkill ){return FALSE ;}
#line 598 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
BOOL bHelp  = SkillData  . GetFlag  () & SF_FORHELP ;
#line 601 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(SkillData  . IsNeedTarget  ())
#line 602 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 603 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(! m_penEnemy ){return FALSE ;}
#line 604 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  && m_penEnemy  -> GetFlags  () & ENF_ALIVE )
#line 605 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 607 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(! bHelp  && m_penEnemy  -> IsPlayer  ())
#line 608 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 609 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 610 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 612 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vDelta  = GetPlacement  () . pl_PositionVector  - m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 613 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(vDelta  . Length  () > SkillData  . GetFireRange  ())
#line 614 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 615 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nSkillChack  = iSkillIndex ;
#line 616 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 617 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 619 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillData  . SetStartTime  ();
#line 621 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(SkillData  . GetTargetNum  () > 1)
#line 622 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 623 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> m_bSingleMode )
#line 624 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 625 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CPlacement3D Myplacement  = GetPlacement  ();
#line 626 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendMoveMessage  (this  , Myplacement  , m_fMoveSpeed );
#line 627 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 630 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 631 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Add  (m_penEnemy );
#line 633 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessageInContainer  (iSkillIndex  , this  , m_dcEnemies  , FALSE );
#line 635 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
const char  chTargetType  = SkillData  . GetTargetType  ();
#line 636 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fAngle  = 360.0f;
#line 638 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(chTargetType  == CSkill  :: STT_TARGET_D120 )
#line 639 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 640 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
fAngle  = 60.0f;
#line 641 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 643 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Add  (m_penEnemy );
#line 645 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> FindTargetsInRange  (this  , m_penEnemy  , m_dcEnemies  , 
#line 646 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillData  . GetAppRange  () , SkillData  . GetTargetNum  () - 1 , 360.0f , iSkillIndex  , chTargetType );
#line 648 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessageInContainer  (iSkillIndex  , this  , m_dcEnemies  , TRUE );
#line 649 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 650 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 651 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 652 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> m_bSingleMode )
#line 653 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 654 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CPlacement3D Myplacement  = GetPlacement  ();
#line 655 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendMoveMessage  (this  , Myplacement  , m_fMoveSpeed );
#line 656 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 658 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessage  (iSkillIndex  , this  , m_penEnemy  , FALSE );
#line 659 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessage  (iSkillIndex  , this  , m_penEnemy  , TRUE );
#line 660 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 661 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 662 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 664 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 665 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 666 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillData  . SetStartTime  ();
#line 667 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(SkillData  . GetTargetNum  () > 1)
#line 668 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 669 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> m_bSingleMode )
#line 670 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 671 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CPlacement3D Myplacement  = GetPlacement  ();
#line 672 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendMoveMessage  (this  , Myplacement  , m_fMoveSpeed );
#line 673 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 676 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 677 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Add  (this );
#line 679 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessageInContainer  (iSkillIndex  , this  , m_dcEnemies  , FALSE );
#line 681 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
const char  chTargetType  = SkillData  . GetTargetType  ();
#line 684 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(chTargetType  == CSkill  :: STT_SELF_RANGE )
#line 685 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 686 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> FindTargetsInRange  (this  , this  , m_dcEnemies  , 
#line 687 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillData  . GetAppRange  () , SkillData  . GetTargetNum  () - 1 , 360.0f , iSkillIndex );
#line 689 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessageInContainer  (iSkillIndex  , this  , m_dcEnemies  , TRUE );
#line 690 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 691 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 692 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 693 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 694 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> m_bSingleMode )
#line 695 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 696 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CPlacement3D Myplacement  = GetPlacement  ();
#line 697 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendMoveMessage  (this  , Myplacement  , m_fMoveSpeed );
#line 698 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 700 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessage  (iSkillIndex  , this  , this  , FALSE );
#line 701 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendSlaveSkillMessage  (iSkillIndex  , this  , this  , TRUE );
#line 702 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 703 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 705 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 706 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 708 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::SkillAnim(INDEX iAnimIndex,DWORD dwFlag,float fSpeed) 
#line 709 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 710 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAnimIndex  != - 1 && "Invalid Animation");
#line 711 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 713 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAnimIndex  , dwFlag  , 1 , 0 , fSpeed );
#line 716 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 718 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::AttackAnim(void) 
#line 719 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 720 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
float  frandom  = FRnd  ();
#line 721 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(frandom  < 0.5f)
#line 722 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 723 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iAttackAnim  = iAnimWildPet_Attack1 ;
#line 724 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 725 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 726 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 727 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iAttackAnim  = iAnimWildPet_Attack2 ;
#line 728 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 730 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (iAttackAnim  != - 1 && "Invalid Animation");
#line 731 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (GetModelInstance  () != NULL  && "Invalid ModelInstance");
#line 733 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static FLOAT start_attack_time  = 0;
#line 734 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static float  m_fBodyAnimTime  = 0;
#line 736 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(start_attack_time  == 0)
#line 737 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 738 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
start_attack_time  = _pTimer  -> CurrentTick  ();
#line 739 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAttackAnim  , AN_NORESTART  | AN_CLEAR  , 1.0f , 0);
#line 740 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fBodyAnimTime  = GetModelInstance  () -> GetAnimLength  (iAttackAnim );
#line 741 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 742 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(start_attack_time  != 0 && (_pTimer  -> CurrentTick  () - start_attack_time  >= m_fBodyAnimTime ))
#line 743 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 744 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bAttack  = FALSE ;
#line 745 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
start_attack_time  = 0;
#line 746 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 747 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 749 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::RotatingAnim(void) 
#line 750 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 751 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bIsRun )
#line 752 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 753 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
RunningAnim  ();
#line 754 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 755 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 756 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 757 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
WalkingAnim  ();
#line 758 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 759 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 762 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::EnemyPostInit(void) 
#line 763 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 765 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_WildPetSound  . Set3DParameters  (30.0f , 5.0f , 1.0f , 1.0f);
#line 766 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 768 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::AISerch(void) 
#line 769 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 770 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pUIMgr  -> GetWildPetInfo  () -> GetAIActive  ())
#line 771 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 772 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
sWildPet_AI_Slot  * sPetAI  = _pUIMgr  -> GetWildPetInfo  () -> GetPetAI  ();
#line 773 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX nSlotnum  = _pUIMgr  -> GetWildPetInfo  () -> GetPetAISlotCount  ();
#line 775 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(int  nSlot  = 0;nSlot  < nSlotnum ;nSlot  ++)
#line 776 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 777 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(sPetAI  [ nSlot  ] . m_bActive )
#line 778 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 779 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CItemData  & curItem  = _pNetwork  -> GetItemData  (sPetAI  [ nSlot  ] . m_nTargetSlot );
#line 780 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fRange  = GetItemRange  (curItem  . GetPetAISet0  ());
#line 781 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
int  nAISet1  = curItem  . GetPetAISet1  ();
#line 782 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fPercent  = GetItemPercent  (curItem  . GetPetAISet2  ());
#line 783 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
int  nTargettype  = curItem  . GetPetAISet3  ();
#line 785 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(AIResult  (fRange  , nAISet1  , fPercent  , nTargettype ))
#line 786 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 787 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(sPetAI  [ nSlot  ] . m_nSillType  == UBET_SKILL )
#line 788 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 789 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(! _pUIMgr  -> GetWildPetInfo  () -> GetSkillDelay  (nSlot ))
#line 790 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 791 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(UseSkill  (sPetAI  [ nSlot  ] . m_nActionSlot ))
#line 792 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 793 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_wPetState  = WPET_AI_USESKILL ;
#line 794 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return ;
#line 795 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 796 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(m_nSkillChack )
#line 797 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 798 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_wPetState  = WPET_AI_NONE ;
#line 799 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return ;
#line 800 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 801 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 803 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}else if(sPetAI  [ nSlot  ] . m_nSillType  == UBET_ACTION )
#line 804 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 805 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(sPetAI  [ nSlot  ] . m_nActionSlot  == 44 && nTargettype  != 7)
#line 806 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 807 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_wPetState  = WPET_AI_NORMALATTACK ;
#line 808 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return ;
#line 810 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}else if(sPetAI  [ nSlot  ] . m_nActionSlot  == 45 && nTargettype  == 7)
#line 811 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 812 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_wPetState  = WPET_AI_ACTION ;
#line 813 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return ;
#line 814 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 815 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 817 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 819 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 820 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 822 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 823 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_wPetState  = WPET_AI_FOLLOW ;
#line 824 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return ;
#line 825 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 827 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT CWildPet::GetItemRange(int nset0) 
#line 828 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 829 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
switch(nset0 )
#line 830 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 831 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 1: 
#line 832 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 833 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 3.0f;
#line 834 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 835 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 2: 
#line 836 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 837 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 5.0f;
#line 838 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 839 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 3: 
#line 840 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 841 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 10.0f;
#line 842 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 843 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 4: 
#line 844 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 845 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 20.0f;
#line 846 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 847 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 5: 
#line 848 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 849 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 30.0f;
#line 850 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 851 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 852 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 0.0f;
#line 853 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 855 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT CWildPet::GetItemPercent(int nset2) 
#line 856 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 857 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
switch(nset2 )
#line 858 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 859 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 1: 
#line 860 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 861 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 99.0f;
#line 862 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 863 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 2: 
#line 864 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 865 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 90.0f;
#line 866 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 867 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 3: 
#line 868 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 869 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 80.0f;
#line 870 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 871 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 4: 
#line 872 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 873 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 70.0f;
#line 874 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 875 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 5: 
#line 876 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 877 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 60.0f;
#line 878 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 879 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 6: 
#line 880 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 881 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 50.0f;
#line 882 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 883 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 884 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return 0.0f;
#line 885 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 887 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
BOOL CWildPet::AIResult(FLOAT fRange,int nSet1,FLOAT fPercent,int nTargettype) 
#line 888 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 889 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pTmpEnt ;
#line 891 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
switch(nTargettype )
#line 892 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 893 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 1: 
#line 894 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 895 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pTmpEnt  = ((CPlayer  *) CEntity  :: GetPlayerEntity  (0)) -> GetPlayerWeapons  () -> m_penRayHitTmp ;
#line 897 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pTmpEnt  == NULL  || ! pTmpEnt  -> IsEnemy  () || ! pTmpEnt  -> IsFlagOn  (ENF_ALIVE ) 
#line 898 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
|| pTmpEnt  -> GetFirstExFlags  () & (ENF_EX1_PEACEFUL  | ENF_EX1_PRODUCTION  | ENF_EX1_NPC  | ENF_EX1_CURRENT_PET  | ENF_EX1_CURRENT_WILDPET ))
#line 899 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 900 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 901 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 903 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(AISubChack  (pTmpEnt  , nSet1  , fPercent ))
#line 904 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 906 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(fRange  != 0.0f)
#line 907 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 908 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fEnemyDistance  = CalcDist  (pTmpEnt );
#line 909 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(fRange  > fEnemyDistance )
#line 910 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 911 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_penEnemy  = pTmpEnt ;
#line 912 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 913 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 915 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}else 
#line 916 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 917 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_penEnemy  = pTmpEnt ;
#line 918 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 919 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 920 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 921 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 950 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 2: 
#line 951 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 953 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 954 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 3: 
#line 955 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 957 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 958 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 4: 
#line 959 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 961 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> FindTargetsInRangeEx  (m_penOwner  , m_dcTargets  , fRange  , 10);
#line 963 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcTargets  . IsMember  (m_penOwner ))
#line 964 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 965 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcTargets  . SelectedEntitiesSort  ();
#line 966 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_penEnemy  = (* m_dcTargets  . vectorSelectedEntities  . begin  ());
#line 967 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 968 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 969 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 970 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 5: 
#line 971 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 972 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pTmpEnt  = this ;
#line 973 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(AISubChack  (pTmpEnt  , nSet1  , fPercent ))
#line 974 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 975 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 976 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 977 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 978 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 6: 
#line 979 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 980 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pTmpEnt  = CEntity  :: GetPlayerEntity  (0);
#line 981 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(AISubChack  (pTmpEnt  , nSet1  , fPercent ))
#line 982 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 983 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 984 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 985 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 986 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 7: 
#line 987 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 988 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(fRange  != 0.0f)
#line 989 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 990 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SearchNearItem  (fRange );
#line 991 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcTargets  . Count  () > 0)
#line 992 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 993 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_penEnemy  = (* m_dcTargets  . vectorSelectedEntities  . begin  ());
#line 994 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 995 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 996 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 999 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1000 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1001 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 1002 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 1005 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::SearchNearItem(FLOAT fRange) 
#line 1006 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1007 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcTargets  . Clear  ();
#line 1009 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(INDEX ipl  = 0;ipl  < _pNetwork  -> ga_srvServer  . srv_aitItem  . Count  ();ipl  ++)
#line 1010 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1011 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CItemTarget  & it  = _pNetwork  -> ga_srvServer  . srv_aitItem  [ ipl  ];
#line 1012 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(it  . item_pEntity  && (it  . item_yLayer  == _pNetwork  -> MyCharacterInfo  . yLayer ))
#line 1013 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1014 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
int  myLayer  = _pNetwork  -> MyCharacterInfo  . yLayer ;
#line 1015 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vDelta  = GetPlacement  () . pl_PositionVector  - it  . item_place ;
#line 1016 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDelta  (2) = 0.0f;
#line 1018 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(vDelta  . Length  () <= fRange )
#line 1019 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1020 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcTargets  . Add  (it  . item_pEntity );
#line 1021 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1022 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1023 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1024 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 1026 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
BOOL CWildPet::AISubChack(CEntity * pcurEnt,int nset1,FLOAT fset2) 
#line 1027 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1028 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(nset1  == 0 || fset2  == 0.0f)
#line 1029 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1030 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 1031 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1033 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
switch(nset1 )
#line 1034 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1035 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 1: 
#line 1036 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1037 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pcurEnt  -> IsCharacter  ())
#line 1038 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1039 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> MyCharacterInfo  . hp  < fset2 )
#line 1040 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1041 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 1042 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1043 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}else if(pcurEnt  == this )
#line 1044 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1045 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> _WildPetInfo  . m_nHP  < fset2 )
#line 1046 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1047 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 1048 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1049 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1050 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(pcurEnt  -> IsEnemy  ())
#line 1051 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1053 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1055 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1056 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 2: 
#line 1057 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1058 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pcurEnt  -> IsCharacter  ())
#line 1059 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1060 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> MyCharacterInfo  . mp  < fset2 )
#line 1061 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1062 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 1063 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1064 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}else if(pcurEnt  == this )
#line 1065 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1066 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> _WildPetInfo  . m_nMP  < fset2 )
#line 1067 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1068 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 1070 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1071 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1073 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1074 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 3: 
#line 1075 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1076 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> _WildPetInfo  . m_nStm  < fset2 )
#line 1077 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1078 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 1079 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1080 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1081 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 4: 
#line 1082 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1083 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> _WildPetInfo  . m_nFaith  < fset2 )
#line 1084 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1085 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE ;
#line 1086 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1088 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1090 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1092 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return FALSE ;
#line 1093 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
  
#line 1095 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
void CWildPet::SkillAndAttackFire(int num) 
#line 1096 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1097 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(! (m_penEnemy  . ep_pen  != NULL  
#line 1098 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& m_penEnemy  -> en_pmiModelInstance  != NULL  
#line 1099 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& m_penEnemy  -> GetFlags  () & ENF_ALIVE ))
#line 1100 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1101 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return ;
#line 1102 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1105 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if((_pNetwork  -> _WildPetInfo  . bIsActive  && (_pNetwork  -> _WildPetInfo  . m_nFaith  <= 0 || _pNetwork  -> _WildPetInfo  . m_nStm  <= 0)) 
#line 1106 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
|| m_bStuned  || m_bHold )
#line 1107 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1108 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return ;
#line 1109 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1111 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , FLOAT3D (0 , 0 , 0) , FLOAT3D (0 , 0 , 0));
#line 1113 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
switch(SkillEffectInfo  () -> iMissileType )
#line 1114 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1115 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 0: 
#line 1116 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1117 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vHitPoint ;
#line 1118 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vHitDir ;
#line 1119 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetTargetDirect  (this  , m_penEnemy  , vHitPoint  , vHitDir );
#line 1121 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1122 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1123 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , vHitPoint  , TRUE );
#line 1124 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1125 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1126 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1127 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1129 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , vHitPoint  , vHitDir );
#line 1130 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1132 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 1133 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT angle  = acos  (vHitDir  % vAxisY );
#line 1134 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D axis  = vAxisY  * vHitDir ;
#line 1135 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
axis  . Normalize  ();
#line 1136 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATquat3D quat ;
#line 1137 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
quat  . FromAxisAngle  (axis  , angle );
#line 1138 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 1139 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  () 
#line 1140 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, vHitPoint  , quat );
#line 1141 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1142 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 1: 
#line 1143 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1144 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1145 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1146 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 1147 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 1148 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1149 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pEn  = (* it );
#line 1150 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 1151 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1152 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMissile  (this  , "RHAND" , pEn  , SkillEffectInfo  () -> fMissileSpeed  , "Normal Hit" , "Normal Arrow Trace" , false );
#line 1153 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1154 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1155 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1156 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1157 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1158 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMissile  (this  , "RHAND" , m_penEnemy  , SkillEffectInfo  () -> fMissileSpeed  , "Normal Hit" , "Normal Arrow Trace" , false );
#line 1159 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1160 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1161 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 2: 
#line 1162 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1163 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 1164 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1165 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1166 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1167 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 3: 
#line 1168 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1169 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D lastEffectInfo  = m_penEnemy  -> en_plPlacement  . pl_PositionVector ;
#line 1170 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
lastEffectInfo  (2) += 1;
#line 1171 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_pSkillReadyEffect  != NULL  && CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pSkillReadyEffect ))
#line 1172 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1173 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(INDEX i  = 0;i  < m_pSkillReadyEffect  -> GetEffectCount  ();++ i )
#line 1174 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1175 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEffect  * pEffect  = m_pSkillReadyEffect  -> GetEffectKeyVector  () [ i  ] . m_pCreatedEffect ;
#line 1176 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pEffect  != NULL  && pEffect  -> GetType  () == ET_SKA )
#line 1177 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1178 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkaEffect  * pSkaEffect  = (CSkaEffect  *) pEffect ;
#line 1179 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
lastEffectInfo  = pSkaEffect  -> GetInstancePosition  ();
#line 1180 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
break ;
#line 1181 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1182 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1183 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(num  == SkillEffectInfo  () -> iFireDelayCount )
#line 1184 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1185 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  -> Stop  (0.04f);
#line 1186 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1187 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1188 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1189 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1190 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 1191 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 1192 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1193 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pEn  = (* it );
#line 1194 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 1195 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1196 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMagicContinued  (this  , lastEffectInfo  , FLOATquat3D (1 , 0 , 0 , 0) 
#line 1197 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, pEn  , SkillEffectInfo  () -> fMissileSpeed  
#line 1198 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  
#line 1199 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , 3);
#line 1200 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1201 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1202 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1203 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1204 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1205 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMagicContinued  (this  , lastEffectInfo  , FLOATquat3D (1 , 0 , 0 , 0) 
#line 1206 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, m_penEnemy  , SkillEffectInfo  () -> fMissileSpeed  
#line 1207 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  
#line 1208 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , 3);
#line 1209 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1210 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1211 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 4: {}break ;
#line 1212 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 5: {}break ;
#line 1213 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 6: {}break ;
#line 1214 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 7: {}break ;
#line 1215 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 8: 
#line 1216 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1217 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  (SkillEffectInfo  () -> szEffectNameHit  
#line 1218 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1219 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1220 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1221 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1222 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , FLOAT3D (0 , 0 , 0) , TRUE );
#line 1223 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1224 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1225 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1226 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1227 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , FLOAT3D (0 , 0 , 0) , FLOAT3D (0 , 0 , 0));
#line 1228 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1229 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1230 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 9: {}break ;
#line 1232 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
case 21: 
#line 1233 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1234 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 1235 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static INDEX s_iFireBallCount  = 10;
#line 1236 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static FLOAT s_fFallHeight  = 3;
#line 1237 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static FLOAT s_fFallHeightVariation  = 3;
#line 1238 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static FLOAT s_fSpeed  = 5;
#line 1239 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static FLOAT s_fSpeedVariation  = 5;
#line 1240 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(INDEX i  = 0;i  < s_iFireBallCount ;++ i )
#line 1241 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1242 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D pos  = CRandomTable  :: Instance  () . GetRndCylinderPos  () * skill  . GetAppRange  ();
#line 1243 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pos  (2) = CRandomTable  :: Instance  () . GetRndFactor  () * s_fFallHeightVariation  + s_fFallHeight ;
#line 1244 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pos  += m_penEnemy  -> GetPlacement  () . pl_PositionVector ;
#line 1245 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotFallDown  (pos  , FLOAT3D (0 , 1 , 0) , s_fSpeed  + s_fSpeedVariation  * CRandomTable  :: Instance  () . GetRndFactor  () 
#line 1246 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, SkillEffectInfo  () -> szEffectNameHit  , SkillEffectInfo  () -> szEffectNameMissile  , FALSE );
#line 1247 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1248 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1250 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
default  :
#line 1251 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1252 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERTALWAYS  ("Something wrong... Plz check fire obj type of this skill.");
#line 1253 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}break ;
#line 1254 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1255 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
BOOL CWildPet::
#line 1260 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Fire(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_Fire
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::Fire expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1262 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Jump(STATE_CURRENT, STATE_CWildPetBase_Fire, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1265 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Hit(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_Hit
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::Hit expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1267 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
STATE_CWildPet_NormalAttack, TRUE;
Jump(STATE_CURRENT, 0x4c900003, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c900003_Hit_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900003
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CWildPet_NormalAttack, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x4c900004, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CWildPet::H0x4c900004_Hit_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900004
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1268 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1268 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1272 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
AttackTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_AttackTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::AttackTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1275 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_vDesiredPosition  = EnemyDestinationPos  ();
#line 1276 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_nSkillChack )
#line 1277 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1278 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
UseSkill  (m_nSkillChack );
#line 1279 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1279 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1280 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1281 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bPlayAttackAnim  = TRUE ;
#line 1283 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX attackAnimID  = - 1;
#line 1284 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
attackAnimID  = iAnimWildPet_Attack1 ;
#line 1286 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillEffectInfo  = new  sSkillEffectInfo ;
#line 1287 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> InitForNormalAttack  (_pNetwork  -> GetMobData  (0) , attackAnimID );
#line 1289 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(strlen  (SkillEffectInfo  () -> szEffectNameHit ) == 0){SkillEffectInfo  () -> szEffectNameHit  = "Normal Hit";}
#line 1290 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(SkillEffectInfo  () -> iFireDelayCount  == 0)
#line 1291 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1292 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> iMissileType  = CSkill  :: MT_NONE ;
#line 1293 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> iFireDelayCount  = 1;
#line 1294 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> fFireDelay  [ 0 ] = GetAnimLength  (iAnimWildPet_Attack1 ) / 3;
#line 1295 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1297 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
STATE_CWildPet_AttackAnimation, TRUE;
Jump(STATE_CURRENT, 0x4c900006, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c900006_AttackTarget_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900006
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CWildPet_AttackAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x4c900007, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CWildPet::H0x4c900007_AttackTarget_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900007
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1298 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bPlayAttackAnim  = FALSE ;
#line 1299 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1299 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1346 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillingTarget(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_SkillingTarget
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::SkillingTarget expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1348 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_vDesiredPosition  = EnemyDestinationPos  ();
#line 1350 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 1351 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillEffectInfo  = new  sSkillEffectInfo ;
#line 1352 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> InitForSkillAttack  (skill );
#line 1354 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
STATE_CWildPet_SkillAnimation, TRUE;
Jump(STATE_CURRENT, 0x4c900009, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c900009_SkillingTarget_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900009
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CWildPet_SkillAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x4c90000a, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CWildPet::H0x4c90000a_SkillingTarget_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90000a
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1356 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1356 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1359 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SpellSkill(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_SpellSkill
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::SpellSkill expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1361 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_vDesiredPosition  = EnemyDestinationPos  ();
#line 1363 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
STATE_CWildPet_PreSkillAnimation, TRUE;
Jump(STATE_CURRENT, 0x4c90000c, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c90000c_SpellSkill_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90000c
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: Call(STATE_CURRENT, STATE_CWildPet_PreSkillAnimation, TRUE, EVoid());return TRUE;case EVENTCODE_EReturn: Jump(STATE_CURRENT,0x4c90000d, FALSE, __eeInput); return TRUE;default: return FALSE; }}BOOL CWildPet::H0x4c90000d_SpellSkill_02(const CEntityEvent &__eeInput){
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90000d
const EReturn&__e= (EReturn&)__eeInput;
;
#line 1365 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1365 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1368 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
PreSkillAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_PreSkillAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::PreSkillAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1370 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_vDesiredPosition  = EnemyDestinationPos  ();
#line 1372 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StopMoving  ();
#line 1374 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_idCurrentSkillAnim  = ska_StringToID  (_pNetwork  -> GetSkillData  (m_nCurrentSkillNum ) . GetReadyAnim  (FALSE ));
#line 1375 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fSkillAnimTime  = GetModelInstance  () -> GetAnimLength  (m_idCurrentSkillAnim ) * m_fSkillSpeed ;
#line 1376 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (m_idCurrentSkillAnim  , AN_NORESTART  , 1.0f , 0 , m_fSkillSpeed );
#line 1377 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_tmSkillStartTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 1380 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nEffectStep  = 0;
#line 1381 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_saLastEffectInfo  . Clear  ();
#line 1384 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetTimerAfter(m_fSkillAnimTime );
Jump(STATE_CURRENT, 0x4c90000f, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c90000f_PreSkillAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90000f
switch(__eeInput.ee_slEvent){case(EVENTCODE_EBegin):{const EBegin&e= (EBegin&)__eeInput;

#line 1387 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 1388 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_nEffectStep  == 0)
#line 1389 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1390 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
++ m_nEffectStep ;
#line 1391 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  = StartEffectGroup  (skill  . GetReadyEffect  (FALSE ) 
#line 1392 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1393 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1394 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_pSkillReadyEffect ){m_pSkillReadyEffect  -> SetSpeedMul  (m_fSkillSpeed );}
#line 1395 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1397 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1398 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x4c900010, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1400 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}return TRUE;}BOOL CWildPet::H0x4c900010_PreSkillAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900010

#line 1402 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_idCurrentSkillAnim  = ska_StringToID  (_pNetwork  -> GetSkillData  (m_nCurrentSkillNum ) . GetFireAnim  (FALSE ));
#line 1404 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fSkillAnimTime  = GetModelInstance  () -> GetAnimLength  (m_idCurrentSkillAnim ) * m_fSkillSpeed ;
#line 1407 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (m_idCurrentSkillAnim  , AN_LOOPING  | AN_NORESTART  | AN_CLEAR  , 1.0f , 0 , m_fSkillSpeed );
#line 1408 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_tmSkillStartTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 1409 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x4c900011, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c900011_PreSkillAnimation_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900011
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x4c900012, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CWildPet::H0x4c900012_PreSkillAnimation_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900012
;
#line 1411 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1411 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1414 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
AttackAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_AttackAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::AttackAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1416 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
float  frandom  = FRnd  ();
#line 1417 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(frandom  < 0.5f)
#line 1418 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1419 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iAttackAnim  = iAnimWildPet_Attack1 ;
#line 1420 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1421 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1422 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1423 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
iAttackAnim  = iAnimWildPet_Attack2 ;
#line 1424 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1426 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (iAttackAnim  , AN_CLEAR  , 1.0f , 0);
#line 1428 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
AddAnimation  (iAttackAnim  , AN_CLEAR  , 1.0f , 0 , - 1 , m_fAttackSpeedMul );
#line 1430 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fAttackFrequency  = 0.25f;
#line 1431 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fAttackStartTime  = _pTimer  -> CurrentTick  ();
#line 1432 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fImpactTime  = GetAnimLength  (iAttackAnim ) / 3;
#line 1434 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Jump(STATE_CURRENT,0x4c900016, FALSE, EInternal());return TRUE;}BOOL CWildPet::H0x4c900016_AttackAnimation_03(const CEntityEvent &__eeInput)
#line 1435 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900016
if(!(_pTimer  -> CurrentTick  () - m_fAttackStartTime  < GetAnimLength  (iAttackAnim ) * 0.8f)){ Jump(STATE_CURRENT,0x4c900017, FALSE, EInternal());return TRUE;}
#line 1437 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetTimerAfter(m_fAttackFrequency );
Jump(STATE_CURRENT, 0x4c900014, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c900014_AttackAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900014
switch(__eeInput.ee_slEvent)
#line 1438 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{case(EVENTCODE_EBegin):
#line 1440 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1441 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fMoveSpeed  = 0.0f;
#line 1442 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 1444 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pTimer  -> CurrentTick  () - m_fAttackStartTime  > m_fImpactTime )
#line 1445 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1446 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy )
#line 1447 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1448 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pUIMgr  -> ShowDamage  (m_penEnemy  -> en_ulID );
#line 1449 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1450 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SendEvent  (EWildPetAttackDamage  ());
#line 1451 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1452 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fImpactTime  = 1000.0f;
#line 1454 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1455 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_EWildPetBaseDamage):
#line 1457 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{const EWildPetBaseDamage&eEBDamage= (EWildPetBaseDamage&)__eeInput;

#line 1459 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 1460 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_fDamageConfused  < 0.001f)
#line 1461 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1462 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 1464 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX animSet  , animIdx ;
#line 1465 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 1466 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(this  -> en_pmiModelInstance  
#line 1467 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 1468 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1470 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> en_pmiModelInstance  -> AddAnimation  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 1471 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1472 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1473 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1474 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_EWildPetAttackDamage):
#line 1476 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{const EWildPetAttackDamage&eAttackDamage= (EWildPetAttackDamage&)__eeInput;

#line 1479 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pen  = m_penEnemy ;
#line 1480 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vCurrentCenter  (((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1481 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1482 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1483 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vCurrentPos  = this  -> en_plPlacement  . pl_PositionVector  + vCurrentCenter ;
#line 1484 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vTargetCenter  (0 , 0 , 0);
#line 1485 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vTargetPos  (0 , 0 , 0);
#line 1486 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vDirection  (0 , 0 , 0);
#line 1487 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT size  = 0;
#line 1488 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pen  != NULL  && pen  -> GetFlags  () & ENF_ALIVE )
#line 1489 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1490 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pen  -> en_RenderType  == RT_SKAMODEL )
#line 1491 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1493 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATaabbox3D bbox ;
#line 1494 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pen  -> GetModelInstance  () -> GetCurrentColisionBox  (bbox );
#line 1495 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vRadius  = (bbox  . maxvect  - bbox  . minvect ) * 0.5f * 0.4f;
#line 1496 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
size  = vRadius  . Length  ();
#line 1497 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1498 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetCenter  = FLOAT3D (((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1499 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1500 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1501 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetPos  = pen  -> en_plPlacement  . pl_PositionVector  + vTargetCenter ;
#line 1502 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  = vTargetPos  - vCurrentPos ;
#line 1503 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  . Normalize  ();
#line 1504 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetPos  -= vDirection  * size ;
#line 1505 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1506 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  . Normalize  ();
#line 1511 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
InflictDirectDamage  (m_penEnemy  , this  , DMT_CLOSERANGE  , (int ) 1 , vTargetPos  , vDirection );
#line 1515 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fImpactTime  = 1000.0f;
#line 1517 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
UnsetTimer();Jump(STATE_CURRENT,0x4c900015, FALSE, EInternal());return TRUE;
#line 1518 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x4c900015, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1520 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}return TRUE;}BOOL CWildPet::H0x4c900015_AttackAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900015
Jump(STATE_CURRENT,0x4c900016, FALSE, EInternal());return TRUE;
#line 1521 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}BOOL CWildPet::H0x4c900017_AttackAnimation_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900017

#line 1523 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penKillEnemy  != NULL )
#line 1524 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1525 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(((CUnit  *) ((CEntity  *) m_penKillEnemy )) -> m_nCurrentHealth  <= 0)
#line 1526 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1527 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((CUnit  *) ((CEntity  *) m_penKillEnemy )) -> DeathNow  ();
#line 1528 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1529 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_penKillEnemy  = NULL ;
#line 1530 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1532 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(! m_bUseAI )
#line 1533 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1534 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bAttack  = FALSE ;
#line 1535 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bMoving  = FALSE ;
#line 1536 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bStop  = FALSE ;
#line 1537 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StandingAnim  ();
#line 1538 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetNoTargetEntity  ();
#line 1539 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1540 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1540 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1543 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_SkillAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::SkillAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1545 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_idCurrentSkillAnim  = ska_StringToID  (_pNetwork  -> GetSkillData  (m_nCurrentSkillNum ) . GetFireAnim  (FALSE ));
#line 1547 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_idCurrentSkillAnim  == - 1)
#line 1548 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1549 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1549 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1550 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1552 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StopRotating  ();
#line 1553 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  == NULL )
#line 1554 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1555 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_pSkillReadyEffect  != NULL  && CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pSkillReadyEffect ))
#line 1556 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1557 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  -> Stop  (0.1f);
#line 1558 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  = NULL ;
#line 1559 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1560 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1563 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nEffectStep  = 0;
#line 1567 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
NewClearState  (CLEAR_STATE_LENGTH );
#line 1569 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fSkillAnimTime  = GetModelInstance  () -> GetAnimLength  (m_idCurrentSkillAnim ) * m_fSkillSpeed ;
#line 1570 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_tmSkillStartTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 1572 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (m_idCurrentSkillAnim  , AN_NORESTART  , 1.0f , m_fSkillSpeed );
#line 1574 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fAttackFrequency  = 0.25f;
#line 1575 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fImpactTime  = GetAnimLength  (m_idCurrentSkillAnim ) * m_fSkillSpeed  / 2;
#line 1577 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Jump(STATE_CURRENT,0x4c90001b, FALSE, EInternal());return TRUE;}BOOL CWildPet::H0x4c90001b_SkillAnimation_03(const CEntityEvent &__eeInput)
#line 1578 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90001b
if(!(_pTimer  -> CurrentTick  () - m_tmSkillStartTime  < m_fSkillAnimTime )){ Jump(STATE_CURRENT,0x4c90001c, FALSE, EInternal());return TRUE;}
#line 1579 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetTimerAfter(m_fAttackFrequency );
Jump(STATE_CURRENT, 0x4c900019, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c900019_SkillAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900019
switch(__eeInput.ee_slEvent)
#line 1580 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{case(EVENTCODE_EBegin):
#line 1582 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1583 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bMoving )
#line 1584 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1585 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1585 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1586 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1589 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkill  & skill  = _pNetwork  -> GetSkillData  (m_nCurrentSkillNum );
#line 1591 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_nEffectStep  == 0)
#line 1592 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1593 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
++ m_nEffectStep ;
#line 1595 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEffectGroup  * pFireEffect  = StartEffectGroup  (skill  . GetFireEffect1  (FALSE ) , & en_pmiModelInstance  -> m_tmSkaTagManager  , _pTimer  -> GetLerpedCurrentTick  ());
#line 1596 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pFireEffect ){pFireEffect  -> SetSpeedMul  (m_fSkillSpeed );}
#line 1597 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_pSkillReadyEffect  != NULL  && CEffectGroupManager  :: Instance  () . IsValidCreated  (m_pSkillReadyEffect ))
#line 1598 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1599 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(INDEX i  = 0;i  < m_pSkillReadyEffect  -> GetEffectCount  ();++ i )
#line 1600 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1601 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEffect  * pEffect  = m_pSkillReadyEffect  -> GetEffectKeyVector  () [ i  ] . m_pCreatedEffect ;
#line 1602 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pEffect  != NULL  && pEffect  -> GetType  () == ET_SKA )
#line 1603 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1604 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkaEffect  * pSkaEffect  = (CSkaEffect  *) pEffect ;
#line 1605 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
TagInfo  ti ;
#line 1606 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ti  . m_vPos  = pSkaEffect  -> GetInstancePosition  ();
#line 1607 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ti  . m_qRot  = FLOATquat3D (1 , 0 , 0 , 0);
#line 1608 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX cnt  = m_saLastEffectInfo  . Count  ();
#line 1609 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_saLastEffectInfo  . Expand  (cnt  + 1);
#line 1610 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_saLastEffectInfo  [ cnt  ] = ti ;
#line 1611 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1612 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1613 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  -> Stop  (0.04f);
#line 1614 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  = NULL ;
#line 1615 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1616 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(pFireEffect  != NULL )
#line 1617 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1618 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pFireEffect  -> Process  (_pTimer  -> GetLerpedCurrentTick  ());
#line 1619 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(INDEX i  = 0;i  < pFireEffect  -> GetEffectCount  ();++ i )
#line 1620 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1621 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEffect  * pEffect  = pFireEffect  -> GetEffectKeyVector  () [ i  ] . m_pCreatedEffect ;
#line 1622 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pEffect  != NULL  && pEffect  -> GetType  () == ET_SKA )
#line 1623 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1624 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkaEffect  * pSkaEffect  = (CSkaEffect  *) pEffect ;
#line 1625 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
TagInfo  ti ;
#line 1626 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ti  . m_vPos  = pSkaEffect  -> GetInstancePosition  ();
#line 1627 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ti  . m_qRot  = FLOATquat3D (1 , 0 , 0 , 0);
#line 1628 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX cnt  = m_saLastEffectInfo  . Count  ();
#line 1629 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_saLastEffectInfo  . Expand  (cnt  + 1);
#line 1630 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_saLastEffectInfo  [ cnt  ] = ti ;
#line 1631 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pSkaEffect  -> SetLifeTime  (0);
#line 1632 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1633 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1634 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1635 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1636 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (skill  . GetDelay  (m_nEffectStep  - 1 , FALSE ) < GetAnimLength  (m_idCurrentSkillAnim ) && "SkillAnimTime은 반드시 MissileSpeedFireTime보다 커야합니다.");
#line 1639 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_nEffectStep  <= skill  . GetDelayCount  (FALSE ) 
#line 1640 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& _pTimer  -> GetLerpedCurrentTick  () - m_tmSkillStartTime  > skill  . GetDelay  (m_nEffectStep  - 1 , FALSE ) * m_fSkillSpeed )
#line 1641 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1642 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
++ m_nEffectStep ;
#line 1643 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(skill  . GetMissileType  (FALSE ) == CSkill  :: MT_NONE  && m_penEnemy  . ep_pen  != NULL )
#line 1644 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1645 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vHitPoint ;
#line 1646 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vHitDir ;
#line 1647 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetTargetDirection  (vHitPoint  , vHitDir );
#line 1649 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1650 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1651 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , vHitPoint  , TRUE );
#line 1652 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1653 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1654 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1655 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1657 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  != NULL )
#line 1658 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1659 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , vHitPoint  , vHitDir );
#line 1660 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1661 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1662 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vAxisY  (0 , 1 , 0);
#line 1663 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT angle  = acos  (vHitDir  % vAxisY );
#line 1664 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D axis  = vAxisY  * vHitDir ;
#line 1665 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
axis  . Normalize  ();
#line 1666 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATquat3D quat ;
#line 1667 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
quat  . FromAxisAngle  (axis  , angle );
#line 1668 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  (skill  . GetFireEffect3  (FALSE ) , _pTimer  -> GetLerpedCurrentTick  () , vHitPoint  , quat );
#line 1669 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1670 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(skill  . GetMissileType  (FALSE ) == CSkill  :: MT_ARROW  && m_penEnemy  . ep_pen  != NULL )
#line 1671 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1672 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ASSERT  (en_pmiModelInstance  != NULL );
#line 1674 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fHoriOffset  = 0.0f;
#line 1675 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fVertiOffset  = 0.0f;
#line 1676 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(skill  . GetDelayCount  (FALSE ) > 1)
#line 1677 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1678 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT fDist  = (m_penEnemy  -> en_plPlacement  . pl_PositionVector  - en_plPlacement  . pl_PositionVector ) . Length  ();
#line 1679 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT factor  = 1.3f * fDist  / skill  . GetFireRange  ();
#line 1680 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
factor  = Clamp  (factor  , 0.0f , 1.0f);
#line 1681 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_nEffectStep  == 2){fHoriOffset  = + 1.0f * factor ;}
#line 1682 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_nEffectStep  == 3){fHoriOffset  = - 1.0f * factor ;}
#line 1684 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_nEffectStep  == 5){fVertiOffset  = - 1.0f * factor ;}
#line 1685 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1686 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(FALSE )
#line 1687 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1688 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1689 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1690 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 1691 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 1692 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1693 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pEn  = (* it );
#line 1694 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 1695 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1696 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMissile  (this  , "STAFF" , pEn  , skill  . GetMissileSpeed  (FALSE ) 
#line 1697 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, skill  . GetFireEffect3  (FALSE ) , skill  . GetFireEffect2  (FALSE ) 
#line 1698 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , fHoriOffset  , fVertiOffset  , 0);
#line 1699 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1700 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1701 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1702 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1703 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1704 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1705 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMissile  (this  , "STAFF" , m_penEnemy  . ep_pen  , skill  . GetMissileSpeed  (FALSE ) 
#line 1706 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, skill  . GetFireEffect3  (FALSE ) , skill  . GetFireEffect2  (FALSE ) 
#line 1707 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , fHoriOffset  , fVertiOffset  , 1);
#line 1708 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1709 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1710 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1711 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1712 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1713 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1714 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 1715 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 1716 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1717 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pEn  = (* it );
#line 1718 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pEn  != NULL  && pEn  -> IsFlagOff  (ENF_DELETED ))
#line 1719 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1720 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMissile  (this  , "RHAND" , pEn  , skill  . GetMissileSpeed  (FALSE ) 
#line 1721 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, skill  . GetFireEffect3  (FALSE ) , skill  . GetFireEffect2  (FALSE ) 
#line 1722 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , fHoriOffset  , fVertiOffset  , 0);
#line 1723 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1724 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1725 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1726 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1727 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1728 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1729 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMissile  (this  , "RHAND" , m_penEnemy  . ep_pen  , skill  . GetMissileSpeed  (FALSE ) 
#line 1730 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, skill  . GetFireEffect3  (FALSE ) , skill  . GetFireEffect2  (FALSE ) 
#line 1731 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , fHoriOffset  , fVertiOffset  , 0);
#line 1732 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1733 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1734 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1735 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(skill  . GetMissileType  (FALSE ) == CSkill  :: MT_DIRECT  && m_penEnemy  . ep_pen  != NULL )
#line 1736 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1737 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  -> GetFlags  () & ENF_ALIVE  && m_penEnemy  -> en_pmiModelInstance  != NULL )
#line 1738 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1739 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  (skill  . GetFireEffect3  (FALSE ) 
#line 1740 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1741 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1742 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1743 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1744 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if(skill  . GetMissileType  (FALSE ) == CSkill  :: MT_DIRECTDAMAGE  && m_penEnemy  . ep_pen  != NULL )
#line 1745 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1746 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1747 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1748 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 1749 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 1750 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1751 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  & en  = * (* it );
#line 1752 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(en  . IsFlagOn  (ENF_ALIVE ) && en  . en_pmiModelInstance  != NULL )
#line 1753 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1754 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  (skill  . GetFireEffect3  (FALSE ) 
#line 1755 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & (en  . en_pmiModelInstance  -> m_tmSkaTagManager ) 
#line 1756 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1757 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1758 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1761 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1762 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1763 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vHitPoint ;
#line 1764 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vHitDir ;
#line 1765 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetTargetDirection  (vHitPoint  , vHitDir );
#line 1766 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_EXPLOSION  , 1 , vHitPoint  , TRUE );
#line 1767 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1768 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1769 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1770 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1771 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1772 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_NONE  , 1 , FLOAT3D (0 , 0 , 0) , FLOAT3D (0 , 0 , 0));
#line 1774 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  -> en_pmiModelInstance  != NULL )
#line 1775 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1776 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StartEffectGroup  (skill  . GetFireEffect3  (FALSE ) 
#line 1777 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & m_penEnemy  -> en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1778 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1779 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1780 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1781 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1782 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else if((skill  . GetMissileType  (FALSE ) == CSkill  :: MT_CONTINUE  || 
#line 1783 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
skill  . GetMissileType  (FALSE ) == CSkill  :: MT_MAGECUTTER ) 
#line 1784 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& m_penEnemy  != NULL  && m_saLastEffectInfo  . Count  () != 0)
#line 1785 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1786 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1787 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1788 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(ENTITIES_ITERATOR  it  = m_dcEnemies  . vectorSelectedEntities  . begin  ();
#line 1789 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
it  != m_dcEnemies  . vectorSelectedEntities  . end  ();++ it )
#line 1790 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1791 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  & en  = * (* it );
#line 1792 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(en  . IsFlagOff  (ENF_DELETED ))
#line 1793 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1794 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMagicContinued  (this  , m_saLastEffectInfo  [ 0 ] . m_vPos  , m_saLastEffectInfo  [ 0 ] . m_qRot  
#line 1795 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & en  , skill  . GetMissileSpeed  (FALSE ) 
#line 1796 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, skill  . GetFireEffect3  (FALSE ) , skill  . GetFireEffect2  (FALSE ) 
#line 1797 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , skill  . GetMissileType  (FALSE ));
#line 1798 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1799 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1800 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1801 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1802 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1803 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1804 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ShotMagicContinued  (this  , m_saLastEffectInfo  [ 0 ] . m_vPos  , m_saLastEffectInfo  [ 0 ] . m_qRot  
#line 1805 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, m_penEnemy  , skill  . GetMissileSpeed  (FALSE ) 
#line 1806 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, skill  . GetFireEffect3  (FALSE ) , skill  . GetFireEffect2  (FALSE ) 
#line 1807 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, false  , skill  . GetMissileType  (FALSE ));
#line 1808 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1809 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX cnt  = m_saLastEffectInfo  . Count  ();
#line 1810 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CStaticArray  < TagInfo  > temp ;
#line 1811 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
temp  . New  (cnt  - 1);
#line 1812 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
for(INDEX i  = 1;i  < m_saLastEffectInfo  . Count  ();++ i )
#line 1813 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1814 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
temp  [ i  - 1 ] = m_saLastEffectInfo  [ i  ];
#line 1815 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1816 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_saLastEffectInfo  = temp ;
#line 1817 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1818 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1819 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fMoveSpeed  = 0.0f;
#line 1820 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  != NULL  
#line 1821 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& skill  . GetMissileType  (FALSE ) != CSkill  :: MT_NOTHING )
#line 1822 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1823 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ULONG  ulFlags  = SetDesiredMovement  ();
#line 1824 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1826 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1827 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_EWildPetAttackDamage):
#line 1829 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{const EWildPetAttackDamage&eAttackDamage= (EWildPetAttackDamage&)__eeInput;

#line 1830 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CEntity  * pen  = m_penEnemy ;
#line 1831 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vCurrentCenter  (((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1832 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1833 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (this  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1834 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vCurrentPos  = this  -> en_plPlacement  . pl_PositionVector  + vCurrentCenter ;
#line 1835 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vTargetCenter  (0 , 0 , 0);
#line 1836 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vTargetPos  (0 , 0 , 0);
#line 1837 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vDirection  (0 , 0 , 0);
#line 1838 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT size  = 0;
#line 1839 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pen  != NULL  && pen  -> GetFlags  () & ENF_ALIVE )
#line 1840 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1841 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(pen  -> en_RenderType  == RT_SKAMODEL )
#line 1842 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1844 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATaabbox3D bbox ;
#line 1845 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
pen  -> GetModelInstance  () -> GetCurrentColisionBox  (bbox );
#line 1846 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT3D vRadius  = (bbox  . maxvect  - bbox  . minvect ) * 0.5f * 0.4f;
#line 1847 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
size  = vRadius  . Length  ();
#line 1848 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1849 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetCenter  = FLOAT3D (((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 0 ] , 
#line 1850 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 1 ] , 
#line 1851 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
((EntityInfo  *) (pen  -> GetEntityInfo  ())) -> vTargetCenter  [ 2 ]);
#line 1852 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetPos  = pen  -> en_plPlacement  . pl_PositionVector  + vTargetCenter ;
#line 1853 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  = vTargetPos  - vCurrentPos ;
#line 1854 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  . Normalize  ();
#line 1855 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vTargetPos  -= vDirection  * size ;
#line 1856 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1857 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
vDirection  . Normalize  ();
#line 1858 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_dcEnemies  . Count  () > 0)
#line 1859 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1860 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
DamagedTargetsInRange  (this  , m_dcEnemies  , DMT_CLOSERANGE  , 1 , vTargetPos  , TRUE );
#line 1861 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_dcEnemies  . Clear  ();
#line 1862 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1863 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
else 
#line 1864 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1865 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  != NULL )
#line 1866 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1867 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> InflictDirectDamage  (m_penEnemy  , this  , DMT_CLOSERANGE  , (int ) 1 , vTargetPos  , vDirection );
#line 1868 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1869 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1870 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fImpactTime  = 1000.0f;
#line 1872 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
UnsetTimer();Jump(STATE_CURRENT,0x4c90001a, FALSE, EInternal());return TRUE;
#line 1873 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x4c90001a, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1876 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}return TRUE;}BOOL CWildPet::H0x4c90001a_SkillAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90001a
Jump(STATE_CURRENT,0x4c90001b, FALSE, EInternal());return TRUE;
#line 1877 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}BOOL CWildPet::H0x4c90001c_SkillAnimation_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90001c

#line 1884 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bMoving  = FALSE ;
#line 1885 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bStop  = FALSE ;
#line 1886 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StandingAnim  ();
#line 1887 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bSkilling  = FALSE ;
#line 1888 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nSkillChack  = 0;
#line 1889 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_wPetState  = WPET_AI_FOLLOW ;
#line 1891 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1891 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1895 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillAndMagicAnimation(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_SkillAndMagicAnimation
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::SkillAndMagicAnimation expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1897 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(SkillEffectInfo  () -> dwValidValue  != 0)
#line 1898 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1899 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1900 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
delete  m_pSkillEffectInfo ;
#line 1901 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillEffectInfo  = NULL ;
#line 1902 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1902 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1903 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1905 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fAttackFrequency  = 0.05f;
#line 1906 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fAttackStartTime  = _pTimer  -> GetLerpedCurrentTick  ();
#line 1907 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fImpactTime  = GetAnimLength  (iAnimWildPet_Attack1 ) / 3;
#line 1909 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> AddAnimation  (SkillEffectInfo  () -> iAnimatioID  , AN_CLEAR  , 1.0f , 0);
#line 1911 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nEffectStep  = 1;
#line 1912 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  = NULL ;
#line 1913 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillReadyEffect  = StartEffectGroup  (SkillEffectInfo  () -> szEffectNameCast  
#line 1914 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, & en_pmiModelInstance  -> m_tmSkaTagManager  
#line 1915 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
, _pTimer  -> GetLerpedCurrentTick  ());
#line 1917 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Jump(STATE_CURRENT,0x4c900020, FALSE, EInternal());return TRUE;}BOOL CWildPet::H0x4c900020_SkillAndMagicAnimation_03(const CEntityEvent &__eeInput)
#line 1918 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900020
if(!(_pTimer  -> GetLerpedCurrentTick  () - m_fAttackStartTime  < GetAnimLength  (SkillEffectInfo  () -> iAnimatioID ) * 0.8f)){ Jump(STATE_CURRENT,0x4c900021, FALSE, EInternal());return TRUE;}
#line 1919 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetTimerAfter(m_fAttackFrequency );
Jump(STATE_CURRENT, 0x4c90001e, FALSE, EBegin());return TRUE;}BOOL CWildPet::H0x4c90001e_SkillAndMagicAnimation_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90001e
switch(__eeInput.ee_slEvent)
#line 1920 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{case(EVENTCODE_EBegin):
#line 1922 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{const EBegin&e= (EBegin&)__eeInput;

#line 1923 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bStop )
#line 1924 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1925 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
DestroyEffectGroupIfValid  (m_pSkillReadyEffect );
#line 1927 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
StandingAnim  ();
#line 1928 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1929 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
delete  m_pSkillEffectInfo ;
#line 1930 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillEffectInfo  = NULL ;
#line 1931 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1931 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1932 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1934 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fMoveSpeed  = 0.0f;
#line 1935 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  . ep_pen  != this )
#line 1936 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1937 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetDesiredMovement  ();
#line 1938 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1940 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOAT time  = _pTimer  -> GetLerpedCurrentTick  () - m_fAttackStartTime ;
#line 1941 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 0 ] && m_nEffectStep  == 1 && SkillEffectInfo  () -> iFireDelayCount  > 0)
#line 1942 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1943 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
++ m_nEffectStep ;
#line 1944 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillAndAttackFire  (1);
#line 1945 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1946 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 1 ] && m_nEffectStep  == 2 && SkillEffectInfo  () -> iFireDelayCount  > 1)
#line 1947 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1948 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
++ m_nEffectStep ;
#line 1949 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillAndAttackFire  (2);
#line 1950 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1951 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 2 ] && m_nEffectStep  == 3 && SkillEffectInfo  () -> iFireDelayCount  > 2)
#line 1952 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1953 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
++ m_nEffectStep ;
#line 1954 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillAndAttackFire  (3);
#line 1955 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1956 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(time  >= SkillEffectInfo  () -> fFireDelay  [ 3 ] && m_nEffectStep  == 4 && SkillEffectInfo  () -> iFireDelayCount  > 3)
#line 1957 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1958 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
++ m_nEffectStep ;
#line 1959 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillAndAttackFire  (4);
#line 1960 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1961 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1962 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_EEnemyBaseDamage):
#line 1964 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{const EEnemyBaseDamage&eEBDamage= (EEnemyBaseDamage&)__eeInput;

#line 1966 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fDamageConfused  -= eEBDamage  . fAmount ;
#line 1967 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_fDamageConfused  < 0.001f)
#line 1968 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1969 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fDamageConfused  = m_fDamageWounded ;
#line 1971 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
INDEX animSet  , animIdx ;
#line 1972 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
static INDEX animId  = ska_StringToID  ("mldam");
#line 1973 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(this  -> en_pmiModelInstance  
#line 1974 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
&& this  -> en_pmiModelInstance  -> FindAnimationByID  (animId  , & animSet  , & animIdx ))
#line 1975 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 1977 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
this  -> en_pmiModelInstance  -> AddAnimation  (animId  , AN_REMOVE_ON_END  , 1.0f , 0);
#line 1978 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1979 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 1980 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 1981 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}ASSERT(FALSE);break;case(EVENTCODE_ETimer):{const ETimer&e= (ETimer&)__eeInput;
UnsetTimer();Jump(STATE_CURRENT,0x4c90001f, FALSE, EInternal());return TRUE;}ASSERT(FALSE);break;default: return FALSE; break;
#line 1983 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}return TRUE;}BOOL CWildPet::H0x4c90001f_SkillAndMagicAnimation_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c90001f
Jump(STATE_CURRENT,0x4c900020, FALSE, EInternal());return TRUE;
#line 1984 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}BOOL CWildPet::H0x4c900021_SkillAndMagicAnimation_04(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x4c900021

#line 1986 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nEffectStep  = 0;
#line 1987 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SkillEffectInfo  () -> dwValidValue  = 0xBAD0BEEF;
#line 1988 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
delete  m_pSkillEffectInfo ;
#line 1989 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_pSkillEffectInfo  = NULL ;
#line 1990 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 1990 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 1994 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
NormalAttack(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_NormalAttack
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::NormalAttack expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 1997 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if((_pNetwork  -> _WildPetInfo  . bIsActive  && (_pNetwork  -> _WildPetInfo  . m_nFaith  <= 0 || _pNetwork  -> _WildPetInfo  . m_nStm  <= 0)) 
#line 1998 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
|| m_bStuned  || m_bHold )
#line 1999 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2000 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 2000 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 2001 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2003 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_penEnemy  && m_penEnemy  -> GetFlags  () & ENF_ALIVE )
#line 2004 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2005 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bUseAI )
#line 2006 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2008 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(! (CEntity  :: GetPlayerEntity  (0) -> GetFlags  () & ENF_ALIVE ))
#line 2009 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2010 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 2010 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 2011 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2013 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(m_bSkilling )
#line 2014 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2015 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 2015 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 2016 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}else if(m_nSkillChack )
#line 2017 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2018 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
UseSkill  (m_nSkillChack );
#line 2019 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_nSkillChack  = 0;
#line 2020 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 2020 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 2021 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2023 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(_pNetwork  -> m_bSingleMode )
#line 2024 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2026 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CPlacement3D Myplacement  = GetPlacement  ();
#line 2027 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendMoveMessage  (this  , Myplacement  , m_fMoveSpeed );
#line 2029 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> AddMoveList  (* m_penEnemy );
#line 2031 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendMoveList  ();
#line 2032 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2033 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
_pNetwork  -> SendAttackMessage  (this  , m_penEnemy  , FALSE );
#line 2034 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2035 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2036 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EReturn  ());
#line 2036 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE; ASSERT(FALSE); return TRUE;};BOOL CWildPet::
#line 2042 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CWildPet_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CWildPet::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 2044 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(GetModelInstance  () == NULL )
#line 2045 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2046 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
InitAsSkaEditorModel  ();
#line 2047 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetSkaModel  ("Models\\Editor\\Ska\\Axis.smc");
#line 2048 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Return(STATE_CURRENT,EEnd  ());
#line 2048 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
return TRUE;
#line 2049 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2051 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(GetModelInstance  () != NULL )
#line 2052 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2053 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkaTag  tag ;
#line 2054 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetName  ("__ROOT");
#line 2055 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 2056 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 2057 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATaabbox3D aabb ;
#line 2058 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 2059 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetName  ("CENTER");
#line 2060 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 2061 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) * 0.5f * GetModelInstance  () -> mi_vStretch  (2) , 0);
#line 2062 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 2063 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetName  ("__TOP");
#line 2064 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 2065 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) * GetModelInstance  () -> mi_vStretch  (2) , 0);
#line 2066 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 2067 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2070 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetFlags  (GetFlags  () | ENF_ALIVE );
#line 2072 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
en_sbNetworkType  = MSG_CHAR_WILDPET ;
#line 2074 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetPhysicsFlags  (EPF_ONBLOCK_CLIMBORSLIDE  
#line 2075 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
| EPF_TRANSLATEDBYGRAVITY  
#line 2076 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
| EPF_MOVABLE  
#line 2077 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
| EPF_ABSOLUTETRANSLATE );
#line 2078 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetCollisionFlags  (ECF_MODEL_NO_COLLISION );
#line 2082 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
en_tmMaxHoldBreath  = 60.0f;
#line 2083 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
en_fDensity  = 1000.0f;
#line 2085 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetFlagOn  (ENF_RENDERREFLECTION );
#line 2088 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_aWalkRotateSpeed  = AngleDeg  (1800.0f);
#line 2089 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_aAttackRotateSpeed  = AngleDeg  (1800.0f);
#line 2090 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_aCloseRotateSpeed  = AngleDeg  (1800.0f);
#line 2093 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fAttackFireTime  = 2.0f;
#line 2094 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fCloseFireTime  = 2.0f;
#line 2095 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fBlowUpAmount  = 80.0f;
#line 2096 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fBodyParts  = 4;
#line 2097 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_fDamageWounded  = 0.0f;
#line 2100 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> StretchModel  (FLOAT3D (m_fStretch  , m_fStretch  , m_fStretch ));
#line 2101 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> mi_bRenderShadow  = TRUE ;
#line 2103 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
SetHealth  (10000.0f);
#line 2104 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
ModelChangeNotify  ();
#line 2107 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
m_bPlayAttackAnim  = FALSE ;
#line 2110 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
if(GetModelInstance  ())
#line 2111 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
{
#line 2112 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
CSkaTag  tag ;
#line 2113 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetName  ("__ROOT");
#line 2114 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 2115 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 2116 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetName  ("__TOP");
#line 2117 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetRot  (GetEulerAngleFromQuaternion  (en_pmiModelInstance  -> mi_qvOffset  . qRot ));
#line 2118 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
FLOATaabbox3D aabb ;
#line 2119 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> GetAllFramesBBox  (aabb );
#line 2120 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
tag  . SetOffsetPos  (0 , aabb  . Size  () (2) , 0);
#line 2121 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
GetModelInstance  () -> m_tmSkaTagManager  . Register  (& tag );
#line 2122 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
}
#line 2126 "E:/질산/Korea/Client_USA/EntitiesMP/WildPet.es"
Jump(STATE_CURRENT, STATE_CWildPetBase_MainLoop, FALSE, EVoid());return TRUE; ASSERT(FALSE); return TRUE;};