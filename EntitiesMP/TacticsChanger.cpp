/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"

#include "StdH.h"
#include "TacticsHolder.h"

#include <EntitiesMP/TacticsChanger.h>
#include <EntitiesMP/TacticsChanger_tables.h>
void CTacticsChanger::SetDefaultProperties(void) {
  m_strName = "TacticsChanger";
  m_strDescription = "";
  m_tctType = TCT_NONE ;
  m_fParam1 = 0.0f;
  m_fParam2 = 0.0f;
  m_fParam3 = 0.0f;
  m_fParam4 = 0.0f;
  m_fParam5 = 0.0f;
  m_penTacticsHolder = NULL;
  CRationalEntity::SetDefaultProperties();
}
  
#line 32 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
const CTString & CTacticsChanger::GetDescription(void)const {
#line 33 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
return m_strDescription ;
#line 34 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
}
BOOL CTacticsChanger::
#line 37 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
Main(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CTacticsChanger_Main
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CTacticsChanger::Main expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput;
#line 39 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
InitAsEditorModel  ();
#line 40 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
SetPhysicsFlags  (EPF_MODEL_IMMATERIAL );
#line 41 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
SetCollisionFlags  (ECF_IMMATERIAL );
#line 44 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
SetModel  (MODEL_MANAGER );
#line 45 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
SetModelMainTexture  (TEXTURE_MANAGER );
#line 47 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00ec0000, FALSE, EBegin());return TRUE;}BOOL CTacticsChanger::H0x00ec0000_Main_01(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0000
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00ec0001, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTacticsChanger::H0x00ec0001_Main_02(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0001
;
#line 49 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
Jump(STATE_CURRENT,0x00ec0006, FALSE, EInternal());return TRUE;}BOOL CTacticsChanger::H0x00ec0006_Main_07(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0006
if(!(TRUE )){ Jump(STATE_CURRENT,0x00ec0007, FALSE, EInternal());return TRUE;}
#line 50 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
SetTimerAt(THINKTIME_NEVER);
Jump(STATE_CURRENT, 0x00ec0002, FALSE, EBegin());return TRUE;}BOOL CTacticsChanger::H0x00ec0002_Main_03(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0002
switch(__eeInput.ee_slEvent)
#line 51 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
{case(EVENTCODE_ETrigger):{const ETrigger&e= (ETrigger&)__eeInput;

#line 53 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
if(m_penTacticsHolder  != NULL ){
#line 54 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
CTacticsHolder  * penTactics  = & (CTacticsHolder  &) * m_penTacticsHolder ;
#line 55 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
penTactics  -> m_tctType  = m_tctType ;
#line 56 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
penTactics  -> m_fParam1  = m_fParam1 ;
#line 57 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
penTactics  -> m_fParam2  = m_fParam2 ;
#line 58 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
penTactics  -> m_fParam3  = m_fParam3 ;
#line 59 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
penTactics  -> m_fParam4  = m_fParam4 ;
#line 60 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
penTactics  -> m_fParam5  = m_fParam5 ;
#line 61 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
penTactics  -> m_tmLastActivation  = _pTimer  -> CurrentTick  ();
#line 62 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
}
#line 63 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
UnsetTimer();Jump(STATE_CURRENT,0x00ec0003, FALSE, EInternal());return TRUE;
#line 64 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
}ASSERT(FALSE);break;default:{
#line 66 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
return TRUE;
#line 67 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
}ASSERT(FALSE);break;
#line 68 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
}return TRUE;}BOOL CTacticsChanger::H0x00ec0003_Main_04(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0003
;
#line 71 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
SetTimerAfter(0.1f);
Jump(STATE_CURRENT, 0x00ec0004, FALSE, EBegin());return TRUE;}BOOL CTacticsChanger::H0x00ec0004_Main_05(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0004
switch(__eeInput.ee_slEvent) {case EVENTCODE_EBegin: return TRUE;case EVENTCODE_ETimer: Jump(STATE_CURRENT,0x00ec0005, FALSE, EInternal()); return TRUE;default: return FALSE; }}BOOL CTacticsChanger::H0x00ec0005_Main_06(const CEntityEvent &__eeInput){
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0005
;Jump(STATE_CURRENT,0x00ec0006, FALSE, EInternal());return TRUE;
#line 72 "E:/질산/Korea/Client_USA/EntitiesMP/TacticsChanger.es"
}BOOL CTacticsChanger::H0x00ec0007_Main_08(const CEntityEvent &__eeInput) {
ASSERT(__eeInput.ee_slEvent==EVENTCODE_EInternal);
#undef STATE_CURRENT
#define STATE_CURRENT 0x00ec0007
 ASSERT(FALSE); return TRUE;};