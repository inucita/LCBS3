/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 5 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"

#include "StdH.h"
#include <Engine/Entities/InternalClasses.h>
#include <Engine/Base/Stream.h>
#include <Engine/Base/CRC.h>

#include <Engine/Classes/PlayerEntity.h>
#include <Engine/Classes/PlayerEntity_tables.h>
void CPlayerEntity::SetDefaultProperties(void) {
  en_tmPing = 0.0f;
  CMovableModelEntity::SetDefaultProperties();
}
  
#line 28 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
void CPlayerEntity::InitializePlayer(ULONG ulWeaponsID,ULONG ulAnimatorID) 
#line 29 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 30 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
EPlayerInit  ePLInit ;
#line 31 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
ePLInit  . ulWeaponsID  = ulWeaponsID ;
#line 32 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
ePLInit  . ulAnimatorID  = ulAnimatorID ;
#line 33 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
ePLInit  . bCreate  = TRUE ;
#line 34 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
Initialize  (ePLInit  , FALSE );
#line 35 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  void CPlayerEntity::SetWeaponAndAnimator() {}
  BOOL CPlayerEntity::IsPlayer() {return TRUE ;}
  void CPlayerEntity::DumpToConsole() {}
  void CPlayerEntity::Read_net_Mob(int index,CNetworkMessage * istr) {}
  void CPlayerEntity::Read_net_Character(int index,CNetworkMessage * istr) {}
  void CPlayerEntity::Read_net_Pet(int index,CNetworkMessage * istr) {}
  void CPlayerEntity::Read_net_WildPet(int index,CNetworkMessage * istr) {}
  void CPlayerEntity::Read_net_Summon(int index,CNetworkMessage * istr) {}
  void CPlayerEntity::Read_net_Damage(SBYTE sbType,CNetworkMessage * istr) {}
  void CPlayerEntity::ProcessProduce(SBYTE sbChaType,SLONG slChaIndex,SBYTE sbTargetType,SLONG slTargetIndex,SLONG slTargetHP) {}
  void CPlayerEntity::StandDown(BOOL bStand) {}
  void CPlayerEntity::OpenGate(int iGateNumber,BOOL bOpenGate) {}
  void CPlayerEntity::SetMobData(CEntity * penEntity,SLONG hp,SLONG maxHp,int level,BOOL bNpc,int mobIdx) {}
  void CPlayerEntity::SetChaData(int index,int type,ULONG hp,ULONG maxHp,SBYTE hairstyle,SBYTE facestyle,CTString & strName,SBYTE state,SBYTE pkTitle,SLONG pkstate) {}
  void CPlayerEntity::SetPetData(CEntity * penEntity,SLONG hp,SLONG maxHP) {}
  void CPlayerEntity::SetWildPetData(CEntity * penEntity,SLONG hp,SLONG maxHP) {}
  void CPlayerEntity::SetPetColor(CEntity * penEntity,UBYTE sbPetColor) {}
  void CPlayerEntity::SetElementalData(CEntity * penEntity,SLONG hp,SLONG maxHP) {}
  void CPlayerEntity::SetElementalStatus(CEntity * penEntity,SBYTE sbAttackSpeed,SBYTE sbMagicSpeed,LONG lSkillSpeed,FLOAT fWalkSpeed,FLOAT fRunSpeed,FLOAT fAttackRange) {}
  void CPlayerEntity::SetShopData(INDEX index,SBYTE sbShopType) {}
  void CPlayerEntity::StartCamera(CEntity * pTarget,BOOL bRestart) {}
  void CPlayerEntity::GetProjection(CAnyProjection3D & apr) {}
  void CPlayerEntity::LostTarget() {}
  void CPlayerEntity::UseSkill(int skillIndex) {}
  void CPlayerEntity::UsePetPickItem() {}
  void CPlayerEntity::UsePetSkill(int skillIndex) {}
  void CPlayerEntity::UseSlaveSkill(CEntity * pEntity,int skillIndex) {}
  void CPlayerEntity::UseWildSkill(CEntity * pEntity,int skillIndex) {}
  void CPlayerEntity::CancelSkill(BOOL bLostTarget,BOOL bAutoAttack,BOOL bSkillError) {}
  void CPlayerEntity::LoadSkillAnimID() {}
  void CPlayerEntity::UseAction(int ActionIndex) {}
  void CPlayerEntity::StopMove() {}
  void CPlayerEntity::SetProduct(SLONG slChaIndex,SBYTE slProductType) {}
  void CPlayerEntity::SetConsensus(SLONG slChaIndex) {}
  void CPlayerEntity::WarpTeleport(FLOAT fX,FLOAT fZ,FLOAT fH,FLOAT fR,SBYTE sbLayer) {}
  void CPlayerEntity::SingleModeOn() {}
  void CPlayerEntity::FieldModeOn() {}
  void CPlayerEntity::SetLegit(UBYTE sbType,SLONG chaindex) {}
  void CPlayerEntity::SetRepairLegit(SLONG chaindex,CCharacterTarget * Ct) {}
  BOOL CPlayerEntity::IsLegit() {return FALSE ;}
  void CPlayerEntity::ClearMultiTargets() {}
  void CPlayerEntity::RidingPet(CEntity * pCharacter,INDEX iPetType) {}
  void CPlayerEntity::LeavingPet(CEntity * pCharacter) {}
  BOOL CPlayerEntity::IsRidePet(CEntity * pCharacter) {return FALSE ;}
  BOOL CPlayerEntity::IsMoving() {return FALSE ;}
  BOOL CPlayerEntity::IsActionSitting() {return FALSE ;}
  BOOL CPlayerEntity::IsIdle() {return FALSE ;}
  void CPlayerEntity::ClearTargetInfo(CEntity * penEntity) {}
  void CPlayerEntity::SetCharacterHairChange(CEntity * penEntity,SBYTE sbType,INDEX Cnt,BOOL IsMe) {}
  void CPlayerEntity::SetCharacterAppearance(CModelInstance * pMI,int iJob,SBYTE sbHairStyle,SBYTE sbFaceStyle) {}
  void CPlayerEntity::ChangeFaceMesh(CModelInstance * pMI,int iJob,SBYTE sbType) {}
  void CPlayerEntity::ChangeHairMesh(CModelInstance * pMI,int iJob,SBYTE sbType) {}
  void CPlayerEntity::CancelProduct() {}
  void CPlayerEntity::DeleteWearingWeapon(BOOL bException) {}
  void CPlayerEntity::AppearWearingWeapon() {}
  void CPlayerEntity::DeleteDefaultArmor(int type) {}
  void CPlayerEntity::WearingDefaultArmor(int type) {}
  void CPlayerEntity::DeleteCurrentArmor(int weartype) {}
  void CPlayerEntity::SetChaWearing(class CCharacterTarget & ct,CEntity * penEntity,CNetworkMessage * istr) {}
  void CPlayerEntity::Rebirth() {}
  void CPlayerEntity::DeathYou() {}
  void CPlayerEntity::DeathInit() {}
  BOOL CPlayerEntity::IsAlreadyDie() {return FALSE ;}
  void CPlayerEntity::SetDie() {}
  void CPlayerEntity::SetTarget(CEntity * penEntity) {}
  void CPlayerEntity::SetTarget(SLONG targetID,SBYTE targetType) {}
  BOOL CPlayerEntity::IsSameTarget(CEntity * penEntity) {return FALSE ;}
  void CPlayerEntity::SetTargetMe() {}
  void CPlayerEntity::PlayItemSound(BOOL bPick,BOOL bMoney) {}
  void CPlayerEntity::PlayButtonSound() {}
  void CPlayerEntity::CommandAttack() {}
  BOOL CPlayerEntity::CommandAction() {return FALSE ;}
  void CPlayerEntity::PlayBGM(CTFileName fnFileName) {}
  void CPlayerEntity::SearchNearItem() {}
  BOOL CPlayerEntity::IsSkilling() {return FALSE ;}
  BOOL CPlayerEntity::IsSitting() {return FALSE ;}
  BOOL CPlayerEntity::IsAttacking() {return FALSE ;}
  BOOL CPlayerEntity::IsPetActing() {return FALSE ;}
  BOOL CPlayerEntity::IsProduct() {return FALSE ;}
  void CPlayerEntity::SetSpeedUp(BOOL bMe,INDEX index,BOOL bSpeedup) {}
  BOOL CPlayerEntity::CheckEscKey(void) {return FALSE ;}
  void CPlayerEntity::PlayItemEffect(SLONG itemindex,SBYTE effecttype) {}
  BOOL CPlayerEntity::IsSocialActing() {return FALSE ;}
  BOOL CPlayerEntity::IsPolymophing() {return FALSE ;}
  BOOL CPlayerEntity::IsTransforming() {return FALSE ;}
  void CPlayerEntity::AppearChaPolymoph(CEntity * pentity,INDEX mobindex) {}
  void CPlayerEntity::TransfromPet(CEntity * pentity,INDEX mobIndex,INDEX mobSize) {}
  void CPlayerEntity::ReturnTransformPet(CEntity * pentity) {}
  void CPlayerEntity::TransformSorcerer(int iType) {}
  void CPlayerEntity::ReturnSorcerer() {}
  void CPlayerEntity::AppearChaTransform(CEntity * pEntity,INDEX iTransformType) {}
  void CPlayerEntity::PlAddAccessoryEffect(INDEX iCt,CEntity * penEntity,BOOL bIsMe) {}
  void CPlayerEntity::EvocationStart(LONG lIndex,SBYTE sbType) {}
  void CPlayerEntity::EvocationStop(LONG lIndex) {}
  BOOL CPlayerEntity::CheckChangeCondition(INDEX level,INDEX zone) {return FALSE ;}
  void CPlayerEntity::SetSummonCommand(CEntity * pEntity,INDEX iCommand) {}
  BOOL CPlayerEntity::CheckNormalAttack(CEntity * pEntity,FLOAT fDist) {return FALSE ;}
  CModelInstance * CPlayerEntity::GetPlayerModelInstance(CEntity * pEntity) {return NULL ;}
  BOOL CPlayerEntity::CheckAttackTarget(INDEX iSkillIndex,CEntity * pEntity,FLOAT fDist) {return FALSE ;}
  BOOL CPlayerEntity::CheckEntityOfTarget(CEntity * pEntity,CEntity * pTarget) {return FALSE ;}
  void CPlayerEntity::ReturnChange(BOOL bAppear) {}
  void CPlayerEntity::AddDeathItem(CEntity * penEnemy,FLOAT3D pos,class CItemTarget * pItemTarget,class CItemData * pItemData) {}
  void CPlayerEntity::DropDeathItem(CEntity * penEnemy) {}
  CTString CPlayerEntity::GetPlayerName(void) 
#line 193 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 194 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
return en_pcCharacter  . GetNameForPrinting  ();
#line 195 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  const CTString & CPlayerEntity::GetName(void)const 
#line 197 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 198 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
return en_pcCharacter  . GetName  ();
#line 199 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  INDEX CPlayerEntity::GetMyPlayerIndex(void) 
#line 204 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 205 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
CEntity  * penMe  = this ;
#line 206 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
for(INDEX iPlayer  = 0;iPlayer  < GetMaxPlayers  ();iPlayer  ++){
#line 208 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
if(GetPlayerEntity  (iPlayer ) == penMe ){
#line 209 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
return iPlayer ;
#line 210 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
#line 211 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
#line 213 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
return 15;
#line 214 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  void CPlayerEntity::DoMoving(void) 
#line 218 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 219 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
CMovableModelEntity  :: DoMoving  ();
#line 220 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  void CPlayerEntity::Copy(CEntity & enOther,ULONG ulFlags) 
#line 224 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 225 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
CMovableModelEntity  :: Copy  (enOther  , ulFlags );
#line 227 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
CPlayerEntity  * ppenOther  = (CPlayerEntity  *) (& enOther );
#line 228 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
en_pcCharacter  = ppenOther  -> en_pcCharacter ;
#line 229 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
en_plViewpoint  = ppenOther  -> en_plViewpoint ;
#line 230 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
en_plLastViewpoint  = ppenOther  -> en_plLastViewpoint ;
#line 231 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  void CPlayerEntity::Read_t(CTStream * istr,BOOL bNetwork) 
#line 243 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 244 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
CMovableModelEntity  :: Read_t  (istr  , bNetwork );
#line 245 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
(* istr ) >> en_pcCharacter  >> en_plViewpoint ;
#line 246 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
en_plLastViewpoint  = en_plViewpoint ;
#line 247 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  void CPlayerEntity::Write_t(CTStream * ostr,BOOL bNetwork) 
#line 250 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
{
#line 251 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
CMovableModelEntity  :: Write_t  (ostr  , bNetwork );
#line 252 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
(* ostr ) << en_pcCharacter  << en_plViewpoint ;
#line 253 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
}
  void CPlayerEntity::ApplyAction(const CPlayerAction & pa,FLOAT tmLatency) {}
  void CPlayerEntity::Disconnect(void) {}
  void CPlayerEntity::CharacterChanged(const CPlayerCharacter & pcNew) {en_pcCharacter  = pcNew ;}
BOOL CPlayerEntity::
#line 269 "E:/질산/Korea/Client_USA/Engine/Classes/PlayerEntity.es"
Dummy(const CEntityEvent &__eeInput) {
#undef STATE_CURRENT
#define STATE_CURRENT STATE_CPlayerEntity_Dummy
  ASSERTMSG(__eeInput.ee_slEvent==EVENTCODE_EVoid, "CPlayerEntity::Dummy expects 'EVoid' as input!");  const EVoid &e = (const EVoid &)__eeInput; ASSERT(FALSE); return TRUE;};