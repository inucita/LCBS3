/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#line 2 "C:/Users/Nico/Documents/LC Source - und zeug/LC Source/Client_USA/Engine/Classes/BaseEvents.es"

#include "StdH.h"
#define DECL_DLL ENGINE_API
#include <Engine/Entities/EntityEvent.h>
#include <Engine/Entities/EntityPointer.h>
#include <Engine/Math/Vector.h>
#include <Engine/Math/Plane.h>
#include <Engine/Entities/EntityProperties.h>

#include <Engine/Classes/BaseEvents.h>
#include <Engine/Classes/BaseEvents_tables.h>
CEntityEvent *EInternal::MakeCopy(void) { CEntityEvent *peeCopy = new EInternal(*this); return peeCopy;}
SLONG EInternal::GetSizeOf(void) { return sizeof(*this);}
EInternal::EInternal() : CEntityEvent(EVENTCODE_EInternal) {;
};
BOOL EInternal::CheckIDs(void) { return TRUE ; }
CEntityEvent *EVoid::MakeCopy(void) { CEntityEvent *peeCopy = new EVoid(*this); return peeCopy;}
SLONG EVoid::GetSizeOf(void) { return sizeof(*this);}
EVoid::EVoid() : CEntityEvent(EVENTCODE_EVoid) {;
};
BOOL EVoid::CheckIDs(void) { return TRUE ; }
CEntityEvent *EReturn::MakeCopy(void) { CEntityEvent *peeCopy = new EReturn(*this); return peeCopy;}
SLONG EReturn::GetSizeOf(void) { return sizeof(*this);}
EReturn::EReturn() : CEntityEvent(EVENTCODE_EReturn) {;
};
BOOL EReturn::CheckIDs(void) { return TRUE ; }
CEntityEvent *EBegin::MakeCopy(void) { CEntityEvent *peeCopy = new EBegin(*this); return peeCopy;}
SLONG EBegin::GetSizeOf(void) { return sizeof(*this);}
EBegin::EBegin() : CEntityEvent(EVENTCODE_EBegin) {;
};
BOOL EBegin::CheckIDs(void) { return TRUE ; }
CEntityEvent *ETimer::MakeCopy(void) { CEntityEvent *peeCopy = new ETimer(*this); return peeCopy;}
SLONG ETimer::GetSizeOf(void) { return sizeof(*this);}
ETimer::ETimer() : CEntityEvent(EVENTCODE_ETimer) {;
};
BOOL ETimer::CheckIDs(void) { return TRUE ; }
CEntityEvent *ETouch::MakeCopy(void) { CEntityEvent *peeCopy = new ETouch(*this); return peeCopy;}
SLONG ETouch::GetSizeOf(void) { return sizeof(*this);}
ETouch::ETouch() : CEntityEvent(EVENTCODE_ETouch) {;
 ClearToDefault(penOther);
 ClearToDefault(bThisMoved);
 ClearToDefault(plCollision);
};
BOOL ETouch::CheckIDs(void) { return TRUE ; }
CEntityEvent *EPass::MakeCopy(void) { CEntityEvent *peeCopy = new EPass(*this); return peeCopy;}
SLONG EPass::GetSizeOf(void) { return sizeof(*this);}
EPass::EPass() : CEntityEvent(EVENTCODE_EPass) {;
 ClearToDefault(penOther);
 ClearToDefault(bThisMoved);
};
BOOL EPass::CheckIDs(void) { return TRUE ; }
CEntityEvent *EBlock::MakeCopy(void) { CEntityEvent *peeCopy = new EBlock(*this); return peeCopy;}
SLONG EBlock::GetSizeOf(void) { return sizeof(*this);}
EBlock::EBlock() : CEntityEvent(EVENTCODE_EBlock) {;
 ClearToDefault(penOther);
 ClearToDefault(plCollision);
};
BOOL EBlock::CheckIDs(void) { return TRUE ; }
CEntityEvent *EWouldFall::MakeCopy(void) { CEntityEvent *peeCopy = new EWouldFall(*this); return peeCopy;}
SLONG EWouldFall::GetSizeOf(void) { return sizeof(*this);}
EWouldFall::EWouldFall() : CEntityEvent(EVENTCODE_EWouldFall) {;
};
BOOL EWouldFall::CheckIDs(void) { return TRUE ; }
CEntityEvent *ETeleport::MakeCopy(void) { CEntityEvent *peeCopy = new ETeleport(*this); return peeCopy;}
SLONG ETeleport::GetSizeOf(void) { return sizeof(*this);}
ETeleport::ETeleport() : CEntityEvent(EVENTCODE_ETeleport) {;
};
BOOL ETeleport::CheckIDs(void) { return TRUE ; }
CEntityEvent *EPreLevelChange::MakeCopy(void) { CEntityEvent *peeCopy = new EPreLevelChange(*this); return peeCopy;}
SLONG EPreLevelChange::GetSizeOf(void) { return sizeof(*this);}
EPreLevelChange::EPreLevelChange() : CEntityEvent(EVENTCODE_EPreLevelChange) {;
 ClearToDefault(iUserData);
};
BOOL EPreLevelChange::CheckIDs(void) { return TRUE ; }
CEntityEvent *EPostLevelChange::MakeCopy(void) { CEntityEvent *peeCopy = new EPostLevelChange(*this); return peeCopy;}
SLONG EPostLevelChange::GetSizeOf(void) { return sizeof(*this);}
EPostLevelChange::EPostLevelChange() : CEntityEvent(EVENTCODE_EPostLevelChange) {;
 ClearToDefault(iUserData);
};
BOOL EPostLevelChange::CheckIDs(void) { return TRUE ; }
CEntityEvent *EFirstWorldBase::MakeCopy(void) { CEntityEvent *peeCopy = new EFirstWorldBase(*this); return peeCopy;}
SLONG EFirstWorldBase::GetSizeOf(void) { return sizeof(*this);}
EFirstWorldBase::EFirstWorldBase() : CEntityEvent(EVENTCODE_EFirstWorldBase) {;
};
BOOL EFirstWorldBase::CheckIDs(void) { return TRUE ; }
CEntityEvent *EDamage::MakeCopy(void) { CEntityEvent *peeCopy = new EDamage(*this); return peeCopy;}
SLONG EDamage::GetSizeOf(void) { return sizeof(*this);}
EDamage::EDamage() : CEntityEvent(EVENTCODE_EDamage) {;
 ClearToDefault(penInflictor);
 ClearToDefault(vDirection);
 ClearToDefault(vHitPoint);
 ClearToDefault(fAmount);
 ClearToDefault(dmtType);
};
BOOL EDamage::CheckIDs(void) { return TRUE ; }
CEntityEvent *EDeath::MakeCopy(void) { CEntityEvent *peeCopy = new EDeath(*this); return peeCopy;}
SLONG EDeath::GetSizeOf(void) { return sizeof(*this);}
EDeath::EDeath() : CEntityEvent(EVENTCODE_EDeath) {;
 ClearToDefault(eLastDamage);
};
BOOL EDeath::CheckIDs(void) { return TRUE ; }
CEntityEvent *ETakingBreath::MakeCopy(void) { CEntityEvent *peeCopy = new ETakingBreath(*this); return peeCopy;}
SLONG ETakingBreath::GetSizeOf(void) { return sizeof(*this);}
ETakingBreath::ETakingBreath() : CEntityEvent(EVENTCODE_ETakingBreath) {;
 ClearToDefault(fBreathDelay);
};
BOOL ETakingBreath::CheckIDs(void) { return TRUE ; }
CEntityEvent *EPlayerInit::MakeCopy(void) { CEntityEvent *peeCopy = new EPlayerInit(*this); return peeCopy;}
SLONG EPlayerInit::GetSizeOf(void) { return sizeof(*this);}
EPlayerInit::EPlayerInit() : CEntityEvent(EVENTCODE_EPlayerInit) {;
 ClearToDefault(ulWeaponsID);
 ClearToDefault(ulAnimatorID);
 ClearToDefault(bCreate);
};
BOOL EPlayerInit::CheckIDs(void) { return TRUE ; }
